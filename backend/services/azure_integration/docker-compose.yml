# Docker Compose for Azure Integration Service Local Development

version: '3.8'

services:
  azure-integration:
    build: .
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - SERVICE_NAME=azure-integration
      - SERVICE_PORT=8001
      - LOG_LEVEL=INFO
      
      # Azure Configuration (use your actual values)
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_RESOURCE_GROUP=${AZURE_RESOURCE_GROUP}
      - AZURE_LOCATION=${AZURE_LOCATION:-eastus}
      
      # Key Vault Configuration
      - AZURE_KEY_VAULT_NAME=${AZURE_KEY_VAULT_NAME}
      - AZURE_KEY_VAULT_URL=${AZURE_KEY_VAULT_URL}
      
      # Database Configuration
      - AZURE_SQL_SERVER=${AZURE_SQL_SERVER}
      - AZURE_SQL_DATABASE=${AZURE_SQL_DATABASE:-policortex001}
      - AZURE_SQL_USERNAME=${AZURE_SQL_USERNAME}
      - AZURE_SQL_PASSWORD=${AZURE_SQL_PASSWORD}
      
      # Redis Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Security Configuration
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-for-development}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRATION_MINUTES=30
      
      # CORS Configuration
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000
      
      # Service URLs
      - API_GATEWAY_URL=http://host.docker.internal:8000
      - AI_ENGINE_URL=http://host.docker.internal:8002
      - DATA_PROCESSING_URL=http://host.docker.internal:8003
      - CONVERSATION_URL=http://host.docker.internal:8004
      - NOTIFICATION_URL=http://host.docker.internal:8005
      
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - policortex001-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - policortex001-network
    restart: unless-stopped

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - policortex001-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  policortex001-network:
    driver: bridge