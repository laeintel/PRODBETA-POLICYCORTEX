version: '3.8'

# Frontend Development Setup for Monitoring and Inspection
# This starts only the essential services needed for frontend development

services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: policycortex-redis-dev
    ports:
      - "6379:6379"
    networks:
      - policycortex-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # API Gateway (main backend service)
  api-gateway:
    build:
      context: ./backend
      dockerfile: services/api_gateway/Dockerfile
    container_name: policycortex-api-gateway-dev
    ports:
      - "8000:8000"
    env_file:
      - .env.development
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=api_gateway
      - PORT=8000
      - LOG_LEVEL=DEBUG
      - REDIS_CONNECTION_STRING=redis:6379
      # Override with development values
      - USE_LOCAL_STORAGE=true
      - ENABLE_CORS=true
      - DEBUG_MODE=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - policycortex-dev
    volumes:
      - ./backend/services/api_gateway:/app
      - ./backend/core:/app/core
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://localhost:8000/api
        - VITE_WS_URL=ws://localhost:8000/ws
        - VITE_AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
        - VITE_AZURE_TENANT_ID=${AZURE_TENANT_ID}
        - VITE_AZURE_REDIRECT_URI=http://localhost:5173
        - VITE_ENVIRONMENT=development
    container_name: policycortex-frontend-dev
    ports:
      - "5173:80"  # Map to port 5173 for consistency
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000/api
      - VITE_WS_URL=ws://localhost:8000/ws
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - policycortex-dev
    volumes:
      # Mount source for hot reload in development
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
    restart: unless-stopped

  # Azure Integration Service (for Azure API calls)
  azure-integration:
    build:
      context: ./backend
      dockerfile: services/azure_integration/Dockerfile
    container_name: policycortex-azure-integration-dev
    ports:
      - "8001:8001"
    env_file:
      - .env.development
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=azure_integration
      - PORT=8001
      - LOG_LEVEL=DEBUG
    depends_on:
      - redis
    networks:
      - policycortex-dev
    volumes:
      - ./backend/services/azure_integration:/app
      - ./backend/core:/app/core
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  policycortex-dev:
    driver: bridge
    name: policycortex-dev-network

# For development, we can use local volumes instead of Docker volumes
volumes:
  redis-data-dev:
    name: policycortex-redis-dev-data