apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: policycortex-ingress
  namespace: policycortex-prod
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - policycortex.azure.com
    - api.policycortex.azure.com
    - graphql.policycortex.azure.com
    secretName: policycortex-tls
  rules:
  - host: api.policycortex.azure.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: core-service
            port:
              number: 8080
  - host: graphql.policycortex.azure.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: graphql-service
            port:
              number: 4000
  - host: policycortex.azure.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80