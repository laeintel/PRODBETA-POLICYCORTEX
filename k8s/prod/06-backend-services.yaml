apiVersion: apps/v1
kind: Deployment
metadata:
  name: quantum-service
  namespace: policycortex-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quantum-service
  template:
    metadata:
      labels:
        app: quantum-service
    spec:
      containers:
      - name: quantum-service
        image: ACR_NAME.azurecr.io/quantum-service:IMAGE_TAG
        ports:
        - containerPort: 8081
        env:
        - name: SERVICE_NAME
          value: "quantum"
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: quantum-service
  namespace: policycortex-prod
spec:
  selector:
    app: quantum-service
  ports:
  - port: 8081
    targetPort: 8081
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-service
  namespace: policycortex-prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: edge-service
  template:
    metadata:
      labels:
        app: edge-service
    spec:
      containers:
      - name: edge-service
        image: ACR_NAME.azurecr.io/edge-service:IMAGE_TAG
        ports:
        - containerPort: 8082
        env:
        - name: SERVICE_NAME
          value: "edge"
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "768Mi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: edge-service
  namespace: policycortex-prod
spec:
  selector:
    app: edge-service
  ports:
  - port: 8082
    targetPort: 8082
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blockchain-service
  namespace: policycortex-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: blockchain-service
  template:
    metadata:
      labels:
        app: blockchain-service
    spec:
      containers:
      - name: blockchain-service
        image: ACR_NAME.azurecr.io/blockchain-service:IMAGE_TAG
        ports:
        - containerPort: 8083
        env:
        - name: SERVICE_NAME
          value: "blockchain"
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: blockchain-storage
          mountPath: /data
      volumes:
      - name: blockchain-storage
        persistentVolumeClaim:
          claimName: blockchain-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-service
  namespace: policycortex-prod
spec:
  selector:
    app: blockchain-service
  ports:
  - port: 8083
    targetPort: 8083
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blockchain-pvc
  namespace: policycortex-prod
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 100Gi