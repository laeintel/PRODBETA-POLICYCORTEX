Checking aws-sdk-s3 v1.101.0
    Checking policycortex-core v2.0.0 (/home/aeolitech/actions-runner4/_work/policycortex/policycortex/core)
error: unused imports: `EvaluationHarness`, `EvaluationReport`, `ModelCard`, `ModelMetrics`, `ModelRegistry`, `ModelType`, and `TrainingDataLineage`
 --> src/ai/mod.rs:4:5
  |
4 |     EvaluationHarness, EvaluationReport, ModelCard, ModelMetrics, ModelRegistry, ModelType,
  |     ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^
5 |     TrainingDataLineage,
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = note: `-D unused-imports` implied by `-D warnings`
  = help: to override `-D warnings` add `#[allow(unused_imports)]`

error: unused imports: `Aggregation`, `ErrorBudget`, `SLIType`, `SLI`, `SLOWindow`, and `SLO`
 --> src/api/mod.rs:3:18
  |
3 | use crate::slo::{Aggregation, ErrorBudget, SLIType, SLOManager, SLOWindow, SLI, SLO};
  |                  ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^              ^^^^^^^^^  ^^^  ^^^

error: unused import: `axum::routing::post`
 --> src/api/mod.rs:4:5
  |
4 | use axum::routing::post;
  |     ^^^^^^^^^^^^^^^^^^^

error: unused import: `Query`
 --> src/api/mod.rs:7:21
  |
7 |     extract::{Path, Query, State},
  |                     ^^^^^

error: unused import: `AUTHORIZATION`
  --> src/api/mod.rs:19:23
   |
19 | use reqwest::header::{AUTHORIZATION, CONTENT_TYPE};
   |                       ^^^^^^^^^^^^^

error: unused import: `std::collections::HashMap`
  --> src/api/mod.rs:22:5
   |
22 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

error: unused imports: `DataMode` and `DataResponse`
    --> src/api/mod.rs:1569:28
     |
1569 |     use crate::data_mode::{DataMode, DataModeGuard, DataResponse};
     |                            ^^^^^^^^                 ^^^^^^^^^^^^

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hyper`
   --> src/api/mod.rs:959:20
    |
959 |         let body = hyper::body::to_bytes(resp.into_body()).await.unwrap();
    |                    ^^^^^ use of unresolved module or unlinked crate `hyper`
    |
    = help: if you wanted to use a crate named `hyper`, use `cargo add hyper` to add it to your `Cargo.toml`
help: consider importing this module
    |
951 +     use axum::body;
    |
help: if you import `body`, refer to it directly
    |
959 -         let body = hyper::body::to_bytes(resp.into_body()).await.unwrap();
959 +         let body = body::to_bytes(resp.into_body()).await.unwrap();
    |

error: unused import: `DateTime`
 --> src/approval_workflow.rs:5:14
  |
5 | use chrono::{DateTime, Duration, Utc};
  |              ^^^^^^^^

error: unused import: `error`
  --> src/approval_workflow.rs:10:15
   |
10 | use tracing::{error, info, warn};
   |               ^^^^^

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `hyper`
   --> src/api/mod.rs:973:20
    |
973 |         let body = hyper::body::to_bytes(resp.into_body()).await.unwrap();
    |                    ^^^^^ use of unresolved module or unlinked crate `hyper`
    |
    = help: if you wanted to use a crate named `hyper`, use `cargo add hyper` to add it to your `Cargo.toml`
help: consider importing this module
    |
951 +     use axum::body;
    |
help: if you import `body`, refer to it directly
    |
973 -         let body = hyper::body::to_bytes(resp.into_body()).await.unwrap();
973 +         let body = body::to_bytes(resp.into_body()).await.unwrap();
    |

error: unused imports: `AuthUser` and `Claims`
 --> src/auth_middleware.rs:1:19
  |
1 | use crate::auth::{AuthUser, Claims, TokenValidator};
  |                   ^^^^^^^^  ^^^^^^

error: unused import: `Serialize`
 --> src/azure_client.rs:5:26
  |
5 | use serde::{Deserialize, Serialize};
  |                          ^^^^^^^^^

error: unused import: `RequestBuilder`
 --> src/azure_client_async.rs:6:23
  |
6 | use reqwest::{Client, RequestBuilder};
  |                       ^^^^^^^^^^^^^^

error: unused imports: `Deserialize` and `Serialize`
 --> src/collectors/gcp_collector.rs:2:13
  |
2 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

error: unused imports: `CloudProvider`, `ComplianceStatus`, and `ResourceType`
 --> src/collectors/gcp_collector.rs:5:44
  |
5 |     AuditLog, CloudCollector, CloudPolicy, CloudProvider, CloudResource, ComplianceStatus,
  |                                            ^^^^^^^^^^^^^                 ^^^^^^^^^^^^^^^^
6 |     ResourceType,
  |     ^^^^^^^^^^^^

error: unused import: `AwsCollector`
 --> src/collectors/mod.rs:5:15
  |
5 |     AuditLog, AwsCollector, CloudCollector, CloudPolicy, CloudProvider, CloudResource,
  |               ^^^^^^^^^^^^

error: unused import: `gcp_collector::GcpCollector`
 --> src/collectors/mod.rs:8:9
  |
8 | pub use gcp_collector::GcpCollector;
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: this import is redundant
  --> src/events/mod.rs:14:1
   |
14 | use async_nats;
   | ^^^^^^^^^^^^^^^ help: remove it entirely
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports
   = note: `-D clippy::single-component-path-imports` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::single_component_path_imports)]`

error: unused import: `error`
 --> src/evidence_pipeline.rs:8:15
  |
8 | use tracing::{error, info, warn};
  |               ^^^^^

error: unused import: `Duration`
 --> src/finops/mod.rs:5:24
  |
5 | use chrono::{DateTime, Duration, Utc};
  |                        ^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/access_control.rs:5:42
  |
5 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/blueprints.rs:6:42
  |
6 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/cost_management.rs:5:42
  |
5 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `NaiveDate`
 --> src/governance/cost_management.rs:6:34
  |
6 | use chrono::{DateTime, Duration, NaiveDate, Utc};
  |                                  ^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/identity.rs:5:42
  |
5 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/monitoring.rs:5:42
  |
5 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/network.rs:6:42
  |
6 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/optimization.rs:6:42
  |
6 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused imports: `Error as AzureError` and `Result as AzureResult`
 --> src/governance/resource_graph.rs:6:18
  |
6 | use azure_core::{Error as AzureError, Result as AzureResult};
  |                  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

error: unused import: `GovernanceError`
 --> src/governance/security_posture.rs:5:42
  |
5 | use crate::governance::{ComponentHealth, GovernanceError, GovernanceResult, HealthStatus};
  |                                          ^^^^^^^^^^^^^^^

error: unused imports: `AzureResource`, `ComplianceState`, `GovernanceCoordinator`, `GovernanceMonitor`, `IdentityGovernanceClient`, `MetricsResult`, `PolicyDefinition`, `PolicyEngine`, and `ResourceGraphClient`
 --> src/governance/unified_api.rs:5:16
  |
5 |     identity::{IdentityGovernanceClient, IdentityState},
  |                ^^^^^^^^^^^^^^^^^^^^^^^^
6 |     monitoring::{GovernanceMonitor, MetricsResult},
  |                  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^
7 |     policy_engine::{ComplianceState, PolicyDefinition, PolicyEngine},
  |                     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^
8 |     resource_graph::{AzureResource, ResourceGraphClient},
  |                      ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^
9 |     GovernanceCoordinator, GovernanceError, GovernanceResult,
  |     ^^^^^^^^^^^^^^^^^^^^^

error: unused imports: `GovernanceCoordinator` and `GovernanceError`
 --> src/governance/ai/mod.rs:4:25
  |
4 | use crate::governance::{GovernanceCoordinator, GovernanceError, GovernanceResult};
  |                         ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

error: unused import: `ConversationTurn`
 --> src/governance/ai/conversation.rs:4:34
  |
4 | use super::{ConversationContext, ConversationTurn};
  |                                  ^^^^^^^^^^^^^^^^

error: unused imports: `GovernanceCoordinator` and `GovernanceError`
 --> src/governance/ai/conversation.rs:5:25
  |
5 | use crate::governance::{GovernanceCoordinator, GovernanceError, GovernanceResult};
  |                         ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^

error: unused imports: `DateTime` and `Utc`
 --> src/governance/ai/conversation.rs:6:14
  |
6 | use chrono::{DateTime, Utc};
  |              ^^^^^^^^  ^^^

error: unused import: `GovernanceCoordinator`
 --> src/governance/ai/correlation.rs:4:25
  |
4 | use crate::governance::{GovernanceCoordinator, GovernanceError, GovernanceResult};
  |                         ^^^^^^^^^^^^^^^^^^^^^

error: unused import: `GovernanceCoordinator`
 --> src/governance/ai/prediction.rs:4:25
  |
4 | use crate::governance::{GovernanceCoordinator, GovernanceError, GovernanceResult};
  |                         ^^^^^^^^^^^^^^^^^^^^^

error: unused import: `tokio::sync::RwLock`
  --> src/governance/mod.rs:21:5
   |
21 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

error: unused import: `error`
 --> src/secrets.rs:8:15
  |
8 | use tracing::{error, info, warn};
  |               ^^^^^

error: unused import: `async_trait::async_trait`
 --> src/security_graph/mod.rs:5:5
  |
5 | use async_trait::async_trait;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

error: unused import: `dijkstra`
 --> src/security_graph/mod.rs:6:40
  |
6 | use petgraph::algo::{all_simple_paths, dijkstra};
  |                                        ^^^^^^^^

error: unused import: `HashSet`
 --> src/security_graph/mod.rs:9:33
  |
9 | use std::collections::{HashMap, HashSet};
  |                                 ^^^^^^^

error: unused import: `uuid::Uuid`
 --> src/simulated_data.rs:4:5
  |
4 | use uuid::Uuid;
  |     ^^^^^^^^^^

error: unused import: `warn`
 --> src/tenant.rs:9:21
  |
9 | use tracing::{info, warn};
  |                     ^^^^

error: unused import: `error`
  --> src/tenant_isolation.rs:11:15
   |
11 | use tracing::{error, info, warn};
   |               ^^^^^

error: unused imports: `AuthUser` and `OptionalAuthUser`
  --> src/main.rs:58:12
   |
58 | use auth::{AuthUser, OptionalAuthUser};
   |            ^^^^^^^^  ^^^^^^^^^^^^^^^^

error: unused imports: `TenantContext`, `TenantDatabase`, and `tenant_isolation_middleware`
  --> src/main.rs:62:24
   |
62 | use tenant_isolation::{tenant_isolation_middleware, TenantContext, TenantDatabase};
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

error: variable does not need to be mutable
   --> src/api/mod.rs:853:27
    |
853 | pub async fn realtime_sdp(mut req: axum::http::Request<Body>) -> impl IntoResponse {
    |                           ----^^^
    |                           |
    |                           help: remove this `mut`
    |
    = note: `-D unused-mut` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(unused_mut)]`

error: unused variable: `mode`
    --> src/api/mod.rs:1816:9
     |
1816 |     let mode = DataMode::from_env();
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_mode`
     |
     = note: `-D unused-variables` implied by `-D warnings`
     = help: to override `-D warnings` add `#[allow(unused_variables)]`

error: unused variable: `mode`
    --> src/api/mod.rs:1868:9
     |
1868 |     let mode = DataMode::from_env();
     |         ^^^^ help: if this is intentional, prefix it with an underscore: `_mode`

error: unused variable: `message`
   --> src/approval_workflow.rs:439:17
    |
439 |             let message = rule.notification_message.clone();
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_message`

error: unused variable: `query`
   --> src/audit_chain.rs:359:13
    |
359 |         let query = r#"
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

error: unused variable: `header`
   --> src/auth.rs:206:23
    |
206 |             if let Ok(header) = jsonwebtoken::decode_header(token) {
    |                       ^^^^^^ help: if this is intentional, prefix it with an underscore: `_header`

error: variable does not need to be mutable
  --> src/azure_client_async.rs:90:13
   |
90 |         let mut config = AzureClientConfig::default();
   |             ----^^^^^^
   |             |
   |             help: remove this `mut`

error: unused variable: `control`
   --> src/compliance/mod.rs:431:9
    |
431 |         control: &ComplianceControl,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_control`

error: unused variable: `key_id`
   --> src/evidence_pipeline.rs:442:9
    |
442 |         key_id: &str,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_id`

error: unused variable: `permission_set`
   --> src/governance/access_control.rs:514:14
    |
514 |         for (permission_set, usage_count) in frequent_permissions {
    |              ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_permission_set`

error: unused variable: `review_definition`
   --> src/governance/access_control.rs:622:9
    |
622 |         review_definition: AccessReviewDefinition,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_review_definition`

error: unused variable: `blueprint_id`
   --> src/governance/blueprints.rs:931:9
    |
931 |         blueprint_id: &str,
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_blueprint_id`

error: unused variable: `budget_request`
   --> src/governance/cost_management.rs:550:13
    |
550 |         let budget_request = self.build_budget_request(&budget)?;
    |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_budget_request`

error: unused variable: `budget_id`
   --> src/governance/cost_management.rs:835:9
    |
835 |         budget_id: &str,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_budget_id`

error: unused variable: `budget`
   --> src/governance/cost_management.rs:836:9
    |
836 |         budget: &BudgetDefinition,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_budget`

error: unused variable: `cost_data`
   --> src/governance/cost_management.rs:855:13
    |
855 |         let cost_data = self.fetch_cost_data(scope, 30).await?;
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cost_data`

error: unused variable: `task_data`
   --> src/governance/policy_engine.rs:590:13
    |
590 |         let task_data: serde_json::Value =
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_task_data`

error: unused variable: `query`
   --> src/governance/ai/conversation.rs:127:9
    |
127 |         query: &str,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

error: unused variable: `context`
   --> src/governance/ai/conversation.rs:129:9
    |
129 |         context: &ConversationContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

error: unused variable: `events`
   --> src/governance/ai/correlation.rs:303:9
    |
303 |         events: &[CrossDomainEvent],
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

error: unused variable: `correlation_id`
   --> src/governance/ai/correlation.rs:477:9
    |
477 |         correlation_id: &str,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_correlation_id`

error: unused variable: `model`
   --> src/ai/model_registry.rs:211:13
    |
211 |         let model = self
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_model`

error[E0560]: struct `auth::Claims` has no field named `tenant_id`
   --> src/tenant.rs:193:13
    |
193 |             tenant_id: None,
    |             ^^^^^^^^^ `auth::Claims` does not have this field
    |
    = note: available fields are: `iss`, `name`, `preferred_username`, `oid`, `groups`

error: unused import: `axum::response::IntoResponse`
   --> src/api/mod.rs:952:9
    |
952 |     use axum::response::IntoResponse as _;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: unused variable: `rule`
   --> src/approvals.rs:284:13
    |
284 |         for rule in &policy.sod_rules {
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_rule`

error: unused variable: `requester_id`
   --> src/approvals.rs:280:9
    |
280 |         requester_id: &str,
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_requester_id`

error: unused variable: `approver_id`
   --> src/approvals.rs:281:9
    |
281 |         approver_id: &str,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_approver_id`

error: unused variable: `result`
   --> src/change_management.rs:437:17
    |
437 |             let result: serde_json::Value = response
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

error: unused variable: `pricing`
   --> src/finops/mod.rs:287:9
    |
287 |         pricing: &serde_json::Value,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_pricing`

error: unused variable: `current`
   --> src/finops/mod.rs:343:37
    |
343 |     fn calculate_rightsizing(&self, current: &VmSku, metrics: &ResourceMetrics) -> Option<VmSku> {
    |                                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current`

error: unused variable: `metrics`
   --> src/finops/mod.rs:343:54
    |
343 |     fn calculate_rightsizing(&self, current: &VmSku, metrics: &ResourceMetrics) -> Option<VmSku> {
    |                                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metrics`

error: value assigned to `savings_achieved` is never read
   --> src/finops/mod.rs:954:17
    |
954 |         let mut savings_achieved = 0.0;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `-D unused-assignments` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(unused_assignments)]`

error: unused variable: `p`
   --> src/governance/cost_management.rs:328:13
    |
328 |             p if budget.forecasted_spend > budget.budget.amount => {
    |             ^ help: if this is intentional, prefix it with an underscore: `_p`

error: unused variable: `i`
   --> src/governance/cost_management.rs:763:14
    |
763 |         for (i, trend) in trends.iter().enumerate() {
    |              ^ help: if this is intentional, prefix it with an underscore: `_i`

error: unused variable: `events`
   --> src/governance/ai/correlation.rs:519:35
    |
519 |     pub fn analyze_pattern(&self, events: &[CrossDomainEvent]) -> Vec<CorrelationPattern> {
    |                                   ^^^^^^ help: if this is intentional, prefix it with an underscore: `_events`

error: variable does not need to be mutable
   --> src/governance/ai/prediction.rs:551:13
    |
551 |         let mut violation_history = Vec::new();
    |             ----^^^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

error: variable does not need to be mutable
   --> src/governance/ai/prediction.rs:552:13
    |
552 |         let mut resource_history = Vec::new();
    |             ----^^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

error: type `evidence_pipeline::StorageBackend` is more private than the item `evidence_pipeline::EvidencePipeline::new`
   --> src/evidence_pipeline.rs:147:5
    |
147 | /     pub async fn new(
148 | |         storage_backend: StorageBackend,
149 | |         db_pool: Option<sqlx::PgPool>,
150 | |     ) -> Result<Self, String> {
    | |_____________________________^ associated function `evidence_pipeline::EvidencePipeline::new` is reachable at visibility `pub(crate)`
    |
note: but type `evidence_pipeline::StorageBackend` is only usable at visibility `pub(self)`
   --> src/evidence_pipeline.rs:127:1
    |
127 | enum StorageBackend {
    | ^^^^^^^^^^^^^^^^^^^
    = note: `-D private-interfaces` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(private_interfaces)]`

error: struct `ActionOrchestrator` is never constructed
  --> src/action_orchestrator.rs:13:12
   |
13 | pub struct ActionOrchestrator {
   |            ^^^^^^^^^^^^^^^^^^
   |
   = note: `-D dead-code` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(dead_code)]`

error: struct `IdempotencyRecord` is never constructed
  --> src/action_orchestrator.rs:99:8
   |
99 | struct IdempotencyRecord {
   |        ^^^^^^^^^^^^^^^^^

error: struct `RetryPolicy` is never constructed
   --> src/action_orchestrator.rs:108:12
    |
108 | pub struct RetryPolicy {
    |            ^^^^^^^^^^^

error: multiple associated items are never used
   --> src/action_orchestrator.rs:129:18
    |
128 | impl ActionOrchestrator {
    | ----------------------- associated items in this implementation
129 |     pub async fn new(db_pool: Option<sqlx::PgPool>) -> Self {
    |                  ^^^
...
140 |     pub async fn submit_action(&self, mut action: Action) -> Result<Uuid, String> {
    |                  ^^^^^^^^^^^^^
...
202 |     async fn execute_action(&self, action: Action) {
    |              ^^^^^^^^^^^^^^
...
262 |     fn data_mode_allows_write(&self) -> Result<bool, String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
268 |     async fn execute_action_internal(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
285 |     async fn simulate_action(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^
...
301 |     async fn create_resource(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^
...
314 |     async fn update_resource(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^
...
326 |     async fn delete_resource(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^
...
338 |     async fn modify_policy(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^
...
350 |     async fn grant_access(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^
...
362 |     async fn revoke_access(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^
...
374 |     async fn restart_service(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^
...
386 |     async fn scale_resource(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^
...
404 |     async fn apply_configuration(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^^^^^^
...
416 |     async fn execute_script(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^^^^^^
...
429 |     async fn remediate(&self, action: &Action) -> Result<ActionResult, String> {
    |              ^^^^^^^^^
...
441 |     fn generate_idempotency_key(&self, action: &Action) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
455 |     async fn check_idempotency(&self, key: &str) -> Result<Option<IdempotencyRecord>, String> {
    |              ^^^^^^^^^^^^^^^^^
...
496 |     async fn store_idempotency_record(&self, action: &Action) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
527 |     fn validate_action(&self, action: &Action) -> Result<(), String> {
    |        ^^^^^^^^^^^^^^^
...
542 |     async fn has_approval(&self, action: &Action) -> Result<bool, String> {
    |              ^^^^^^^^^^^^
...
565 |     fn generate_rollback_actions(&self, action: &Action) -> Vec<Action> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
602 |     async fn update_action_status(&self, key: &str, status: ActionStatus) {
    |              ^^^^^^^^^^^^^^^^^^^^
...
611 |     async fn update_action_error(&self, key: &str, error: String) {
    |              ^^^^^^^^^^^^^^^^^^^
...
621 |     async fn complete_action(&self, action: Action, result: ActionResult) {
    |              ^^^^^^^^^^^^^^^
...
645 |     async fn fail_action(&self, action: Action, error: String) {
    |              ^^^^^^^^^^^
...
651 |     fn is_retryable_error(&self, error: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
661 |     fn calculate_next_delay(&self, current_delay: Duration) -> Duration {
    |        ^^^^^^^^^^^^^^^^^^^^
...
678 |     async fn persist_action(&self, pool: &sqlx::PgPool, action: &Action) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^
...
707 |     pub async fn get_action_status(&self, action_id: Uuid) -> Option<ActionStatus> {
    |                  ^^^^^^^^^^^^^^^^^
...
728 |     pub async fn rollback_action(&self, action_id: Uuid) -> Result<(), String> {
    |                  ^^^^^^^^^^^^^^^

error: method `to_string` is never used
   --> src/action_orchestrator.rs:761:8
    |
760 | impl ActionType {
    | --------------- method in this implementation
761 |     fn to_string(&self) -> String {
    |        ^^^^^^^^^

error: struct `ModelRegistry` is never constructed
   --> src/ai/model_registry.rs:164:12
    |
164 | pub struct ModelRegistry {
    |            ^^^^^^^^^^^^^

error: associated items `new`, `register_model`, `get_model`, `get_latest_version`, `register_harness`, and `evaluate_model` are never used
   --> src/ai/model_registry.rs:170:12
    |
169 | impl ModelRegistry {
    | ------------------ associated items in this implementation
170 |     pub fn new() -> Self {
    |            ^^^
...
177 |     pub fn register_model(&mut self, model: ModelCard) -> Result<Uuid, String> {
    |            ^^^^^^^^^^^^^^
...
186 |     pub fn get_model(&self, id: &Uuid) -> Option<&ModelCard> {
    |            ^^^^^^^^^
...
190 |     pub fn get_latest_version(&self, name: &str) -> Option<&ModelCard> {
    |            ^^^^^^^^^^^^^^^^^^
...
197 |     pub fn register_harness(&mut self, harness: EvaluationHarness) -> Result<Uuid, String> {
    |            ^^^^^^^^^^^^^^^^
...
206 |     pub fn evaluate_model(
    |            ^^^^^^^^^^^^^^

error: fields `start_time` and `slo_manager` are never read
   --> src/api/mod.rs:186:9
    |
182 | pub struct AppState {
    |            -------- fields in this struct
...
186 |     pub start_time: std::time::Instant,
    |         ^^^^^^^^^^
...
194 |     pub slo_manager: SLOManager,
    |         ^^^^^^^^^^^

error: field `stage` is never read
    --> src/api/mod.rs:2048:9
     |
2047 | pub struct StageAdvance {
     |            ------------ field in this struct
2048 |     pub stage: Option<u8>,
     |         ^^^^^
     |
     = note: `StageAdvance` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: function `advance_stage` is never used
    --> src/api/mod.rs:2051:14
     |
2051 | pub async fn advance_stage(
     |              ^^^^^^^^^^^^^

error: function `rollback_action` is never used
    --> src/api/mod.rs:2073:14
     |
2073 | pub async fn rollback_action(
     |              ^^^^^^^^^^^^^^^

error: function `get_action_impact` is never used
    --> src/api/mod.rs:2099:14
     |
2099 | pub async fn get_action_impact(
     |              ^^^^^^^^^^^^^^^^^

error: struct `ApprovalWorkflowEngine` is never constructed
  --> src/approval_workflow.rs:14:12
   |
14 | pub struct ApprovalWorkflowEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^^

error: struct `NotificationService` is never constructed
  --> src/approval_workflow.rs:65:12
   |
65 | pub struct NotificationService {
   |            ^^^^^^^^^^^^^^^^^^^

error: struct `AuditService` is never constructed
  --> src/approval_workflow.rs:72:12
   |
72 | pub struct AuditService {
   |            ^^^^^^^^^^^^

error: struct `EmailClient` is never constructed
  --> src/approval_workflow.rs:77:8
   |
77 | struct EmailClient;
   |        ^^^^^^^^^^^

error: struct `TeamsClient` is never constructed
  --> src/approval_workflow.rs:78:8
   |
78 | struct TeamsClient;
   |        ^^^^^^^^^^^

error: struct `SlackClient` is never constructed
  --> src/approval_workflow.rs:79:8
   |
79 | struct SlackClient;
   |        ^^^^^^^^^^^

error: multiple associated items are never used
   --> src/approval_workflow.rs:82:18
    |
81  | impl ApprovalWorkflowEngine {
    | --------------------------- associated items in this implementation
82  |     pub async fn new() -> Self {
    |                  ^^^
...
92  |     pub async fn create_approval_request(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
172 |     pub async fn process_approval(
    |                  ^^^^^^^^^^^^^^^^
...
245 |     pub async fn get_pending_approvals(&self, user: &AuthUser) -> Vec<ApprovalRequest> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
260 |     pub async fn cancel_approval(&self, request_id: Uuid, user: &AuthUser) -> Result<(), String> {
    |                  ^^^^^^^^^^^^^^^
...
283 |     fn check_approval_requirements(&self, request: &ApprovalRequest) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
302 |     fn check_hierarchical_approval(&self, _request: &ApprovalRequest) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
307 |     async fn get_applicable_policy(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
320 |     fn get_approval_requirements(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
333 |     async fn check_auto_approve_conditions(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
355 |     async fn create_auto_approved_request(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
406 |     async fn execute_approved_operation(&self, request: &ApprovalRequest) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
434 |     async fn schedule_escalation(&self, request: &ApprovalRequest, policy: &ApprovalPolicy) {
    |              ^^^^^^^^^^^^^^^^^^^
...
452 |     fn generate_signature(&self, user: &AuthUser, decision: &ApprovalDecision) -> String {
    |        ^^^^^^^^^^^^^^^^^^
...
463 |     async fn is_admin(&self, user: &AuthUser) -> bool {
    |              ^^^^^^^^
...
472 |     fn default_policies() -> Vec<ApprovalPolicy> {
    |        ^^^^^^^^^^^^^^^^

error: associated items `new` and `notify_approvers` are never used
   --> src/approval_workflow.rs:526:8
    |
525 | impl NotificationService {
    | ------------------------ associated items in this implementation
526 |     fn new() -> Self {
    |        ^^^
...
534 |     async fn notify_approvers(&self, request: &ApprovalRequest) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^

error: associated items `new`, `log_approval_requested`, `log_approval_decision`, and `log_approval_cancelled` are never used
   --> src/approval_workflow.rs:545:14
    |
544 | impl AuditService {
    | ----------------- associated items in this implementation
545 |     async fn new() -> Self {
    |              ^^^
...
549 |     async fn log_approval_requested(&self, request: &ApprovalRequest) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
558 |     async fn log_approval_decision(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
571 |     async fn log_approval_cancelled(
    |              ^^^^^^^^^^^^^^^^^^^^^^

error: struct `ApprovalEngine` is never constructed
   --> src/approvals.rs:185:12
    |
185 | pub struct ApprovalEngine {
    |            ^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/approvals.rs:190:12
    |
189 | impl ApprovalEngine {
    | ------------------- associated items in this implementation
190 |     pub fn new() -> Self {
    |            ^^^
...
196 |     pub fn add_policy(&mut self, policy: ApprovalPolicy) {
    |            ^^^^^^^^^^
...
200 |     pub fn requires_approval(
    |            ^^^^^^^^^^^^^^^^^
...
221 |     pub fn create_approval_request(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
258 |     fn get_required_approvers(&self, policy: &ApprovalPolicy, requester_id: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
277 |     fn check_sod_compliance(
    |        ^^^^^^^^^^^^^^^^^^^^
...
292 |     pub fn process_approval(
    |            ^^^^^^^^^^^^^^^^
...
372 |     pub fn create_break_glass_access(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `AuditChain` is never constructed
  --> src/audit_chain.rs:72:12
   |
72 | pub struct AuditChain {
   |            ^^^^^^^^^^

error: multiple associated items are never used
   --> src/audit_chain.rs:79:12
    |
78  | impl AuditChain {
    | --------------- associated items in this implementation
79  |     pub fn new() -> Self {
    |            ^^^
...
87  |     pub fn add_entry(
    |            ^^^^^^^^^
...
137 |     fn calculate_hash(&self, entry: &AuditEntry) -> String {
    |        ^^^^^^^^^^^^^^
...
159 |     fn sign_entry(&self, entry: &AuditEntry) -> String {
    |        ^^^^^^^^^^
...
168 |     pub fn verify_chain(&self) -> Result<(), VerificationError> {
    |            ^^^^^^^^^^^^
...
214 |     fn verify_signature(&self, entry: &AuditEntry, signature: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^
...
223 |     fn update_merkle_tree(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^
...
228 |     pub fn export_for_auditor(&self, start: DateTime<Utc>, end: DateTime<Utc>) -> AuditExport {
    |            ^^^^^^^^^^^^^^^^^^

error: enum `VerificationError` is never used
   --> src/audit_chain.rs:252:10
    |
252 | pub enum VerificationError {
    |          ^^^^^^^^^^^^^^^^^

error: struct `MerkleTree` is never constructed
   --> src/audit_chain.rs:261:12
    |
261 | pub struct MerkleTree {
    |            ^^^^^^^^^^

error: associated items `new` and `get_proof` are never used
   --> src/audit_chain.rs:267:12
    |
266 | impl MerkleTree {
    | --------------- associated items in this implementation
267 |     pub fn new(leaf_hashes: Vec<String>) -> Self {
    |            ^^^
...
304 |     pub fn get_proof(&self, index: usize) -> Vec<(String, bool)> {
    |            ^^^^^^^^^

error: struct `PersistentAuditChain` is never constructed
   --> src/audit_chain.rs:339:12
    |
339 | pub struct PersistentAuditChain {
    |            ^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `load_recent_entries`, and `add_entry_persistent` are never used
   --> src/audit_chain.rs:345:18
    |
344 | impl PersistentAuditChain {
    | ------------------------- associated items in this implementation
345 |     pub async fn new(db_pool: sqlx::PgPool) -> Result<Self, sqlx::Error> {
    |                  ^^^
...
357 |     async fn load_recent_entries(&mut self) -> Result<(), sqlx::Error> {
    |              ^^^^^^^^^^^^^^^^^^^
...
371 |     pub async fn add_entry_persistent(
    |                  ^^^^^^^^^^^^^^^^^^^^

error: fields `use`, `x5t`, `x5c`, and `alg` are never read
  --> src/auth.rs:77:9
   |
75 | pub struct Jwk {
   |            --- fields in this struct
76 |     pub kty: String,
77 |     pub r#use: Option<String>,
   |         ^^^^^
78 |     pub kid: String,
79 |     pub x5t: Option<String>,
   |         ^^^
...
82 |     pub x5c: Option<Vec<String>>,
   |         ^^^
83 |     pub alg: Option<String>,
   |         ^^^
   |
   = note: `Jwk` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: method `find_key` is never used
   --> src/auth.rs:151:8
    |
98  | impl TokenValidator {
    | ------------------- method in this implementation
...
151 |     fn find_key<'a>(&self, kid: &str, jwks: &'a JwksResponse) -> Option<&'a Jwk> {
    |        ^^^^^^^^

error: variant `InsufficientPermissions` is never constructed
   --> src/auth.rs:348:5
    |
337 | pub enum AuthError {
    |          --------- variant in this enum
...
348 |     InsufficientPermissions,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `AuthError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: struct `RequirePermissions` is never constructed
   --> src/auth.rs:417:12
    |
417 | pub struct RequirePermissions {
    |            ^^^^^^^^^^^^^^^^^^

error: associated items `new` and `check` are never used
   --> src/auth.rs:422:12
    |
421 | impl RequirePermissions {
    | ----------------------- associated items in this implementation
422 |     pub fn new(scopes: Vec<&str>) -> Self {
    |            ^^^
...
428 |     pub fn check(&self, user: &AuthUser) -> Result<(), AuthError> {
    |            ^^^^^

error: fields `id`, `name`, `resource_type`, `location`, and `tags` are never read
  --> src/azure_client.rs:23:5
   |
22 | struct AzureResource {
   |        ------------- fields in this struct
23 |     id: String,
   |     ^^
24 |     name: String,
   |     ^^^^
25 |     #[serde(rename = "type")]
26 |     resource_type: String,
   |     ^^^^^^^^^^^^^
27 |     location: String,
   |     ^^^^^^^^
28 |     tags: Option<serde_json::Value>,
   |     ^^^^

error: fields `id`, `name`, `display_name`, `policy_definition_id`, and `enforcement_mode` are never read
  --> src/azure_client.rs:33:5
   |
32 | struct AzurePolicyAssignment {
   |        --------------------- fields in this struct
33 |     id: String,
   |     ^^
34 |     name: String,
   |     ^^^^
35 |     #[serde(rename = "displayName")]
36 |     display_name: String,
   |     ^^^^^^^^^^^^
37 |     #[serde(rename = "policyDefinitionId")]
38 |     policy_definition_id: String,
   |     ^^^^^^^^^^^^^^^^^^^^
39 |     enforcement_mode: Option<String>,
   |     ^^^^^^^^^^^^^^^^

error: fields `id`, `principal_id`, `role_definition_id`, and `scope` are never read
  --> src/azure_client.rs:44:5
   |
43 | struct AzureRoleAssignment {
   |        ------------------- fields in this struct
44 |     id: String,
   |     ^^
45 |     #[serde(rename = "principalId")]
46 |     principal_id: String,
   |     ^^^^^^^^^^^^
47 |     #[serde(rename = "roleDefinitionId")]
48 |     role_definition_id: String,
   |     ^^^^^^^^^^^^^^^^^^
49 |     scope: String,
   |     ^^^^^

error: fields `billing_period`, `usage_start`, `usage_end`, `pretax_cost`, and `currency` are never read
  --> src/azure_client.rs:55:5
   |
53 | struct CostManagementUsage {
   |        ------------------- fields in this struct
54 |     #[serde(rename = "billingPeriod")]
55 |     billing_period: String,
   |     ^^^^^^^^^^^^^^
56 |     #[serde(rename = "usageStart")]
57 |     usage_start: DateTime<Utc>,
   |     ^^^^^^^^^^^
58 |     #[serde(rename = "usageEnd")]
59 |     usage_end: DateTime<Utc>,
   |     ^^^^^^^^^
60 |     #[serde(rename = "pretaxCost")]
61 |     pretax_cost: f64,
   |     ^^^^^^^^^^^
62 |     currency: String,
   |     ^^^^^^^^

error: method `http_client` is never used
  --> src/azure_client.rs:88:12
   |
65 | impl AzureClient {
   | ---------------- method in this implementation
...
88 |     pub fn http_client(&self) -> &HttpClient {
   |            ^^^^^^^^^^^

error: field `retry_attempts` is never read
  --> src/azure_client_async.rs:30:9
   |
24 | pub struct AzureClientConfig {
   |            ----------------- field in this struct
...
30 |     pub retry_attempts: u32,
   |         ^^^^^^^^^^^^^^
   |
   = note: `AzureClientConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

error: multiple methods are never used
   --> src/azure_client_async.rs:687:18
    |
73  | impl AsyncAzureClient {
    | --------------------- methods in this implementation
...
687 |     pub async fn get_identities(
    |                  ^^^^^^^^^^^^^^
...
693 |     pub async fn get_role_definitions(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
699 |     pub async fn get_backup_status(
    |                  ^^^^^^^^^^^^^^^^^
...
706 |     pub async fn get_data_stores(
    |                  ^^^^^^^^^^^^^^^
...
712 |     pub async fn get_role_assignments(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
718 |     pub async fn get_network_flows(
    |                  ^^^^^^^^^^^^^^^^^
...
724 |     pub async fn get_policy_compliance_details(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
736 |     pub async fn query_metrics(
    |                  ^^^^^^^^^^^^^
...
748 |     pub async fn get_resource_configuration(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
755 |     pub async fn query_logs(
    |                  ^^^^^^^^^^
...
766 |     pub async fn get_policy_definitions(
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
772 |     pub async fn get_policy_compliance_summary(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
783 |     pub async fn get_resource_configurations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
789 |     pub async fn get_audit_logs(
    |                  ^^^^^^^^^^^^^^
...
796 |     pub async fn get_compliance_state(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
806 |     pub async fn resize_vm(
    |                  ^^^^^^^^^
...
817 |     pub async fn set_auto_shutdown(
    |                  ^^^^^^^^^^^^^^^^^
...
828 |     pub async fn log_optimization_activity(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
837 |     pub async fn get_resource_changes(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
845 |     pub async fn check_remediation_available(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
853 |     pub async fn get_realized_savings_mtd(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
859 |     pub async fn get_daily_costs(
    |                  ^^^^^^^^^^^^^^^
...
866 |     pub async fn deallocate_vm(
    |                  ^^^^^^^^^^^^^
...
876 |     pub async fn list_resources(
    |                  ^^^^^^^^^^^^^^
...
882 |     pub async fn get_resource_metrics(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
893 |     pub async fn get_resource_cost(
    |                  ^^^^^^^^^^^^^^^^^
...
902 |     pub async fn list_virtual_machines(
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
908 |     pub async fn get_detailed_vm_metrics(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
919 |     pub async fn get_sku_pricing(
    |                  ^^^^^^^^^^^^^^^
...
926 |     pub async fn get_usage_details(
    |                  ^^^^^^^^^^^^^^^^^
...
933 |     pub async fn get_pricing_for_family(
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
945 |     pub async fn get_tenant_wide_metrics(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
975 |     pub async fn list_subscriptions(
    |                  ^^^^^^^^^^^^^^^^^^

error: field `policy_definition_id` is never read
    --> src/azure_client_async.rs:1002:9
     |
998  | pub struct PolicyState {
     |            ----------- field in this struct
...
1002 |     pub policy_definition_id: String,
     |         ^^^^^^^^^^^^^^^^^^^^
     |
     = note: `PolicyState` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: fields `id`, `name`, and `location` are never read
    --> src/azure_client_async.rs:1108:9
     |
1107 | pub struct AzureResource {
     |            ------------- fields in this struct
1108 |     pub id: String,
     |         ^^
1109 |     pub name: String,
     |         ^^^^
1110 |     pub r#type: String,
1111 |     pub location: String,
     |         ^^^^^^^^
     |
     = note: `AzureResource` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: fields `redis_url` and `default_ttl` are never read
  --> src/cache.rs:11:5
   |
10 | pub struct CacheManager {
   |            ------------ fields in this struct
11 |     redis_url: String,
   |     ^^^^^^^^^
12 |     default_ttl: Duration,
   |     ^^^^^^^^^^^
   |
   = note: `CacheManager` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

error: fields `max_connections`, `connection_timeout_ms`, and `retry_attempts` are never read
  --> src/cache.rs:27:9
   |
24 | pub struct CacheConfig {
   |            ----------- fields in this struct
...
27 |     pub max_connections: u32,
   |         ^^^^^^^^^^^^^^^
28 |     pub connection_timeout_ms: u64,
   |         ^^^^^^^^^^^^^^^^^^^^^
29 |     pub retry_attempts: u32,
   |         ^^^^^^^^^^^^^^
   |
   = note: `CacheConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

error: multiple methods are never used
   --> src/cache.rs:86:18
    |
45  | impl CacheManager {
    | ----------------- methods in this implementation
...
86  |     pub async fn get_warm<T>(
    |                  ^^^^^^^^
...
112 |     pub async fn get_cold<T>(
    |                  ^^^^^^^^
...
138 |     pub async fn get_smart<T>(
    |                  ^^^^^^^^^
...
209 |     pub async fn get_batch<T>(
    |                  ^^^^^^^^^
...
240 |     pub async fn set_batch<T>(
    |                  ^^^^^^^^^
...
265 |     pub async fn invalidate_pattern(
    |                  ^^^^^^^^^^^^^^^^^^
...
283 |     pub async fn invalidate_by_tags(
    |                  ^^^^^^^^^^^^^^^^^^
...
298 |     pub async fn get_stats(
    |                  ^^^^^^^^^

error: variants `Frequent`, `Occasional`, and `Rare` are never constructed
   --> src/cache.rs:409:5
    |
407 | pub enum CacheAccessPattern {
    |          ------------------ variants in this enum
408 |     RealTime,   // < 30 seconds (compliance violations, alerts)
409 |     Frequent,   // 5 minutes (policies, resources, costs)
    |     ^^^^^^^^
410 |     Occasional, // 30 minutes (reports, analytics)
    |     ^^^^^^^^^^
411 |     Rare,       // 2+ hours (historical data, configurations)
    |     ^^^^
    |
    = note: `CacheAccessPattern` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

error: struct `CacheStats` is never constructed
   --> src/cache.rs:415:12
    |
415 | pub struct CacheStats {
    |            ^^^^^^^^^^

error: associated functions `policy_compliance`, `resource_data`, `cost_analysis`, `rbac_assignments`, `security_alerts`, and `compliance_score` are never used
   --> src/cache.rs:429:12
    |
424 | impl CacheKeys {
    | -------------- associated functions in this implementation
...
429 |     pub fn policy_compliance(policy_id: &str) -> String {
    |            ^^^^^^^^^^^^^^^^^
...
433 |     pub fn resource_data(resource_id: &str) -> String {
    |            ^^^^^^^^^^^^^
...
437 |     pub fn cost_analysis(subscription_id: &str, date: &str) -> String {
    |            ^^^^^^^^^^^^^
...
441 |     pub fn rbac_assignments(tenant_id: &str) -> String {
    |            ^^^^^^^^^^^^^^^^
...
445 |     pub fn security_alerts(tenant_id: &str) -> String {
    |            ^^^^^^^^^^^^^^^
...
449 |     pub fn compliance_score(tenant_id: &str) -> String {
    |            ^^^^^^^^^^^^^^^^

error: trait `ChangeManagementSystem` is never used
   --> src/change_management.rs:125:11
    |
125 | pub trait ChangeManagementSystem: Send + Sync {
    |           ^^^^^^^^^^^^^^^^^^^^^^

error: struct `ServiceNowIntegration` is never constructed
   --> src/change_management.rs:140:12
    |
140 | pub struct ServiceNowIntegration {
    |            ^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `map_to_servicenow`, `map_category`, `map_priority`, `map_risk`, and `map_impact` are never used
   --> src/change_management.rs:148:12
    |
147 | impl ServiceNowIntegration {
    | -------------------------- associated items in this implementation
148 |     pub fn new(instance_url: String, username: String, password: String) -> Self {
    |            ^^^
...
157 |     fn map_to_servicenow(&self, request: &ChangeRequest) -> serde_json::Value {
    |        ^^^^^^^^^^^^^^^^^
...
176 |     fn map_category(&self, category: &ChangeCategory) -> &str {
    |        ^^^^^^^^^^^^
...
185 |     fn map_priority(&self, priority: &Priority) -> i32 {
    |        ^^^^^^^^^^^^
...
194 |     fn map_risk(&self, risk: &RiskLevel) -> i32 {
    |        ^^^^^^^^
...
204 |     fn map_impact(&self, impact: &Impact) -> i32 {
    |        ^^^^^^^^^^

error: struct `JiraIntegration` is never constructed
   --> src/change_management.rs:451:12
    |
451 | pub struct JiraIntegration {
    |            ^^^^^^^^^^^^^^^

error: associated items `new` and `map_to_jira` are never used
   --> src/change_management.rs:459:12
    |
458 | impl JiraIntegration {
    | -------------------- associated items in this implementation
459 |     pub fn new(base_url: String, api_token: String, project_key: String) -> Self {
    |            ^^^
...
468 |     fn map_to_jira(&self, request: &ChangeRequest) -> serde_json::Value {
    |        ^^^^^^^^^^^

error: struct `ChangeManagementOrchestrator` is never constructed
   --> src/change_management.rs:694:12
    |
694 | pub struct ChangeManagementOrchestrator {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `submit_change`, `is_in_freeze_window`, `validate_change`, `calculate_risk_score`, and `auto_approve_standard_changes` are never used
   --> src/change_management.rs:700:12
    |
699 | impl ChangeManagementOrchestrator {
    | --------------------------------- associated items in this implementation
700 |     pub fn new(system: Box<dyn ChangeManagementSystem>) -> Self {
    |            ^^^
...
707 |     pub async fn submit_change(&self, mut request: ChangeRequest) -> Result<String, String> {
    |                  ^^^^^^^^^^^^^
...
730 |     async fn is_in_freeze_window(&self, request: &ChangeRequest) -> Result<bool, String> {
    |              ^^^^^^^^^^^^^^^^^^^
...
746 |     fn validate_change(&self, request: &ChangeRequest) -> Result<(), String> {
    |        ^^^^^^^^^^^^^^^
...
768 |     fn calculate_risk_score(&self, request: &ChangeRequest) -> i32 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
799 |     pub async fn auto_approve_standard_changes(&self, id: &str) -> Result<(), String> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `AwsCollector` is never constructed
 --> src/collectors/aws_collector.rs:7:12
  |
7 | pub struct AwsCollector {
  |            ^^^^^^^^^^^^

error: associated function `new` is never used
  --> src/collectors/aws_collector.rs:12:18
   |
11 | impl AwsCollector {
   | ----------------- associated function in this implementation
12 |     pub async fn new(region: Option<String>) -> Result<Self, Box<dyn std::error::Error>> {
   |                  ^^^

error: trait `CloudCollector` is never used
   --> src/collectors/aws_collector.rs:110:11
    |
110 | pub trait CloudCollector: Send + Sync {
    |           ^^^^^^^^^^^^^^

error: struct `GcpCollector` is never constructed
  --> src/collectors/gcp_collector.rs:11:12
   |
11 | pub struct GcpCollector;
   |            ^^^^^^^^^^^^

error: associated function `new` is never used
  --> src/collectors/gcp_collector.rs:14:18
   |
13 | impl GcpCollector {
   | ----------------- associated function in this implementation
14 |     pub async fn new(_project: Option<String>) -> Result<Self, Box<dyn std::error::Error>> {
   |                  ^^^

error: trait `ComplianceEngine` is never used
   --> src/compliance/mod.rs:165:11
    |
165 | pub trait ComplianceEngine: Send + Sync {
    |           ^^^^^^^^^^^^^^^^

error: struct `DateRange` is never constructed
   --> src/compliance/mod.rs:187:12
    |
187 | pub struct DateRange {
    |            ^^^^^^^^^

error: enum `ComplianceError` is never used
   --> src/compliance/mod.rs:218:10
    |
218 | pub enum ComplianceError {
    |          ^^^^^^^^^^^^^^^

error: struct `AzureComplianceEngine` is never constructed
   --> src/compliance/mod.rs:230:12
    |
230 | pub struct AzureComplianceEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/compliance/mod.rs:237:18
    |
236 | impl AzureComplianceEngine {
    | -------------------------- associated items in this implementation
237 |     pub async fn new(
    |                  ^^^
...
257 |     async fn load_frameworks(&mut self) -> Result<(), ComplianceError> {
    |              ^^^^^^^^^^^^^^^
...
274 |     fn create_iso27001_framework(&self) -> ComplianceFramework {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
337 |     fn create_pci_dss_framework(&self) -> ComplianceFramework {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
360 |     fn create_hipaa_framework(&self) -> ComplianceFramework {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
383 |     fn create_gdpr_framework(&self) -> ComplianceFramework {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
406 |     fn create_cis_framework(&self) -> ComplianceFramework {
    |        ^^^^^^^^^^^^^^^^^^^^
...
429 |     async fn execute_control_test(
    |              ^^^^^^^^^^^^^^^^^^^^
...
588 |     fn validate_configuration(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
612 |     fn generate_evidence_ref(&self) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
616 |     async fn generate_artifact(
    |              ^^^^^^^^^^^^^^^^^
...
740 |     fn detect_configuration_drift(&self, resources: &[serde_json::Value]) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
755 |     async fn save_artifact(
    |              ^^^^^^^^^^^^^
...
792 |     fn calculate_compliance_score(&self, results: &[ControlEvidenceResult]) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
803 |     fn create_manifest(&self, artifacts: &[EvidenceArtifact]) -> EvidenceManifest {
    |        ^^^^^^^^^^^^^^^

error: function `get_compliance_status` is never used
    --> src/compliance/mod.rs:1020:14
     |
1020 | pub async fn get_compliance_status(
     |              ^^^^^^^^^^^^^^^^^^^^^

error: field `key_vault_uri` is never read
  --> src/config.rs:10:9
   |
4  | pub struct AppConfig {
   |            --------- field in this struct
...
10 |     pub key_vault_uri: Option<String>,
   |         ^^^^^^^^^^^^^
   |
   = note: `AppConfig` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

error: methods `is_simulated`, `display_string`, and `css_class` are never used
  --> src/data_mode.rs:28:12
   |
13 | impl DataMode {
   | ------------- methods in this implementation
...
28 |     pub fn is_simulated(&self) -> bool {
   |            ^^^^^^^^^^^^
...
33 |     pub fn display_string(&self) -> &'static str {
   |            ^^^^^^^^^^^^^^
...
41 |     pub fn css_class(&self) -> &'static str {
   |            ^^^^^^^^^

error: methods `ensure_real_data` and `get_mode` are never used
   --> src/data_mode.rs:125:12
    |
109 | impl DataModeGuard {
    | ------------------ methods in this implementation
...
125 |     pub fn ensure_real_data(&self) -> Result<(), DataModeError> {
    |            ^^^^^^^^^^^^^^^^
...
132 |     pub fn get_mode(&self) -> DataMode {
    |            ^^^^^^^^

error: variants `RealDataRequired` and `ConnectionFailed` are never constructed
   --> src/data_mode.rs:143:5
    |
138 | pub enum DataModeError {
    |          ------------- variants in this enum
...
143 |     RealDataRequired,
    |     ^^^^^^^^^^^^^^^^
...
146 |     ConnectionFailed(String),
    |     ^^^^^^^^^^^^^^^^
    |
    = note: `DataModeError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

error: trait `EnforcementEngine` is never used
   --> src/enforcement.rs:148:11
    |
148 | pub trait EnforcementEngine: Send + Sync {
    |           ^^^^^^^^^^^^^^^^^

error: struct `DefaultEnforcementEngine` is never constructed
   --> src/enforcement.rs:196:12
    |
196 | pub struct DefaultEnforcementEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `determine_enforcement_type`, and `requires_approval` are never used
   --> src/enforcement.rs:202:12
    |
201 | impl DefaultEnforcementEngine {
    | ----------------------------- associated items in this implementation
202 |     pub fn new(
    |            ^^^
...
213 |     fn determine_enforcement_type(&self, violations: &[Violation]) -> EnforcementType {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
227 |     fn requires_approval(&self, action: &EnforcementType, resource: &Resource) -> bool {
    |        ^^^^^^^^^^^^^^^^^

error: method `determine_priority` is never used
   --> src/enforcement.rs:394:8
    |
393 | impl DefaultEnforcementEngine {
    | ----------------------------- method in this implementation
394 |     fn determine_priority(&self, violations: &[Violation]) -> Priority {
    |        ^^^^^^^^^^^^^^^^^^

error: trait `Enforcer` is never used
   --> src/enforcement.rs:411:11
    |
411 | pub trait Enforcer: Send + Sync {
    |           ^^^^^^^^

error: struct `EnforcerResult` is never constructed
   --> src/enforcement.rs:423:12
    |
423 | pub struct EnforcerResult {
    |            ^^^^^^^^^^^^^^

error: struct `DefaultEnforcer` is never constructed
   --> src/enforcement.rs:431:12
    |
431 | pub struct DefaultEnforcer;
    |            ^^^^^^^^^^^^^^^

error: trait `ApprovalService` is never used
   --> src/enforcement.rs:499:11
    |
499 | pub trait ApprovalService: Send + Sync {
    |           ^^^^^^^^^^^^^^^

error: associated items `new`, `with_correlation_id`, and `with_metadata` are never used
   --> src/events/mod.rs:134:12
    |
133 | impl EventEnvelope {
    | ------------------ associated items in this implementation
134 |     pub fn new(event: GovernanceEvent, tenant_id: String, source: String) -> Self {
    |            ^^^
...
146 |     pub fn with_correlation_id(mut self, correlation_id: String) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
151 |     pub fn with_metadata(mut self, key: String, value: String) -> Self {
    |            ^^^^^^^^^^^^^

error: trait `EventBus` is never used
   --> src/events/mod.rs:159:11
    |
159 | pub trait EventBus: Send + Sync {
    |           ^^^^^^^^

error: struct `NatsEventBus` is never constructed
   --> src/events/mod.rs:167:12
    |
167 | pub struct NatsEventBus {
    |            ^^^^^^^^^^^^

error: associated functions `new`, `ensure_streams`, and `get_subject` are never used
   --> src/events/mod.rs:174:18
    |
173 | impl NatsEventBus {
    | ----------------- associated functions in this implementation
174 |     pub async fn new(urls: Vec<String>) -> Result<Self, EventError> {
    |                  ^^^
...
187 |     async fn ensure_streams(js: &async_nats::jetstream::Context) -> Result<(), EventError> {
    |              ^^^^^^^^^^^^^^
...
216 |     fn get_subject(event: &GovernanceEvent) -> String {
    |        ^^^^^^^^^^^

error: struct `InMemoryEventBus` is never constructed
   --> src/events/mod.rs:294:12
    |
294 | pub struct InMemoryEventBus {
    |            ^^^^^^^^^^^^^^^^

error: associated function `new` is never used
   --> src/events/mod.rs:299:12
    |
298 | impl InMemoryEventBus {
    | --------------------- associated function in this implementation
299 |     pub fn new() -> Self {
    |            ^^^

error: struct `EventSubscription` is never constructed
   --> src/events/mod.rs:327:12
    |
327 | pub struct EventSubscription {
    |            ^^^^^^^^^^^^^^^^^

error: associated items `new`, `add_subscription`, `add_broadcast_receiver`, and `next` are never used
   --> src/events/mod.rs:334:8
    |
333 | impl EventSubscription {
    | ---------------------- associated items in this implementation
334 |     fn new() -> Self {
    |        ^^^
...
343 |     fn add_subscription(&mut self, sub: async_nats::Subscriber) {
    |        ^^^^^^^^^^^^^^^^
...
347 |     fn add_broadcast_receiver(&mut self, receiver: broadcast::Receiver<EventEnvelope>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
351 |     pub async fn next(&mut self) -> Option<EventEnvelope> {
    |                  ^^^^

error: struct `EventProcessor` is never constructed
   --> src/events/mod.rs:376:12
    |
376 | pub struct EventProcessor {
    |            ^^^^^^^^^^^^^^

error: associated items `new`, `register_handler`, and `process` are never used
   --> src/events/mod.rs:381:12
    |
380 | impl EventProcessor {
    | ------------------- associated items in this implementation
381 |     pub fn new() -> Self {
    |            ^^^
...
387 |     pub fn register_handler(&mut self, event_type: String, handler: Box<dyn EventHandler>) {
    |            ^^^^^^^^^^^^^^^^
...
391 |     pub async fn process(&self, event: EventEnvelope) -> Result<(), EventError> {
    |                  ^^^^^^^

error: trait `EventHandler` is never used
   --> src/events/mod.rs:419:11
    |
419 | pub trait EventHandler: Send + Sync {
    |           ^^^^^^^^^^^^

error: enum `EventError` is never used
   --> src/events/mod.rs:425:10
    |
425 | pub enum EventError {
    |          ^^^^^^^^^^

error: struct `EventAggregator` is never constructed
   --> src/events/mod.rs:441:12
    |
441 | pub struct EventAggregator {
    |            ^^^^^^^^^^^^^^^

error: associated items `new`, `add_event`, and `get_statistics` are never used
   --> src/events/mod.rs:447:12
    |
446 | impl EventAggregator {
    | -------------------- associated items in this implementation
447 |     pub fn new(window_size: std::time::Duration) -> Self {
    |            ^^^
...
454 |     pub async fn add_event(&self, event: EventEnvelope) {
    |                  ^^^^^^^^^
...
463 |     pub async fn get_statistics(&self) -> EventStatistics {
    |                  ^^^^^^^^^^^^^^

error: struct `EventStatistics` is never constructed
   --> src/events/mod.rs:484:12
    |
484 | pub struct EventStatistics {
    |            ^^^^^^^^^^^^^^^

error: struct `EvidencePipeline` is never constructed
  --> src/evidence_pipeline.rs:13:12
   |
13 | pub struct EvidencePipeline {
   |            ^^^^^^^^^^^^^^^^

error: struct `SigningKeys` is never constructed
  --> src/evidence_pipeline.rs:95:8
   |
95 | struct SigningKeys {
   |        ^^^^^^^^^^^

error: struct `SigningKey` is never constructed
   --> src/evidence_pipeline.rs:101:8
    |
101 | struct SigningKey {
    |        ^^^^^^^^^^

error: enum `SigningAlgorithm` is never used
   --> src/evidence_pipeline.rs:112:6
    |
112 | enum SigningAlgorithm {
    |      ^^^^^^^^^^^^^^^^

error: struct `VerificationResult` is never constructed
   --> src/evidence_pipeline.rs:119:8
    |
119 | struct VerificationResult {
    |        ^^^^^^^^^^^^^^^^^^

error: enum `StorageBackend` is never used
   --> src/evidence_pipeline.rs:127:6
    |
127 | enum StorageBackend {
    |      ^^^^^^^^^^^^^^

error: struct `AzureBlobConfig` is never constructed
   --> src/evidence_pipeline.rs:134:8
    |
134 | struct AzureBlobConfig {
    |        ^^^^^^^^^^^^^^^

error: struct `S3Config` is never constructed
   --> src/evidence_pipeline.rs:141:8
    |
141 | struct S3Config {
    |        ^^^^^^^^

error: multiple associated items are never used
   --> src/evidence_pipeline.rs:147:18
    |
146 | impl EvidencePipeline {
    | --------------------- associated items in this implementation
147 |     pub async fn new(
    |                  ^^^
...
163 |     pub async fn collect_evidence(
    |                  ^^^^^^^^^^^^^^^^
...
238 |     pub async fn verify_evidence(&self, evidence_id: Uuid) -> Result<VerificationStatus, String> {
    |                  ^^^^^^^^^^^^^^^
...
315 |     pub async fn add_custody_entry(
    |                  ^^^^^^^^^^^^^^^^^
...
345 |     pub async fn export_evidence(
    |                  ^^^^^^^^^^^^^^^
...
378 |     pub async fn archive_evidence(&self, older_than: DateTime<Utc>) -> Result<u32, String> {
    |                  ^^^^^^^^^^^^^^^^
...
402 |     pub async fn search_evidence(&self, criteria: SearchCriteria) -> Result<Vec<Evidence>, String> {
    |                  ^^^^^^^^^^^^^^^
...
420 |     fn calculate_hash(&self, data: &str) -> String {
    |        ^^^^^^^^^^^^^^
...
426 |     async fn sign_evidence(&self, hash: &str) -> Result<String, String> {
    |              ^^^^^^^^^^^^^
...
438 |     async fn verify_signature(
    |              ^^^^^^^^^^^^^^^^
...
456 |     async fn initialize_signing_keys() -> Result<SigningKeys, String> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
480 |     fn get_storage_location(&self, evidence_id: &Uuid) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^
...
495 |     async fn store_evidence(&self, evidence: Evidence) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^
...
501 |     async fn persist_to_storage(&self, evidence: &Evidence) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^^^
...
507 |     async fn persist_to_database(
    |              ^^^^^^^^^^^^^^^^^^^
...
543 |     async fn archive_to_storage(&self, evidence: &Evidence) -> Result<(), String> {
    |              ^^^^^^^^^^^^^^^^^^
...
549 |     fn matches_criteria(&self, evidence: &Evidence, criteria: &SearchCriteria) -> bool {
    |        ^^^^^^^^^^^^^^^^

error: struct `SearchCriteria` is never constructed
   --> src/evidence_pipeline.rs:606:12
    |
606 | pub struct SearchCriteria {
    |            ^^^^^^^^^^^^^^

error: enum `ExportFormat` is never used
   --> src/evidence_pipeline.rs:617:10
    |
617 | pub enum ExportFormat {
    |          ^^^^^^^^^^^^

error: function `matches_evidence_type` is never used
   --> src/evidence_pipeline.rs:623:4
    |
623 | fn matches_evidence_type(actual: &EvidenceType, expected: &EvidenceType) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^^

error: trait `FinOpsEngine` is never used
   --> src/finops/mod.rs:107:11
    |
107 | pub trait FinOpsEngine: Send + Sync {
    |           ^^^^^^^^^^^^

error: enum `FinOpsError` is never used
   --> src/finops/mod.rs:130:10
    |
130 | pub enum FinOpsError {
    |          ^^^^^^^^^^^

error: struct `AzureFinOpsEngine` is never constructed
   --> src/finops/mod.rs:140:12
    |
140 | pub struct AzureFinOpsEngine {
    |            ^^^^^^^^^^^^^^^^^

error: struct `CachedMetrics` is never constructed
   --> src/finops/mod.rs:146:8
    |
146 | struct CachedMetrics {
    |        ^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/finops/mod.rs:152:12
    |
151 | impl AzureFinOpsEngine {
    | ---------------------- associated items in this implementation
152 |     pub fn new(azure_client: crate::azure_client_async::AsyncAzureClient) -> Self {
    |            ^^^
...
159 |     async fn generate_optimal_schedule(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
178 |     fn parse_optimization_id<'a>(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
191 |     async fn get_recommended_sku(&self, _resource_id: &str) -> Result<String, FinOpsError> {
    |              ^^^^^^^^^^^^^^^^^^^
...
195 |     async fn analyze_cause_from_changes(&self, _changes: &[serde_json::Value]) -> String {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
199 |     fn calculate_idle_days(&self, _metrics: &serde_json::Value) -> u32 {
    |        ^^^^^^^^^^^^^^^^^^^
...
203 |     async fn generate_idle_recommendation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
216 |     fn generate_idle_recommendation_json(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
231 |     fn assess_performance_impact(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
239 |     fn calculate_confidence(&self, _metrics: &serde_json::Value) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
243 |     fn extract_vm_family(&self, meter_name: &str) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^
...
253 |     fn calculate_real_savings(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
285 |     fn calculate_breakeven(
    |        ^^^^^^^^^^^^^^^^^^^
...
300 |     fn calculate_commitment_confidence(&self, pattern: &UsagePattern) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
308 |     fn calculate_idle_score(&self, metrics: &serde_json::Value) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
343 |     fn calculate_rightsizing(&self, current: &VmSku, metrics: &ResourceMetrics) -> Option<VmSku> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
348 |     fn calculate_rightsizing_from_json(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
385 |     async fn optimize_commitment_mix(&self, usage: &UsagePattern) -> CommitmentMix {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
398 |     async fn detect_cost_anomaly(&self, timeseries: &[CostDataPoint]) -> Vec<CostAnomaly> {
    |              ^^^^^^^^^^^^^^^^^^^
...
441 |     async fn infer_cause(&self, point: &CostDataPoint, history: &[CostDataPoint]) -> String {
    |              ^^^^^^^^^^^
...
454 |     fn find_smaller_sku(&self, current: &VmSku) -> Option<VmSku> {
    |        ^^^^^^^^^^^^^^^^

error: struct `ResourceMetrics` is never constructed
   --> src/finops/mod.rs:497:8
    |
497 | struct ResourceMetrics {
    |        ^^^^^^^^^^^^^^^

error: struct `VmSku` is never constructed
   --> src/finops/mod.rs:508:8
    |
508 | struct VmSku {
    |        ^^^^^

error: struct `UsagePattern` is never constructed
   --> src/finops/mod.rs:516:8
    |
516 | struct UsagePattern {
    |        ^^^^^^^^^^^^

error: struct `CommitmentMix` is never constructed
   --> src/finops/mod.rs:524:8
    |
524 | struct CommitmentMix {
    |        ^^^^^^^^^^^^^

error: struct `SavingsEstimate` is never constructed
   --> src/finops/mod.rs:541:8
    |
541 | struct SavingsEstimate {
    |        ^^^^^^^^^^^^^^^

error: function `get_finops_metrics` is never used
    --> src/finops/mod.rs:1020:14
     |
1020 | pub async fn get_finops_metrics(
     |              ^^^^^^^^^^^^^^^^^^

error: struct `GovernanceCoordinator` is never constructed
  --> src/governance/mod.rs:24:12
   |
24 | pub struct GovernanceCoordinator {
   |            ^^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `get_governance_health` are never used
   --> src/governance/mod.rs:64:18
    |
62  | impl GovernanceCoordinator {
    | -------------------------- associated items in this implementation
63  |     /// Create a new governance coordinator with all Azure integrations
64  |     pub async fn new(azure_client: Arc<AzureClient>) -> Result<Self, GovernanceError> {
    |                  ^^^
...
122 |     pub async fn get_governance_health(&self) -> Result<GovernanceHealthReport, GovernanceError> {
    |                  ^^^^^^^^^^^^^^^^^^^^^

error: enum `GovernanceError` is never used
   --> src/governance/mod.rs:178:10
    |
178 | pub enum GovernanceError {
    |          ^^^^^^^^^^^^^^^

error: enum `HealthStatus` is never used
   --> src/governance/mod.rs:224:10
    |
224 | pub enum HealthStatus {
    |          ^^^^^^^^^^^^

error: struct `ComponentHealth` is never constructed
   --> src/governance/mod.rs:242:12
    |
242 | pub struct ComponentHealth {
    |            ^^^^^^^^^^^^^^^

error: struct `GovernanceHealthReport` is never constructed
   --> src/governance/mod.rs:252:12
    |
252 | pub struct GovernanceHealthReport {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: function `calculate_overall_health` is never used
   --> src/governance/mod.rs:268:4
    |
268 | fn calculate_overall_health(statuses: &[HealthStatus]) -> HealthStatus {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

error: type alias `GovernanceResult` is never used
   --> src/governance/mod.rs:279:10
    |
279 | pub type GovernanceResult<T> = Result<T, GovernanceError>;
    |          ^^^^^^^^^^^^^^^^

error: struct `AccessGovernanceEngine` is never constructed
  --> src/governance/access_control.rs:12:12
   |
12 | pub struct AccessGovernanceEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^^

error: struct `CachedAccessData` is never constructed
  --> src/governance/access_control.rs:22:12
   |
22 | pub struct CachedAccessData {
   |            ^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/access_control.rs:29:12
   |
28 | impl CachedAccessData {
   | --------------------- method in this implementation
29 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `RoleAnalyzer` is never constructed
   --> src/governance/access_control.rs:326:12
    |
326 | pub struct RoleAnalyzer {
    |            ^^^^^^^^^^^^

error: struct `PermissionMonitor` is never constructed
   --> src/governance/access_control.rs:332:12
    |
332 | pub struct PermissionMonitor {
    |            ^^^^^^^^^^^^^^^^^

error: struct `PermissionUsage` is never constructed
   --> src/governance/access_control.rs:338:12
    |
338 | pub struct PermissionUsage {
    |            ^^^^^^^^^^^^^^^

error: struct `IdentityTracker` is never constructed
   --> src/governance/access_control.rs:346:12
    |
346 | pub struct IdentityTracker {
    |            ^^^^^^^^^^^^^^^

error: struct `IdentityInfo` is never constructed
   --> src/governance/access_control.rs:352:12
    |
352 | pub struct IdentityInfo {
    |            ^^^^^^^^^^^^

error: struct `ActivityPattern` is never constructed
   --> src/governance/access_control.rs:362:12
    |
362 | pub struct ActivityPattern {
    |            ^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/access_control.rs:370:18
    |
369 | impl AccessGovernanceEngine {
    | --------------------------- associated items in this implementation
370 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
    |                  ^^^
...
381 |     pub async fn analyze_access_patterns(&self, scope: &str) -> GovernanceResult<AccessData> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
408 |     pub async fn detect_privilege_escalation(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
481 |     pub async fn enforce_least_privilege(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
568 |     pub async fn monitor_access_reviews(&self, scope: &str) -> GovernanceResult<Vec<AccessReview>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
596 |     pub async fn get_access_metrics(&self, scope: &str) -> GovernanceResult<AccessMetrics> {
    |                  ^^^^^^^^^^^^^^^^^^
...
620 |     pub async fn create_access_review(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
632 |     pub async fn remediate_access_violations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
655 |     pub async fn health_check(&self) -> ComponentHealth {
    |                  ^^^^^^^^^^^^
...
679 |     async fn fetch_access_data(&self, scope: &str) -> GovernanceResult<AccessData> {
    |              ^^^^^^^^^^^^^^^^^
...
815 |     fn is_privilege_escalation(&self, assignment: &RoleAssignment) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
824 |     fn has_excessive_permissions(&self, assignment: &RoleAssignment) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
829 |     fn analyze_permission_patterns(&self, access_data: &AccessData) -> HashMap<String, u32> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
843 |     fn has_recent_access_review(&self, account: &PrivilegedAccount) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `get_privilege_level` are never used
   --> src/governance/access_control.rs:890:12
    |
889 | impl RoleAnalyzer {
    | ----------------- associated items in this implementation
890 |     pub fn new() -> Self {
    |            ^^^
...
912 |     pub fn get_privilege_level(&self, role_name: &str) -> PrivilegeLevel {
    |            ^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `track_permission_usage` are never used
   --> src/governance/access_control.rs:921:12
    |
920 | impl PermissionMonitor {
    | ---------------------- associated items in this implementation
921 |     pub fn new() -> Self {
    |            ^^^
...
928 |     pub fn track_permission_usage(&mut self, permission: &str, principal_id: &str) {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `track_identity_activity`, and `get_identity_risk_score` are never used
   --> src/governance/access_control.rs:948:12
    |
947 | impl IdentityTracker {
    | -------------------- associated items in this implementation
948 |     pub fn new() -> Self {
    |            ^^^
...
955 |     pub fn track_identity_activity(&mut self, principal_id: &str, activity: ActivityPattern) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
962 |     pub fn get_identity_risk_score(&self, principal_id: &str) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

error: struct `GovernanceBlueprints` is never constructed
  --> src/governance/blueprints.rs:13:12
   |
13 | pub struct GovernanceBlueprints {
   |            ^^^^^^^^^^^^^^^^^^^^

error: struct `CachedBlueprintData` is never constructed
  --> src/governance/blueprints.rs:24:12
   |
24 | pub struct CachedBlueprintData {
   |            ^^^^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/blueprints.rs:31:12
   |
30 | impl CachedBlueprintData {
   | ------------------------ method in this implementation
31 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `BlueprintTemplateEngine` is never constructed
   --> src/governance/blueprints.rs:708:12
    |
708 | pub struct BlueprintTemplateEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

error: struct `BlueprintTemplate` is never constructed
   --> src/governance/blueprints.rs:714:12
    |
714 | pub struct BlueprintTemplate {
    |            ^^^^^^^^^^^^^^^^^

error: struct `TemplateArtifact` is never constructed
   --> src/governance/blueprints.rs:724:12
    |
724 | pub struct TemplateArtifact {
    |            ^^^^^^^^^^^^^^^^

error: struct `ParameterValidator` is never constructed
   --> src/governance/blueprints.rs:731:12
    |
731 | pub struct ParameterValidator {
    |            ^^^^^^^^^^^^^^^^^^

error: struct `ValidationRule` is never constructed
   --> src/governance/blueprints.rs:737:12
    |
737 | pub struct ValidationRule {
    |            ^^^^^^^^^^^^^^

error: struct `BlueprintComplianceMonitor` is never constructed
   --> src/governance/blueprints.rs:743:12
    |
743 | pub struct BlueprintComplianceMonitor {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `CompliancePolicy` is never constructed
   --> src/governance/blueprints.rs:749:12
    |
749 | pub struct CompliancePolicy {
    |            ^^^^^^^^^^^^^^^^

error: struct `ComplianceControl` is never constructed
   --> src/governance/blueprints.rs:757:12
    |
757 | pub struct ComplianceControl {
    |            ^^^^^^^^^^^^^^^^^

error: struct `ComplianceEvaluationEngine` is never constructed
   --> src/governance/blueprints.rs:764:12
    |
764 | pub struct ComplianceEvaluationEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `EvaluationResult` is never constructed
   --> src/governance/blueprints.rs:770:12
    |
770 | pub struct EvaluationResult {
    |            ^^^^^^^^^^^^^^^^

error: struct `TrendAnalyzer` is never constructed
   --> src/governance/blueprints.rs:777:12
    |
777 | pub struct TrendAnalyzer {
    |            ^^^^^^^^^^^^^

error: struct `PredictionModel` is never constructed
   --> src/governance/blueprints.rs:783:12
    |
783 | pub struct PredictionModel {
    |            ^^^^^^^^^^^^^^^

error: struct `DeploymentTracker` is never constructed
   --> src/governance/blueprints.rs:789:12
    |
789 | pub struct DeploymentTracker {
    |            ^^^^^^^^^^^^^^^^^

error: struct `PerformanceMetrics` is never constructed
   --> src/governance/blueprints.rs:795:12
    |
795 | pub struct PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^

error: struct `GovernanceValidator` is never constructed
   --> src/governance/blueprints.rs:802:12
    |
802 | pub struct GovernanceValidator {
    |            ^^^^^^^^^^^^^^^^^^^

error: struct `GovernanceRule` is never constructed
   --> src/governance/blueprints.rs:808:12
    |
808 | pub struct GovernanceRule {
    |            ^^^^^^^^^^^^^^

error: enum `GovernanceRuleType` is never used
   --> src/governance/blueprints.rs:817:10
    |
817 | pub enum GovernanceRuleType {
    |          ^^^^^^^^^^^^^^^^^^

error: struct `PolicyValidationEngine` is never constructed
   --> src/governance/blueprints.rs:825:12
    |
825 | pub struct PolicyValidationEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: struct `PolicyDefinition` is never constructed
   --> src/governance/blueprints.rs:831:12
    |
831 | pub struct PolicyDefinition {
    |            ^^^^^^^^^^^^^^^^

error: struct `ValidationCacheEntry` is never constructed
   --> src/governance/blueprints.rs:839:12
    |
839 | pub struct ValidationCacheEntry {
    |            ^^^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
    --> src/governance/blueprints.rs:847:18
     |
846  | impl GovernanceBlueprints {
     | ------------------------- associated items in this implementation
847  |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
     |                  ^^^
...
859  |     pub async fn get_blueprint_management_data(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
889  |     pub async fn list_blueprint_definitions(&self) -> GovernanceResult<Vec<BlueprintDefinition>> {
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
895  |     pub async fn create_blueprint_definition(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
929  |     pub async fn publish_blueprint(
     |                  ^^^^^^^^^^^^^^^^^
...
947  |     pub async fn create_blueprint_assignment(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
987  |     pub async fn assess_blueprint_compliance(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1003 |     pub async fn monitor_deployments(
     |                  ^^^^^^^^^^^^^^^^^^^
...
1012 |     pub async fn get_governance_dashboard(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
1052 |     pub async fn generate_blueprint_template(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1060 |     pub async fn validate_blueprint_deployment(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1071 |     pub async fn rollback_deployment(
     |                  ^^^^^^^^^^^^^^^^^^^
...
1091 |     pub async fn get_performance_analytics(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1111 |     pub async fn health_check(&self) -> ComponentHealth {
     |                  ^^^^^^^^^^^^
...
1139 |     async fn fetch_blueprint_data(&self, scope: &str) -> GovernanceResult<BlueprintManagementData> {
     |              ^^^^^^^^^^^^^^^^^^^^
...
1376 |     async fn evaluate_assignment_compliance(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1417 |     fn calculate_compliance_trend(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1431 |     fn calculate_efficiency_improvements(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1444 |     fn generate_performance_recommendations(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `generate_template` are never used
    --> src/governance/blueprints.rs:1472:12
     |
1471 | impl BlueprintTemplateEngine {
     | ---------------------------- associated items in this implementation
1472 |     pub fn new() -> Self {
     |            ^^^
...
1479 |     pub async fn generate_template(
     |                  ^^^^^^^^^^^^^^^^^

error: associated function `new` is never used
    --> src/governance/blueprints.rs:1518:12
     |
1517 | impl BlueprintComplianceMonitor {
     | ------------------------------- associated function in this implementation
1518 |     pub fn new() -> Self {
     |            ^^^

error: associated items `new` and `calculate_trends` are never used
    --> src/governance/blueprints.rs:1533:12
     |
1532 | impl DeploymentTracker {
     | ---------------------- associated items in this implementation
1533 |     pub fn new() -> Self {
     |            ^^^
...
1540 |     pub fn calculate_trends(&self) -> TrendAnalysis {
     |            ^^^^^^^^^^^^^^^^

error: associated items `new`, `validate_blueprint_definition`, `validate_assignment_parameters`, and `validate_deployment` are never used
    --> src/governance/blueprints.rs:1552:12
     |
1551 | impl GovernanceValidator {
     | ------------------------ associated items in this implementation
1552 |     pub fn new() -> Self {
     |            ^^^
...
1562 |     pub fn validate_blueprint_definition(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1570 |     pub fn validate_assignment_parameters(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1578 |     pub async fn validate_deployment(
     |                  ^^^^^^^^^^^^^^^^^^^

error: struct `CostGovernanceEngine` is never constructed
  --> src/governance/cost_management.rs:12:12
   |
12 | pub struct CostGovernanceEngine {
   |            ^^^^^^^^^^^^^^^^^^^^

error: struct `CachedCostData` is never constructed
  --> src/governance/cost_management.rs:22:12
   |
22 | pub struct CachedCostData {
   |            ^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/cost_management.rs:29:12
   |
28 | impl CachedCostData {
   | ------------------- method in this implementation
29 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `BudgetMonitor` is never constructed
   --> src/governance/cost_management.rs:313:12
    |
313 | pub struct BudgetMonitor {
    |            ^^^^^^^^^^^^^

error: associated items `new` and `evaluate_budget_health` are never used
   --> src/governance/cost_management.rs:318:12
    |
317 | impl BudgetMonitor {
    | ------------------ associated items in this implementation
318 |     pub fn new() -> Self {
    |            ^^^
...
324 |     pub fn evaluate_budget_health(&self, budget: &BudgetStatus) -> BudgetHealthStatus {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: struct `ForecastEngine` is never constructed
   --> src/governance/cost_management.rs:337:12
    |
337 | pub struct ForecastEngine {
    |            ^^^^^^^^^^^^^^

error: associated items `new` and `generate_forecast` are never used
   --> src/governance/cost_management.rs:342:12
    |
341 | impl ForecastEngine {
    | ------------------- associated items in this implementation
342 |     pub fn new() -> Self {
    |            ^^^
...
348 |     pub fn generate_forecast(
    |            ^^^^^^^^^^^^^^^^^

error: struct `OptimizationAnalyzer` is never constructed
   --> src/governance/cost_management.rs:400:12
    |
400 | pub struct OptimizationAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `analyze_optimization_potential` are never used
   --> src/governance/cost_management.rs:405:12
    |
404 | impl OptimizationAnalyzer {
    | ------------------------- associated items in this implementation
405 |     pub fn new() -> Self {
    |            ^^^
...
417 |     pub fn analyze_optimization_potential(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/cost_management.rs:479:18
    |
478 | impl CostGovernanceEngine {
    | ------------------------- associated items in this implementation
479 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
    |                  ^^^
...
490 |     pub async fn analyze_cost_trends(&self, scope: &str) -> GovernanceResult<CostTrendAnalysis> {
    |                  ^^^^^^^^^^^^^^^^^^^
...
548 |     pub async fn create_budget_alerts(&self, budget: BudgetDefinition) -> GovernanceResult<String> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
565 |     pub async fn forecast_spending(
    |                  ^^^^^^^^^^^^^^^^^
...
582 |     pub async fn optimize_costs(&self, scope: &str) -> GovernanceResult<Vec<CostOptimization>> {
    |                  ^^^^^^^^^^^^^^
...
600 |     pub async fn get_finops_insights(&self, scope: &str) -> GovernanceResult<FinOpsInsights> {
    |                  ^^^^^^^^^^^^^^^^^^^
...
626 |     pub async fn monitor_budget_status(&self, budget_id: &str) -> GovernanceResult<BudgetStatus> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
668 |     pub async fn health_check(&self) -> ComponentHealth {
    |                  ^^^^^^^^^^^^
...
685 |     async fn fetch_cost_data(&self, scope: &str, days: u32) -> GovernanceResult<CostData> {
    |              ^^^^^^^^^^^^^^^
...
716 |     fn build_cost_trends(&self, cost_data: &CostData) -> Vec<CostTrend> {
    |        ^^^^^^^^^^^^^^^^^
...
750 |     fn detect_cost_anomalies(&self, trends: &[CostTrend]) -> Vec<CostAnomaly> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
789 |     fn calculate_trend_direction(&self, trends: &[CostTrend]) -> TrendDirection {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
813 |     fn calculate_variance(&self, trends: &[CostTrend]) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^
...
825 |     fn build_budget_request(&self, budget: &BudgetDefinition) -> GovernanceResult<String> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
833 |     async fn setup_budget_monitoring(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
842 |     async fn get_historical_costs(
    |              ^^^^^^^^^^^^^^^^^^^^
...
851 |     async fn get_cost_breakdown_by_service(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
876 |     async fn enhance_optimizations_with_utilization(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
884 |     async fn calculate_cost_allocation_accuracy(&self, _scope: &str) -> GovernanceResult<f64> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
888 |     async fn calculate_showback_coverage(&self, _scope: &str) -> GovernanceResult<f64> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
892 |     async fn calculate_budget_variance(&self, _scope: &str) -> GovernanceResult<f64> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
896 |     async fn calculate_optimization_adoption_rate(&self, _scope: &str) -> GovernanceResult<f64> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
900 |     async fn get_business_unit_costs(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
920 |     async fn identify_top_cost_drivers(&self, _scope: &str) -> GovernanceResult<Vec<CostDriver>> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
937 |     async fn get_budget_definition(&self, _budget_id: &str) -> GovernanceResult<BudgetDefinition> {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
955 |     async fn get_current_spend(&self, _scope: &str) -> GovernanceResult<f64> {
    |              ^^^^^^^^^^^^^^^^^
...
959 |     async fn check_triggered_alerts(
    |              ^^^^^^^^^^^^^^^^^^^^^^

error: struct `IdentityGovernanceClient` is never constructed
  --> src/governance/identity.rs:11:12
   |
11 | pub struct IdentityGovernanceClient {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `get_identity_governance_state`, `perform_access_review`, `manage_privileged_access`, and `health_check` are never used
  --> src/governance/identity.rs:38:18
   |
37 | impl IdentityGovernanceClient {
   | ----------------------------- associated items in this implementation
38 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
   |                  ^^^
...
42 |     pub async fn get_identity_governance_state(&self) -> GovernanceResult<IdentityState> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
52 |     pub async fn perform_access_review(
   |                  ^^^^^^^^^^^^^^^^^^^^^
...
64 |     pub async fn manage_privileged_access(&self, _request: PIMRequest) -> GovernanceResult<()> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
69 |     pub async fn health_check(&self) -> ComponentHealth {
   |                  ^^^^^^^^^^^^

error: struct `GovernanceMonitor` is never constructed
  --> src/governance/monitoring.rs:11:12
   |
11 | pub struct GovernanceMonitor {
   |            ^^^^^^^^^^^^^^^^^

error: associated items `new`, `create_governance_alerts`, `query_compliance_metrics`, `track_policy_violations`, and `health_check` are never used
  --> src/governance/monitoring.rs:44:18
   |
43 | impl GovernanceMonitor {
   | ---------------------- associated items in this implementation
44 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
   |                  ^^^
...
48 |     pub async fn create_governance_alerts(&self, _rules: Vec<AlertRule>) -> GovernanceResult<()> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
53 |     pub async fn query_compliance_metrics(&self, _kql: &str) -> GovernanceResult<MetricsResult> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
65 |     pub async fn track_policy_violations(&self) -> GovernanceResult<Vec<PolicyViolation>> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
70 |     pub async fn health_check(&self) -> ComponentHealth {
   |                  ^^^^^^^^^^^^

error: struct `NetworkGovernanceEngine` is never constructed
  --> src/governance/network.rs:13:12
   |
13 | pub struct NetworkGovernanceEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

error: struct `CachedNetworkData` is never constructed
  --> src/governance/network.rs:23:12
   |
23 | pub struct CachedNetworkData {
   |            ^^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/network.rs:30:12
   |
29 | impl CachedNetworkData {
   | ---------------------- method in this implementation
30 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `NetworkSecurityAnalyzer` is never constructed
   --> src/governance/network.rs:508:12
    |
508 | pub struct NetworkSecurityAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

error: struct `VulnerabilityPattern` is never constructed
   --> src/governance/network.rs:514:12
    |
514 | pub struct VulnerabilityPattern {
    |            ^^^^^^^^^^^^^^^^^^^^

error: struct `FirewallMonitor` is never constructed
   --> src/governance/network.rs:522:12
    |
522 | pub struct FirewallMonitor {
    |            ^^^^^^^^^^^^^^^

error: struct `FirewallPolicy` is never constructed
   --> src/governance/network.rs:528:12
    |
528 | pub struct FirewallPolicy {
    |            ^^^^^^^^^^^^^^

error: struct `TrafficPattern` is never constructed
   --> src/governance/network.rs:536:12
    |
536 | pub struct TrafficPattern {
    |            ^^^^^^^^^^^^^^

error: struct `VNetManager` is never constructed
   --> src/governance/network.rs:546:12
    |
546 | pub struct VNetManager {
    |            ^^^^^^^^^^^

error: multiple associated items are never used
    --> src/governance/network.rs:552:18
     |
551  | impl NetworkGovernanceEngine {
     | ---------------------------- associated items in this implementation
552  |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
     |                  ^^^
...
563  |     pub async fn analyze_network_security(&self, scope: &str) -> GovernanceResult<NetworkData> {
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
590  |     pub async fn detect_network_vulnerabilities(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
621  |     pub async fn generate_network_recommendations(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
774  |     pub async fn monitor_firewall_health(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
820  |     pub async fn get_network_metrics(&self, scope: &str) -> GovernanceResult<NetworkMetrics> {
     |                  ^^^^^^^^^^^^^^^^^^^
...
865  |     pub async fn health_check(&self) -> ComponentHealth {
     |                  ^^^^^^^^^^^^
...
889  |     async fn fetch_network_data(&self, scope: &str) -> GovernanceResult<NetworkData> {
     |              ^^^^^^^^^^^^^^^^^^
...
1114 |     fn analyze_nsg_vulnerabilities(&self, nsg: &NetworkSecurityGroup) -> Vec<NetworkVulnerability> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1152 |     fn analyze_firewall_vulnerabilities(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1183 |     fn analyze_vnet_vulnerabilities(&self, vnet: &VirtualNetwork) -> Vec<NetworkVulnerability> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1209 |     fn analyze_public_ip_vulnerabilities(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: associated function `new` is never used
    --> src/governance/network.rs:1240:12
     |
1239 | impl NetworkSecurityAnalyzer {
     | ---------------------------- associated function in this implementation
1240 |     pub fn new() -> Self {
     |            ^^^

error: associated function `new` is never used
    --> src/governance/network.rs:1273:12
     |
1272 | impl FirewallMonitor {
     | -------------------- associated function in this implementation
1273 |     pub fn new() -> Self {
     |            ^^^

error: associated function `new` is never used
    --> src/governance/network.rs:1282:12
     |
1281 | impl VNetManager {
     | ---------------- associated function in this implementation
1282 |     pub fn new() -> Self {
     |            ^^^

error: struct `OptimizationEngine` is never constructed
  --> src/governance/optimization.rs:13:12
   |
13 | pub struct OptimizationEngine {
   |            ^^^^^^^^^^^^^^^^^^

error: struct `CachedRecommendationData` is never constructed
  --> src/governance/optimization.rs:25:12
   |
25 | pub struct CachedRecommendationData {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/optimization.rs:32:12
   |
31 | impl CachedRecommendationData {
   | ----------------------------- method in this implementation
32 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `CostOptimizationAnalyzer` is never constructed
   --> src/governance/optimization.rs:336:12
    |
336 | pub struct CostOptimizationAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `PricingInfo` is never constructed
   --> src/governance/optimization.rs:343:12
    |
343 | pub struct PricingInfo {
    |            ^^^^^^^^^^^

error: struct `UsagePattern` is never constructed
   --> src/governance/optimization.rs:353:12
    |
353 | pub struct UsagePattern {
    |            ^^^^^^^^^^^^

error: struct `ReservationOpportunity` is never constructed
   --> src/governance/optimization.rs:363:12
    |
363 | pub struct ReservationOpportunity {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: struct `PerformanceAnalyzer` is never constructed
   --> src/governance/optimization.rs:379:12
    |
379 | pub struct PerformanceAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^

error: struct `PerformanceBaseline` is never constructed
   --> src/governance/optimization.rs:385:12
    |
385 | pub struct PerformanceBaseline {
    |            ^^^^^^^^^^^^^^^^^^^

error: struct `BottleneckDetector` is never constructed
   --> src/governance/optimization.rs:394:12
    |
394 | pub struct BottleneckDetector {
    |            ^^^^^^^^^^^^^^^^^^

error: struct `SecurityOptimizer` is never constructed
   --> src/governance/optimization.rs:402:12
    |
402 | pub struct SecurityOptimizer {
    |            ^^^^^^^^^^^^^^^^^

error: struct `SecurityPolicy` is never constructed
   --> src/governance/optimization.rs:408:12
    |
408 | pub struct SecurityPolicy {
    |            ^^^^^^^^^^^^^^

error: struct `VulnerabilityInfo` is never constructed
   --> src/governance/optimization.rs:417:12
    |
417 | pub struct VulnerabilityInfo {
    |            ^^^^^^^^^^^^^^^^^

error: struct `ReliabilityMonitor` is never constructed
   --> src/governance/optimization.rs:426:12
    |
426 | pub struct ReliabilityMonitor {
    |            ^^^^^^^^^^^^^^^^^^

error: struct `SlaTarget` is never constructed
   --> src/governance/optimization.rs:432:12
    |
432 | pub struct SlaTarget {
    |            ^^^^^^^^^

error: struct `DrPlan` is never constructed
   --> src/governance/optimization.rs:441:12
    |
441 | pub struct DrPlan {
    |            ^^^^^^

error: struct `OperationalExcellenceAnalyzer` is never constructed
   --> src/governance/optimization.rs:450:12
    |
450 | pub struct OperationalExcellenceAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `AutomationOpportunity` is never constructed
   --> src/governance/optimization.rs:456:12
    |
456 | pub struct AutomationOpportunity {
    |            ^^^^^^^^^^^^^^^^^^^^^

error: struct `MonitoringGap` is never constructed
   --> src/governance/optimization.rs:465:12
    |
465 | pub struct MonitoringGap {
    |            ^^^^^^^^^^^^^

error: multiple associated items are never used
    --> src/governance/optimization.rs:473:18
     |
472  | impl OptimizationEngine {
     | ----------------------- associated items in this implementation
473  |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
     |                  ^^^
...
486  |     pub async fn get_optimization_recommendations(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
516  |     pub async fn analyze_cost_optimization(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
552  |     pub async fn analyze_performance_optimization(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
586  |     pub async fn analyze_security_optimization(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
629  |     pub async fn analyze_reliability_optimization(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
666  |     pub async fn analyze_operational_excellence(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
705  |     pub async fn generate_optimization_roadmap(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
800  |     pub async fn get_optimization_metrics(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
839  |     pub async fn health_check(&self) -> ComponentHealth {
     |                  ^^^^^^^^^^^^
...
869  |     async fn fetch_advisor_recommendations(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1118 |     fn count_high_impact_recommendations(&self, optimization_data: &OptimizationData) -> u32 {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1158 |     fn calculate_priority(
     |        ^^^^^^^^^^^^^^^^^^
...
1174 |     fn estimate_timeline(&self, effort: &ImplementationEffort) -> String {
     |        ^^^^^^^^^^^^^^^^^
...
1183 |     fn create_implementation_phases(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1226 |     pub async fn get_advisor_recommendations(
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1264 |     pub async fn get_optimization_summary(&self) -> GovernanceResult<OptimizationSummary> {
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
1289 |     pub async fn apply_optimization(&self, _recommendation_id: &str) -> GovernanceResult<()> {
     |                  ^^^^^^^^^^^^^^^^^^

error: associated items `new` and `assess_risk_level` are never used
    --> src/governance/optimization.rs:1297:12
     |
1296 | impl CostOptimizationAnalyzer {
     | ----------------------------- associated items in this implementation
1297 |     pub fn new() -> Self {
     |            ^^^
...
1305 |     pub fn assess_risk_level(&self, recommendation: &CostRecommendation) -> RiskLevel {
     |            ^^^^^^^^^^^^^^^^^

error: associated function `new` is never used
    --> src/governance/optimization.rs:1316:12
     |
1315 | impl PerformanceAnalyzer {
     | ------------------------ associated function in this implementation
1316 |     pub fn new() -> Self {
     |            ^^^

error: associated function `new` is never used
    --> src/governance/optimization.rs:1330:12
     |
1329 | impl SecurityOptimizer {
     | ---------------------- associated function in this implementation
1330 |     pub fn new() -> Self {
     |            ^^^

error: associated function `new` is never used
    --> src/governance/optimization.rs:1339:12
     |
1338 | impl ReliabilityMonitor {
     | ----------------------- associated function in this implementation
1339 |     pub fn new() -> Self {
     |            ^^^

error: associated function `new` is never used
    --> src/governance/optimization.rs:1348:12
     |
1347 | impl OperationalExcellenceAnalyzer {
     | ---------------------------------- associated function in this implementation
1348 |     pub fn new() -> Self {
     |            ^^^

error: struct `PolicyEngine` is never constructed
  --> src/governance/policy_engine.rs:14:12
   |
14 | pub struct PolicyEngine {
   |            ^^^^^^^^^^^^

error: struct `PolicyEngineConfig` is never constructed
  --> src/governance/policy_engine.rs:33:12
   |
33 | pub struct PolicyEngineConfig {
   |            ^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/policy_engine.rs:380:18
    |
378 | impl PolicyEngine {
    | ----------------- associated items in this implementation
379 |     /// Create a new Policy Engine
380 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
    |                  ^^^
...
393 |     pub async fn create_policy(&self, definition: PolicyDefinition) -> GovernanceResult<String> {
    |                  ^^^^^^^^^^^^^
...
454 |     pub async fn assign_policy(&self, assignment: PolicyAssignment) -> GovernanceResult<()> {
    |                  ^^^^^^^^^^^^^
...
498 |     pub async fn get_compliance_state(&self, scope: &str) -> GovernanceResult<ComplianceReport> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
535 |     pub async fn remediate_non_compliant(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
610 |     pub async fn create_exemption(&self, exemption: PolicyExemption) -> GovernanceResult<String> {
    |                  ^^^^^^^^^^^^^^^^
...
661 |     pub async fn evaluate_resource(
    |                  ^^^^^^^^^^^^^^^^^
...
709 |     fn validate_policy_definition(&self, definition: &PolicyDefinition) -> GovernanceResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
746 |     async fn find_applicable_policies(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
772 |     fn parse_compliance_response(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
818 |     fn parse_evaluation_results(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
836 |     fn parse_single_evaluation(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
870 |     pub async fn health_check(&self) -> ComponentHealth {
    |                  ^^^^^^^^^^^^

error: struct `ResourceGraphClient` is never constructed
  --> src/governance/resource_graph.rs:15:12
   |
15 | pub struct ResourceGraphClient {
   |            ^^^^^^^^^^^^^^^^^^^

error: struct `ResourceGraphConfig` is never constructed
  --> src/governance/resource_graph.rs:31:12
   |
31 | pub struct ResourceGraphConfig {
   |            ^^^^^^^^^^^^^^^^^^^

error: struct `CachedResourceData` is never constructed
  --> src/governance/resource_graph.rs:58:12
   |
58 | pub struct CachedResourceData {
   |            ^^^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/resource_graph.rs:70:12
   |
69 | impl CachedResourceData {
   | ----------------------- method in this implementation
70 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `QueryStatistics` is never constructed
  --> src/governance/resource_graph.rs:77:12
   |
77 | pub struct QueryStatistics {
   |            ^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/resource_graph.rs:231:18
    |
229 | impl ResourceGraphClient {
    | ------------------------ associated items in this implementation
230 |     /// Create a new Resource Graph client
231 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
    |                  ^^^
...
243 |     pub async fn with_config(
    |                  ^^^^^^^^^^^
...
256 |     pub async fn query_resources(&self, query: &str) -> GovernanceResult<ResourceQueryResult> {
    |                  ^^^^^^^^^^^^^^^
...
288 |     pub async fn get_compliance_state(&self, scope: &str) -> GovernanceResult<ComplianceState> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
344 |     pub async fn discover_resources_by_type(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
372 |     pub async fn discover_resources(
    |                  ^^^^^^^^^^^^^^^^^^
...
454 |     pub async fn get_resource_inventory(&self) -> GovernanceResult<ResourceInventory> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
494 |     async fn execute_query(&self, query: &str) -> GovernanceResult<ResourceQueryResult> {
    |              ^^^^^^^^^^^^^
...
547 |     async fn update_stats(&self, cache_hit: bool, query_time_ms: f64) {
    |              ^^^^^^^^^^^^
...
563 |     pub async fn get_statistics(&self) -> QueryStatistics {
    |                  ^^^^^^^^^^^^^^
...
568 |     pub fn clear_cache(&self) {
    |            ^^^^^^^^^^^
...
573 |     pub async fn health_check(&self) -> ComponentHealth {
    |                  ^^^^^^^^^^^^

error: struct `HttpResponse` is never constructed
   --> src/governance/resource_graph.rs:631:8
    |
631 | struct HttpResponse {
    |        ^^^^^^^^^^^^

error: struct `SecurityPostureEngine` is never constructed
  --> src/governance/security_posture.rs:12:12
   |
12 | pub struct SecurityPostureEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^

error: struct `CachedSecurityData` is never constructed
  --> src/governance/security_posture.rs:22:12
   |
22 | pub struct CachedSecurityData {
   |            ^^^^^^^^^^^^^^^^^^

error: method `is_expired` is never used
  --> src/governance/security_posture.rs:29:12
   |
28 | impl CachedSecurityData {
   | ----------------------- method in this implementation
29 |     pub fn is_expired(&self) -> bool {
   |            ^^^^^^^^^^

error: struct `ThreatDetector` is never constructed
   --> src/governance/security_posture.rs:304:12
    |
304 | pub struct ThreatDetector {
    |            ^^^^^^^^^^^^^^

error: struct `ThreatRule` is never constructed
   --> src/governance/security_posture.rs:310:12
    |
310 | pub struct ThreatRule {
    |            ^^^^^^^^^^

error: struct `ThreatModel` is never constructed
   --> src/governance/security_posture.rs:320:12
    |
320 | pub struct ThreatModel {
    |            ^^^^^^^^^^^

error: struct `ComplianceMonitor` is never constructed
   --> src/governance/security_posture.rs:328:12
    |
328 | pub struct ComplianceMonitor {
    |            ^^^^^^^^^^^^^^^^^

error: struct `VulnerabilityScanner` is never constructed
   --> src/governance/security_posture.rs:334:12
    |
334 | pub struct VulnerabilityScanner {
    |            ^^^^^^^^^^^^^^^^^^^^

error: struct `VulnerabilityData` is never constructed
   --> src/governance/security_posture.rs:341:12
    |
341 | pub struct VulnerabilityData {
    |            ^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/security_posture.rs:350:18
    |
349 | impl SecurityPostureEngine {
    | -------------------------- associated items in this implementation
350 |     pub async fn new(azure_client: Arc<AzureClient>) -> GovernanceResult<Self> {
    |                  ^^^
...
361 |     pub async fn assess_security_posture(&self, scope: &str) -> GovernanceResult<SecurityData> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
388 |     pub async fn monitor_threats(&self, scope: &str) -> GovernanceResult<Vec<SecurityThreat>> {
    |                  ^^^^^^^^^^^^^^^
...
407 |     pub async fn scan_vulnerabilities(&self, scope: &str) -> GovernanceResult<Vec<Vulnerability>> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
412 |     pub async fn monitor_compliance(
    |                  ^^^^^^^^^^^^^^^^^^
...
420 |     pub async fn generate_security_recommendations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
524 |     pub async fn auto_remediate_threats(&self, threat_id: &str) -> GovernanceResult<String> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
534 |     pub async fn get_security_metrics(&self, scope: &str) -> GovernanceResult<SecurityMetrics> {
    |                  ^^^^^^^^^^^^^^^^^^^^
...
558 |     pub async fn health_check(&self) -> ComponentHealth {
    |                  ^^^^^^^^^^^^
...
582 |     async fn fetch_security_data(&self, scope: &str) -> GovernanceResult<SecurityData> {
    |              ^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `detect_threats` are never used
   --> src/governance/security_posture.rs:769:12
    |
768 | impl ThreatDetector {
    | ------------------- associated items in this implementation
769 |     pub fn new() -> Self {
    |            ^^^
...
795 |     pub async fn detect_threats(&self, scope: &str) -> GovernanceResult<Vec<SecurityThreat>> {
    |                  ^^^^^^^^^^^^^^

error: associated items `new` and `assess_compliance` are never used
   --> src/governance/security_posture.rs:829:12
    |
828 | impl ComplianceMonitor {
    | ---------------------- associated items in this implementation
829 |     pub fn new() -> Self {
    |            ^^^
...
841 |     pub async fn assess_compliance(
    |                  ^^^^^^^^^^^^^^^^^

error: associated items `new` and `scan_scope` are never used
   --> src/governance/security_posture.rs:864:12
    |
863 | impl VulnerabilityScanner {
    | ------------------------- associated items in this implementation
864 |     pub fn new() -> Self {
    |            ^^^
...
872 |     pub async fn scan_scope(&self, scope: &str) -> GovernanceResult<Vec<Vulnerability>> {
    |                  ^^^^^^^^^^

error: struct `UnifiedGovernanceAPI` is never constructed
  --> src/governance/unified_api.rs:16:12
   |
16 | pub struct UnifiedGovernanceAPI {
   |            ^^^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/unified_api.rs:94:18
    |
93  | impl UnifiedGovernanceAPI {
    | ------------------------- associated items in this implementation
94  |     pub async fn new(
    |                  ^^^
...
111 |     pub async fn get_unified_dashboard(&self) -> GovernanceResult<GovernanceDashboard> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
179 |     pub async fn analyze_cross_domain_correlations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
223 |     pub async fn generate_predictive_insights(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
273 |     pub async fn get_ai_recommendations(&self, domain: &str) -> GovernanceResult<Vec<String>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
298 |     pub async fn search_governance_data(
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
347 |     pub async fn health_check(&self) -> GovernanceResult<HashMap<String, serde_json::Value>> {
    |                  ^^^^^^^^^^^^

error: struct `AIGovernanceEngine` is never constructed
  --> src/governance/ai/mod.rs:19:12
   |
19 | pub struct AIGovernanceEngine {
   |            ^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/ai/mod.rs:105:18
    |
104 | impl AIGovernanceEngine {
    | ----------------------- associated items in this implementation
105 |     pub async fn new(
    |                  ^^^
...
138 |     pub async fn analyze_governance_correlations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
180 |     pub async fn process_natural_language_query(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
189 |     pub async fn generate_compliance_predictions(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
     pub async fn generate_unified_insights(&self, scope: &str) -> GovernanceResult<Vec<AIInsight>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
263 |     async fn generate_cost_optimization_insights(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
289 |     async fn generate_security_insights(&self, scope: &str) -> GovernanceResult<Vec<AIInsight>> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub async fn execute_automated_recommendations(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
326 |     pub async fn health_check(&self) -> GovernanceResult<HashMap<String, String>> {
    |                  ^^^^^^^^^^^^

error: struct `ConversationalGovernance` is never constructed
  --> src/governance/ai/conversation.rs:11:12
   |
11 | pub struct ConversationalGovernance {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `IntentClassifier` is never constructed
  --> src/governance/ai/conversation.rs:58:12
   |
58 | pub struct IntentClassifier {
   |            ^^^^^^^^^^^^^^^^

error: struct `ContextManager` is never constructed
  --> src/governance/ai/conversation.rs:63:12
   |
63 | pub struct ContextManager {
   |            ^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/ai/conversation.rs:69:18
    |
68  | impl ConversationalGovernance {
    | ----------------------------- associated items in this implementation
69  |     pub async fn new(
    |                  ^^^
...
88  |     pub async fn process_query(
    |                  ^^^^^^^^^^^^^
...
125 |     async fn handle_resource_query(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
180 |     async fn handle_compliance_query(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
221 |     async fn handle_cost_query(
    |              ^^^^^^^^^^^^^^^^^
...
246 |     async fn handle_security_query(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
271 |     async fn handle_policy_query(
    |              ^^^^^^^^^^^^^^^^^^^
...
298 |     async fn handle_incident_query(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
322 |     async fn handle_report_query(
    |              ^^^^^^^^^^^^^^^^^^^
...
346 |     async fn handle_access_query(
    |              ^^^^^^^^^^^^^^^^^^^
...
370 |     async fn handle_optimization_query(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
394 |     async fn handle_unknown_query(
    |              ^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `classify` are never used
   --> src/governance/ai/conversation.rs:427:8
    |
426 | impl IntentClassifier {
    | --------------------- associated items in this implementation
427 |     fn new() -> Self {
    |        ^^^
...
482 |     fn classify(&self, query: &str) -> GovernanceResult<Intent> {
    |        ^^^^^^^^

error: associated items `new`, `get_context`, and `update_context` are never used
   --> src/governance/ai/conversation.rs:518:8
    |
517 | impl ContextManager {
    | ------------------- associated items in this implementation
518 |     fn new() -> Self {
    |        ^^^
...
524 |     pub fn get_context(&self, session_id: &str) -> Option<&ConversationContext> {
    |            ^^^^^^^^^^^
...
528 |     pub fn update_context(&mut self, session_id: String, context: ConversationContext) {
    |            ^^^^^^^^^^^^^^

error: struct `CrossDomainCorrelationEngine` is never constructed
  --> src/governance/ai/correlation.rs:10:12
   |
10 | pub struct CrossDomainCorrelationEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `PatternAnalyzer` is never constructed
  --> src/governance/ai/correlation.rs:85:12
   |
85 | pub struct PatternAnalyzer {
   |            ^^^^^^^^^^^^^^^

error: struct `CorrelationRule` is never constructed
  --> src/governance/ai/correlation.rs:92:12
   |
92 | pub struct CorrelationRule {
   |            ^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/ai/correlation.rs:102:18
    |
101 | impl CrossDomainCorrelationEngine {
    | --------------------------------- associated items in this implementation
102 |     pub async fn new(
    |                  ^^^
...
117 |     pub async fn analyze_cross_domain_patterns(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
159 |     async fn collect_cross_domain_events(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
247 |     async fn analyze_security_cost_correlation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
301 |     async fn analyze_compliance_policy_correlation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
335 |     async fn analyze_identity_access_correlation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
369 |     async fn analyze_cost_performance_correlation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
402 |     async fn analyze_network_security_correlation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
435 |     async fn analyze_resource_lifecycle_patterns(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
475 |     pub async fn monitor_correlations(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
486 |     pub async fn validate_correlation(
    |                  ^^^^^^^^^^^^^^^^^^^^

error: associated items `new` and `analyze_pattern` are never used
   --> src/governance/ai/correlation.rs:496:8
    |
495 | impl PatternAnalyzer {
    | -------------------- associated items in this implementation
496 |     fn new() -> Self {
    |        ^^^
...
519 |     pub fn analyze_pattern(&self, events: &[CrossDomainEvent]) -> Vec<CorrelationPattern> {
    |            ^^^^^^^^^^^^^^^

error: struct `PredictiveComplianceEngine` is never constructed
  --> src/governance/ai/prediction.rs:10:12
   |
10 | pub struct PredictiveComplianceEngine {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

error: struct `PredictionModel` is never constructed
  --> src/governance/ai/prediction.rs:81:12
   |
81 | pub struct PredictionModel {
   |            ^^^^^^^^^^^^^^^

error: enum `ModelType` is never used
  --> src/governance/ai/prediction.rs:89:10
   |
89 | pub enum ModelType {
   |          ^^^^^^^^^

error: struct `HistoricalDataStore` is never constructed
  --> src/governance/ai/prediction.rs:97:12
   |
97 | pub struct HistoricalDataStore {
   |            ^^^^^^^^^^^^^^^^^^^

error: struct `TrendAnalyzer` is never constructed
   --> src/governance/ai/prediction.rs:131:12
    |
131 | pub struct TrendAnalyzer {
    |            ^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/governance/ai/prediction.rs:138:18
    |
137 | impl PredictiveComplianceEngine {
    | ------------------------------- associated items in this implementation
138 |     pub async fn new(
    |                  ^^^
...
188 |     pub async fn predict_compliance_drift(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
235 |     async fn predict_compliance_degradation(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
295 |     async fn predict_resource_violations(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
352 |     async fn predict_policy_drift(
    |              ^^^^^^^^^^^^^^^^^^^^
...
395 |     async fn predict_cost_compliance_issues(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
438 |     async fn predict_security_compliance_gaps(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
486 |     pub async fn analyze_compliance_trends(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
...
525 |     pub async fn get_prediction_accuracy(&self) -> GovernanceResult<HashMap<String, f64>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
536 |     pub async fn retrain_models(&mut self) -> GovernanceResult<()> {
    |                  ^^^^^^^^^^^^^^

error: associated function `new` is never used
   --> src/governance/ai/prediction.rs:548:8
    |
547 | impl HistoricalDataStore {
    | ------------------------ associated function in this implementation
548 |     fn new() -> Self {
    |        ^^^

error: associated items `new` and `analyze_compliance_trend` are never used
   --> src/governance/ai/prediction.rs:574:8
    |
573 | impl TrendAnalyzer {
    | ------------------ associated items in this implementation
574 |     fn new() -> Self {
    |        ^^^
...
581 |     fn analyze_compliance_trend(&self, data: &[HistoricalCompliance]) -> ComplianceTrend {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

error: field `0` is never read
  --> src/observability.rs:13:26
   |
13 | pub struct CorrelationId(pub String);
   |            ------------- ^^^^^^^^^^
   |            |
   |            field in this struct
   |
   = help: consider removing this field
   = note: `CorrelationId` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

error: trait `PolicyEngine` is never used
   --> src/policy_engine.rs:138:11
    |
138 | pub trait PolicyEngine: Send + Sync {
    |           ^^^^^^^^^^^^

error: struct `DefaultPolicyEngine` is never constructed
   --> src/policy_engine.rs:181:12
    |
181 | pub struct DefaultPolicyEngine {
    |            ^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `evaluate_condition`, `get_field_value`, and `navigate_json_path` are never used
   --> src/policy_engine.rs:187:12
    |
186 | impl DefaultPolicyEngine {
    | ------------------------ associated items in this implementation
187 |     pub fn new(action_executor: Box<dyn ActionExecutor>) -> Self {
    |            ^^^
...
195 |     fn evaluate_condition(&self, condition: &Condition, resource: &Resource) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
266 |     fn get_field_value(&self, resource: &Resource, field: &str) -> Option<Value> {
    |        ^^^^^^^^^^^^^^^
...
297 |     fn navigate_json_path(&self, data: &HashMap<String, Value>, path: &[&str]) -> Option<Value> {
    |        ^^^^^^^^^^^^^^^^^^

error: trait `ActionExecutor` is never used
   --> src/policy_engine.rs:443:11
    |
443 | pub trait ActionExecutor: Send + Sync {
    |           ^^^^^^^^^^^^^^

error: struct `DefaultActionExecutor` is never constructed
   --> src/policy_engine.rs:453:12
    |
453 | pub struct DefaultActionExecutor;
    |            ^^^^^^^^^^^^^^^^^^^^^

error: struct `SecretGuard` is never constructed
 --> src/secret_guard.rs:8:12
  |
8 | pub struct SecretGuard {
  |            ^^^^^^^^^^^

error: multiple associated items are never used
   --> src/secret_guard.rs:135:12
    |
134 | impl SecretGuard {
    | ---------------- associated items in this implementation
135 |     pub fn new() -> Self {
    |            ^^^
...
143 |     pub fn with_custom_patterns(mut self, patterns: Vec<SecretPattern>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^
...
149 |     pub fn scan(&self, text: &str, context: &str) -> Vec<SecretViolation> {
    |            ^^^^
...
179 |     pub fn redact(&self, text: &str) -> String {
    |            ^^^^^^
...
198 |     pub fn redact_json(&self, json: &serde_json::Value) -> serde_json::Value {
    |            ^^^^^^^^^^^
...
223 |     fn is_secret_field(&self, field_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^
...
246 |     fn exceeds_entropy_threshold(&self, text: &str, threshold: f64) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
250 |     fn calculate_shannon_entropy(&self, text: &str) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
267 |     fn get_context_snippet(&self, text: &str, start: usize, end: usize) -> String {
    |        ^^^^^^^^^^^^^^^^^^^

error: struct `SecretRedactionMiddleware` is never constructed
   --> src/secret_guard.rs:282:12
    |
282 | pub struct SecretRedactionMiddleware {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `redact_headers`, and `redact_body` are never used
   --> src/secret_guard.rs:287:12
    |
286 | impl SecretRedactionMiddleware {
    | ------------------------------ associated items in this implementation
287 |     pub fn new() -> Self {
    |            ^^^
...
293 |     pub fn redact_headers(&self, headers: &mut axum::http::HeaderMap) {
    |            ^^^^^^^^^^^^^^
...
306 |     pub fn redact_body(&self, body: &str) -> String {
    |            ^^^^^^^^^^^

error: struct `StaticSecretAnalyzer` is never constructed
   --> src/secret_guard.rs:312:12
    |
312 | pub struct StaticSecretAnalyzer {
    |            ^^^^^^^^^^^^^^^^^^^^

error: associated items `new`, `scan_directory`, and `generate_report` are never used
   --> src/secret_guard.rs:318:12
    |
317 | impl StaticSecretAnalyzer {
    | ------------------------- associated items in this implementation
318 |     pub fn new() -> Self {
    |            ^^^
...
331 |     pub async fn scan_directory(&self, path: &std::path::Path) -> Vec<SecretViolation> {
    |                  ^^^^^^^^^^^^^^
...
362 |     pub fn generate_report(&self, violations: &[SecretViolation]) -> String {
    |            ^^^^^^^^^^^^^^^

error: fields `vault_url` and `rotation_check_interval` are never read
  --> src/secrets.rs:16:5
   |
13 | pub struct SecretsManager {
   |            -------------- fields in this struct
...
16 |     vault_url: String,
   |     ^^^^^^^^^
17 |     cache_ttl: Duration,
18 |     rotation_check_interval: Duration,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `SecretsManager` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

error: field `version` is never read
  --> src/secrets.rs:25:5
   |
22 | struct CachedSecret {
   |        ------------ field in this struct
...
25 |     version: Option<String>,
   |     ^^^^^^^
   |
   = note: `CachedSecret` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

error: methods `set_secret`, `delete_secret`, `list_secrets`, `rotate_secret`, and `get_all_app_secrets` are never used
   --> src/secrets.rs:125:18
    |
38  | impl SecretsManager {
    | ------------------- methods in this implementation
...
125 |     pub async fn set_secret(
    |                  ^^^^^^^^^^
...
145 |     pub async fn delete_secret(&self, name: &str) -> Result<(), Box<dyn std::error::Error>> {
    |                  ^^^^^^^^^^^^^
...
161 |     pub async fn list_secrets(&self) -> Result<Vec<SecretMetadata>, Box<dyn std::error::Error>> {
    |                  ^^^^^^^^^^^^
...
190 |     pub async fn rotate_secret(
    |                  ^^^^^^^^^^^^^
...
205 |     pub async fn get_all_app_secrets(&self) -> HashMap<String, String> {
    |                  ^^^^^^^^^^^^^^^^^^^

error: struct `SecretScanner` is never constructed
   --> src/secrets.rs:273:12
    |
273 | pub struct SecretScanner {
    |            ^^^^^^^^^^^^^

error: struct `SecretPattern` is never constructed
   --> src/secrets.rs:278:8
    |
278 | struct SecretPattern {
    |        ^^^^^^^^^^^^^

error: associated items `new`, `scan`, and `calculate_entropy` are never used
   --> src/secrets.rs:285:12
    |
284 | impl SecretScanner {
    | ------------------ associated items in this implementation
285 |     pub fn new() -> Self {
    |            ^^^
...
323 |     pub fn scan(&self, text: &str) -> Vec<SecretDetection> {
    |            ^^^^
...
349 |     fn calculate_entropy(s: &str) -> f64 {
    |        ^^^^^^^^^^^^^^^^^

error: struct `SecretDetection` is never constructed
   --> src/secrets.rs:368:12
    |
368 | pub struct SecretDetection {
    |            ^^^^^^^^^^^^^^^

error: enum `SecretSeverity` is never used
   --> src/secrets.rs:376:10
    |
376 | pub enum SecretSeverity {
    |          ^^^^^^^^^^^^^^

error: struct `PathScoringWeights` is never constructed
   --> src/security_graph/mod.rs:115:12
    |
115 | pub struct PathScoringWeights {
    |            ^^^^^^^^^^^^^^^^^^

error: struct `SecurityGraphEngine` is never constructed
   --> src/security_graph/mod.rs:134:12
    |
134 | pub struct SecurityGraphEngine {
    |            ^^^^^^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/security_graph/mod.rs:141:12
    |
140 | impl SecurityGraphEngine {
    | ------------------------ associated items in this implementation
141 |     pub fn new() -> Self {
    |            ^^^
...
150 |     pub async fn build_from_azure(
    |                  ^^^^^^^^^^^^^^^^
...
175 |     async fn add_identities(
    |              ^^^^^^^^^^^^^^
...
245 |     async fn add_roles_and_permissions(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
309 |     async fn add_resources(
    |              ^^^^^^^^^^^^^
...
396 |     async fn add_network_topology(
    |              ^^^^^^^^^^^^^^^^^^^^
...
506 |     async fn add_data_stores(
    |              ^^^^^^^^^^^^^^^
...
577 |     async fn build_relationships(
    |              ^^^^^^^^^^^^^^^^^^^
...
696 |     pub fn find_attack_paths(&self, target_sensitivity: &str) -> Vec<AttackPath> {
    |            ^^^^^^^^^^^^^^^^^
...
748 |     fn score_and_build_path(&self, node_indices: Vec<NodeIndex>) -> AttackPath {
    |        ^^^^^^^^^^^^^^^^^^^^
...
841 |     fn generate_mitigations(&self, _path: &[NodeIndex]) -> Vec<MitigationBundle> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
930 |     pub async fn apply_mitigation(
    |                  ^^^^^^^^^^^^^^^^
...
957 |     async fn apply_control(
    |              ^^^^^^^^^^^^^
...
972 |     fn calculate_residual_risk(&self, bundle: &MitigationBundle) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

error: enum `SecurityGraphError` is never used
   --> src/security_graph/mod.rs:988:10
    |
988 | pub enum SecurityGraphError {
    |          ^^^^^^^^^^^^^^^^^^

error: function `analyze_security_exposure` is never used
   --> src/security_graph/mod.rs:998:14
    |
998 | pub async fn analyze_security_exposure(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^

error: function `generate_prioritized_mitigations` is never used
    --> src/security_graph/mod.rs:1036:4
     |
1036 | fn generate_prioritized_mitigations(paths: &[AttackPath]) -> Vec<MitigationBundle> {
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: associated functions `get_resources`, `get_rbac_data`, and `get_cost_data` are never used
   --> src/simulated_data.rs:96:12
    |
9   | impl SimulatedDataProvider {
    | -------------------------- associated functions in this implementation
...
96  |     pub fn get_resources() -> Vec<Resource> {
    |            ^^^^^^^^^^^^^
...
153 |     pub fn get_rbac_data() -> RbacData {
    |            ^^^^^^^^^^^^^
...
194 |     pub fn get_cost_data() -> CostData {
    |            ^^^^^^^^^^^^^

error: associated items `new`, `update`, `is_exhausted`, and `consumption_percentage` are never used
   --> src/slo.rs:86:12
    |
85  | impl ErrorBudget {
    | ---------------- associated items in this implementation
86  |     pub fn new(slo_target: f64, window_days: u32) -> Self {
    |            ^^^
...
98  |     pub fn update(&mut self, error_rate: f64, time_elapsed: Duration) {
    |            ^^^^^^
...
119 |     pub fn is_exhausted(&self) -> bool {
    |            ^^^^^^^^^^^^
...
123 |     pub fn consumption_percentage(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^

error: methods `success_rate` and `error_rate` are never used
   --> src/slo.rs:158:12
    |
157 | impl SLOMeasurement {
    | ------------------- methods in this implementation
158 |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
166 |     pub fn error_rate(&self) -> f64 {
    |            ^^^^^^^^^^

error: fields `slos`, `measurements`, and `status_cache` are never read
   --> src/slo.rs:197:5
    |
196 | pub struct SLOManager {
    |            ---------- fields in this struct
197 |     slos: Arc<RwLock<HashMap<String, SLO>>>,
    |     ^^^^
198 |     measurements: Arc<RwLock<HashMap<String, Vec<SLOMeasurement>>>>,
    |     ^^^^^^^^^^^^
199 |     status_cache: Arc<RwLock<HashMap<String, SLOStatus>>>,
    |     ^^^^^^^^^^^^

error: multiple methods are never used
   --> src/slo.rs:211:18
    |
202 | impl SLOManager {
    | --------------- methods in this implementation
...
211 |     pub async fn create_slo(&self, slo: SLO) -> Result<String, String> {
    |                  ^^^^^^^^^^
...
223 |     pub async fn record_measurement(
    |                  ^^^^^^^^^^^^^^^^^^
...
247 |     async fn update_status(&self, slo_id: &str) -> Result<(), String> {
    |              ^^^^^^^^^^^^^
...
302 |     fn get_window_start(&self, window: &SLOWindow) -> DateTime<Utc> {
    |        ^^^^^^^^^^^^^^^^
...
373 |     fn calculate_sli(&self, sli: &SLI, measurements: &[SLOMeasurement]) -> f64 {
    |        ^^^^^^^^^^^^^
...
428 |     fn check_burn_rate(&self, budget: &ErrorBudget, window: &SLOWindow) -> Option<BurnRateAlert> {
    |        ^^^^^^^^^^^^^^^
...
475 |     async fn check_alerts(&self, slo_id: &str, status: &SLOStatus) {
    |              ^^^^^^^^^^^^
...
503 |     async fn send_alert(&self, slo: &SLO, alert: &SLOAlert, status: &SLOStatus) {
    |              ^^^^^^^^^^
...
520 |     pub async fn get_status(&self, slo_id: &str) -> Option<SLOStatus> {
    |                  ^^^^^^^^^^
...
525 |     pub async fn get_all_status(&self) -> Vec<SLOStatus> {
    |                  ^^^^^^^^^^^^^^
...
530 |     pub async fn should_block_release(&self, critical_slos: &[String]) -> bool {
    |                  ^^^^^^^^^^^^^^^^^^^^

error: method `severity_string` is never used
   --> src/slo.rs:554:8
    |
553 | impl SLOAlert {
    | ------------- method in this implementation
554 |     fn severity_string(&self) -> &str {
    |        ^^^^^^^^^^^^^^^

error: associated functions `from_token_claims` and `default` are never used
  --> src/tenant.rs:20:12
   |
19 | impl TenantContext {
   | ------------------ associated functions in this implementation
20 |     pub fn from_token_claims(claims: &crate::auth::Claims) -> Self {
   |            ^^^^^^^^^^^^^^^^^
...
32 |     pub fn default() -> Self {
   |            ^^^^^^^

error: struct `TenantExtension` is never constructed
  --> src/tenant.rs:44:12
   |
44 | pub struct TenantExtension(pub TenantContext);
   |            ^^^^^^^^^^^^^^^

error: function `tenant_middleware` is never used
  --> src/tenant.rs:47:14
   |
47 | pub async fn tenant_middleware(
   |              ^^^^^^^^^^^^^^^^^

error: function `get_tenant` is never used
  --> src/tenant.rs:96:8
   |
96 | pub fn get_tenant(request: &Request) -> Option<TenantContext> {
   |        ^^^^^^^^^^

error: struct `TenantAwareDb` is never constructed
   --> src/tenant.rs:104:12
    |
104 | pub struct TenantAwareDb {
    |            ^^^^^^^^^^^^^

error: associated items `new`, `set_tenant_context`, `query_policies`, and `query_resources` are never used
   --> src/tenant.rs:110:12
    |
109 | impl TenantAwareDb {
    | ------------------ associated items in this implementation
110 |     pub fn new(pool: sqlx::PgPool, tenant_id: String) -> Self {
    |            ^^^
...
114 |     pub async fn set_tenant_context(&self) -> Result<(), sqlx::Error> {
    |                  ^^^^^^^^^^^^^^^^^^
...
122 |     pub async fn query_policies(&self) -> Result<Vec<Policy>, sqlx::Error> {
    |                  ^^^^^^^^^^^^^^
...
139 |     pub async fn query_resources(&self) -> Result<Vec<Resource>, sqlx::Error> {
    |                  ^^^^^^^^^^^^^^^

error: associated items `from_claims`, `can_access_tenant`, and `can_access_resource` are never used
  --> src/tenant_isolation.rs:26:12
   |
24 | impl TenantContext {
   | ------------------ associated items in this implementation
25 |     /// Create a new tenant context from JWT claims
26 |     pub fn from_claims(claims: &serde_json::Value) -> Result<Self, String> {
   |            ^^^^^^^^^^^
...
61 |     pub fn can_access_tenant(&self, target_tenant_id: &Uuid) -> bool {
   |            ^^^^^^^^^^^^^^^^^
...
66 |     pub fn can_access_resource(&self, resource_tenant_id: &Uuid) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^

error: function `tenant_isolation_middleware` is never used
  --> src/tenant_isolation.rs:72:14
   |
72 | pub async fn tenant_isolation_middleware(
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: trait `TenantFilter` is never used
  --> src/tenant_isolation.rs:88:11
   |
88 | pub trait TenantFilter {
   |           ^^^^^^^^^^^^

error: associated items `new` and `belongs_to` are never used
   --> src/tenant_isolation.rs:109:12
    |
108 | impl<T> TenantResource<T> {
    | ------------------------- associated items in this implementation
109 |     pub fn new(tenant_id: Uuid, resource: T) -> Self {
    |            ^^^
...
117 |     pub fn belongs_to(&self, tenant: &TenantContext) -> bool {
    |            ^^^^^^^^^^

error: struct `TenantDatabase` is never constructed
   --> src/tenant_isolation.rs:123:12
    |
123 | pub struct TenantDatabase {
    |            ^^^^^^^^^^^^^^

error: multiple associated items are never used
   --> src/tenant_isolation.rs:128:12
    |
127 | impl TenantDatabase {
    | ------------------- associated items in this implementation
128 |     pub fn new(pool: Arc<PgPool>) -> Self {
    |            ^^^
...
133 |     pub async fn get_resources(
    |                  ^^^^^^^^^^^^^
...
169 |     pub async fn create_resource(
    |                  ^^^^^^^^^^^^^^^
...
198 |     pub async fn update_resource(
    |                  ^^^^^^^^^^^^^^^
...
239 |     pub async fn delete_resource(
    |                  ^^^^^^^^^^^^^^^
...
263 |     pub async fn get_policies(
    |                  ^^^^^^^^^^^^
...
294 |     pub async fn get_compliance(
    |                  ^^^^^^^^^^^^^^

error: function `audit_log` is never used
   --> src/tenant_isolation.rs:344:14
    |
344 | pub async fn audit_log(
    |              ^^^^^^^^^

error: this `if let` can be collapsed into the outer `if let`
   --> src/action_orchestrator.rs:473:17
    |
473 | /                 if let Some(row) = row {
474 | |                     let action_id: Option<uuid::Uuid> = row.try_get("action_id").ok();
475 | |                     let created_at: Option<chrono::DateTime<chrono::Utc>> = row.try_get("created_at").ok();
476 | |                     let expires_at: Option<chrono::DateTime<chrono::Utc>> = row.try_get("expires_at").ok();
...   |
487 | |                     }));
488 | |                 }
    | |_________________^
    |
help: the outer pattern can be modified to include the inner pattern
   --> src/action_orchestrator.rs:466:23
    |
466 |             if let Ok(row) = sqlx::query(
    |                       ^^^ replace this binding
...
473 |                 if let Some(row) = row {
    |                        ^^^^^^^^^ with this pattern
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match
    = note: `-D clippy::collapsible-match` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::collapsible_match)]`

error: redundant closure
   --> src/action_orchestrator.rs:483:61
    |
483 |                         action_id: action_id.unwrap_or_else(|| uuid::Uuid::nil()),
    |                                                             ^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `uuid::Uuid::nil`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
    = note: `-D clippy::redundant-closure` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::redundant_closure)]`

error: the borrowed expression implements the required traits
   --> src/action_orchestrator.rs:516:19
    |
516 |             .bind(&action.id)
    |                   ^^^^^^^^^^ help: change this to: `action.id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
    = note: `-D clippy::needless-borrows-for-generic-args` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::needless_borrows_for_generic_args)]`

error: using `clone` on type `ActionStatus` which implements the `Copy` trait
   --> src/action_orchestrator.rs:712:29
    |
712 |                 return Some(state.status.clone());
    |                             ^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `state.status`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `-D clippy::clone-on-copy` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::clone_on_copy)]`

error: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value
   --> src/action_orchestrator.rs:761:18
    |
761 |     fn to_string(&self) -> String {
    |                  ^^^^^
    |
    = help: consider choosing a less ambiguous name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention
    = note: `-D clippy::wrong-self-convention` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::wrong_self_convention)]`

error: implementation of inherent method `to_string(&self) -> String` for type `action_orchestrator::ActionType`
   --> src/action_orchestrator.rs:761:5
    |
761 | /     fn to_string(&self) -> String {
762 | |         format!("{:?}", self)
763 | |     }
    | |_____^
    |
    = help: implement trait `Display` for type `action_orchestrator::ActionType` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string
    = note: `-D clippy::inherent-to-string` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::inherent_to_string)]`

error: name `NLP` contains a capitalized acronym
  --> src/ai/model_registry.rs:28:5
   |
28 |     NLP,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Nlp`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms
   = note: `-D clippy::upper-case-acronyms` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::upper_case_acronyms)]`

Some errors have detailed explanations: E0433, E0560.
For more information about an error, try `rustc --explain E0433`.
error: could not compile `policycortex-core` (bin "policycortex-core" test) due to 85 previous errors
warning: build failed, waiting for other jobs to finish...
error: redundant pattern matching, consider using `is_err()`
   --> src/api/mod.rs:806:12
    |
806 |     if let Err(_) = tar.finish() {
    |     -------^^^^^^--------------- help: try: `if tar.finish().is_err()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching
    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::redundant_pattern_matching)]`

error: the borrowed expression implements the required traits
    --> src/api/mod.rs:1635:15
     |
1635 |         .bind(&id)
     |               ^^^ help: change this to: `id`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
    --> src/api/mod.rs:1641:15
     |
1641 |         .bind(&expires_at)
     |               ^^^^^^^^^^^ help: change this to: `expires_at`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
    --> src/api/mod.rs:1642:15
     |
1642 |         .bind(&expires_at)
     |               ^^^^^^^^^^^ help: change this to: `expires_at`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: using `clone` on type `ApprovalDecision` which implements the `Copy` trait
   --> src/approval_workflow.rs:212:23
    |
212 |             decision: decision.clone(),
    |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `decision`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

error: this function has too many arguments (8/7)
   --> src/approvals.rs:221:5
    |
221 | /     pub fn create_approval_request(
222 | |         &self,
223 | |         policy: &ApprovalPolicy,
224 | |         action_id: Uuid,
...   |
229 | |         impact_analysis: ImpactAnalysis,
230 | |     ) -> ApprovalRequest {
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
    = note: `-D clippy::too-many-arguments` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::too_many_arguments)]`

error: this loop never actually loops
   --> src/approvals.rs:284:9
    |
284 | /         for rule in &policy.sod_rules {
285 | |             // This would check against actual role assignments
286 | |             // For now, return true (compliant)
287 | |             return true;
288 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop
    = note: `#[deny(clippy::never_loop)]` on by default
help: if you need the first element of the iterator, try writing
    |
284 -         for rule in &policy.sod_rules {
284 +         if let Some(rule) = policy.sod_rules.iter().next() {
    |

error: using `clone` on type `ApprovalDecision` which implements the `Copy` trait
   --> src/approvals.rs:319:23
    |
319 |             decision: decision.clone(),
    |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `decision`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

error: using `clone` on type `ApprovalStatus` which implements the `Copy` trait
   --> src/approvals.rs:369:12
    |
369 |         Ok(request.status.clone())
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `request.status`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

error: this function has too many arguments (8/7)
  --> src/audit_chain.rs:87:5
   |
87 | /     pub fn add_entry(
88 | |         &mut self,
89 | |         tenant_id: String,
90 | |         event_type: EventType,
...  |
95 | |         details: HashMap<String, serde_json::Value>,
96 | |     ) -> AuditEntry {
   | |___________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

error: this function has too many arguments (8/7)
   --> src/audit_chain.rs:371:5
    |
371 | /     pub async fn add_entry_persistent(
372 | |         &mut self,
373 | |         tenant_id: String,
374 | |         event_type: EventType,
...   |
379 | |         details: HashMap<String, serde_json::Value>,
380 | |     ) -> Result<AuditEntry, sqlx::Error> {
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

error: the borrowed expression implements the required traits
   --> src/audit_chain.rs:395:19
    |
395 |             .bind(&entry.id)
    |                   ^^^^^^^^^ help: change this to: `entry.id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/audit_chain.rs:397:19
    |
397 |             .bind(&entry.timestamp)
    |                   ^^^^^^^^^^^^^^^^ help: change this to: `entry.timestamp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: this `if` statement can be collapsed
   --> src/auth.rs:171:9
    |
171 | /         if !is_production {
172 | |             if std::env::var("JWT_HS256_SECRET")
173 | |                 .ok()
174 | |                 .filter(|v| !v.is_empty())
...   |
181 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
    = note: `-D clippy::collapsible-if` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::collapsible_if)]`
help: collapse nested if block
    |
171 ~         if !is_production
172 ~             && std::env::var("JWT_HS256_SECRET")
173 |                 .ok()
...
179 |                 }
180 ~             }
    |

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:141:26
    |
141 |             .bearer_auth(&token.token.secret())
    |                          ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:170:30
    |
170 |                 .bearer_auth(&token.token.secret())
    |                              ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:243:26
    |
243 |             .bearer_auth(&token.token.secret())
    |                          ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:269:30
    |
269 |                 .bearer_auth(&token.token.secret())
    |                              ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:340:26
    |
340 |             .bearer_auth(&token.token.secret())
    |                          ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: accessing first element with `r.get(0)`
   --> src/azure_client.rs:353:39
    |
353 |                         .and_then(|r| r.get(0))
    |                                       ^^^^^^^^ help: try: `r.first()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first
    = note: `-D clippy::get-first` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::get_first)]`

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:401:26
    |
401 |             .bearer_auth(&token.token.secret())
    |                          ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/azure_client.rs:447:26
    |
447 |             .bearer_auth(&token.token.secret())
    |                          ^^^^^^^^^^^^^^^^^^^^^ help: change this to: `token.token.secret()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: this `map_or` can be simplified
   --> src/change_management.rs:415:16
    |
415 |               Ok(result["result"]
    |  ________________^
416 | |                 .as_array()
417 | |                 .map_or(false, |arr| !arr.is_empty()))
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
    = note: `-D clippy::unnecessary-map-or` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::unnecessary_map_or)]`
help: use is_some_and instead
    |
417 -                 .map_or(false, |arr| !arr.is_empty()))
417 +                 .is_some_and(|arr| !arr.is_empty()))
    |

error: this `if` statement can be collapsed
   --> src/change_management.rs:709:9
    |
709 | /         if self.is_in_freeze_window(&request).await? {
710 | |             if request.category != ChangeCategory::Emergency {
711 | |                 return Err("Change rejected: in freeze window".to_string());
712 | |             }
713 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
709 ~         if self.is_in_freeze_window(&request).await?
710 ~             && request.category != ChangeCategory::Emergency {
711 |                 return Err("Change rejected: in freeze window".to_string());
712 ~             }
    |

error: this `if` statement can be collapsed
   --> src/change_management.rs:733:13
    |
733 | /             if request.scheduled_start >= window.start && request.scheduled_start <= window.end {
734 | |                 if !window.allow_emergency || request.category != ChangeCategory::Emergency {
735 | |                     return Ok(true);
736 | |                 }
737 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
help: collapse nested if block
    |
733 ~             if request.scheduled_start >= window.start && request.scheduled_start <= window.end
734 ~                 && (!window.allow_emergency || request.category != ChangeCategory::Emergency) {
735 |                     return Ok(true);
736 ~                 }
    |

error: name `AWS` contains a capitalized acronym
  --> src/collectors/aws_collector.rs:44:5
   |
44 |     AWS,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Aws`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `GCP` contains a capitalized acronym
  --> src/collectors/aws_collector.rs:46:5
   |
46 |     GCP,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Gcp`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `IAM` contains a capitalized acronym
  --> src/collectors/aws_collector.rs:72:5
   |
72 |     IAM,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Iam`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: all variants have the same postfix: `Error`
   --> src/compliance/mod.rs:218:1
    |
218 | / pub enum ComplianceError {
219 | |     #[error("Test execution failed: {0}")]
220 | |     TestError(String),
221 | |     #[error("Artifact generation failed: {0}")]
...   |
226 | |     ValidationError(String),
227 | | }
    | |_^
    |
    = help: remove the postfixes and use full paths to the variants instead of glob imports
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names
    = note: `-D clippy::enum-variant-names` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::enum_variant_names)]`

error: using `Option.and_then(|x| Some(y))`, which is more succinctly expressed as `map(|x| y)`
   --> src/compliance/mod.rs:600:21
    |
600 | /                     regex::Regex::new(pattern)
601 | |                         .ok()
602 | |                         .and_then(|re| Some(re.is_match(config_str)))
    | |_____________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bind_instead_of_map
    = note: `-D clippy::bind-instead-of-map` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::bind_instead_of_map)]`
help: try
    |
600 ~                     regex::Regex::new(pattern)
601 +                         .ok().map(|re| re.is_match(config_str))
    |

error: this boolean expression can be simplified
   --> src/compliance/mod.rs:745:20
    |
745 |                 if !tags.get("compliance-baseline").is_some() {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `tags.get("compliance-baseline").is_none()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::nonminimal_bool)]`

error: this `map_or` can be simplified
   --> src/enforcement.rs:304:12
    |
304 |           if action
    |  ____________^
305 | |             .result
306 | |             .as_ref()
307 | |             .map_or(true, |r| !r.rollback_available)
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_none_or instead
    |
307 -             .map_or(true, |r| !r.rollback_available)
307 +             .is_none_or(|r| !r.rollback_available)
    |

error: this call to `clone` can be replaced with `std::slice::from_ref`
   --> src/enforcement.rs:331:57
    |
331 |                 action: self.determine_enforcement_type(&[violation.clone()]),
    |                                                         ^^^^^^^^^^^^^^^^^^^^ help: try: `std::slice::from_ref(violation)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cloned_ref_to_slice_refs
    = note: `-D clippy::cloned-ref-to-slice-refs` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::cloned_ref_to_slice_refs)]`

error: all variants have the same postfix: `Error`
   --> src/events/mod.rs:425:1
    |
425 | / pub enum EventError {
426 | |     #[error("Connection error: {0}")]
427 | |     ConnectionError(String),
428 | |     #[error("Stream error: {0}")]
...   |
437 | |     HandlerError(String),
438 | | }
    | |_^
    |
    = help: remove the postfixes and use full paths to the variants instead of glob imports
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names

error: the borrowed expression implements the required traits
   --> src/evidence_pipeline.rs:522:15
    |
522 |         .bind(&evidence.id)
    |               ^^^^^^^^^^^^ help: change this to: `evidence.id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/evidence_pipeline.rs:534:15
    |
534 |         .bind(&evidence.created_at)
    |               ^^^^^^^^^^^^^^^^^^^^ help: change this to: `evidence.created_at`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/evidence_pipeline.rs:535:15
    |
535 |         .bind(&evidence.expires_at)
    |               ^^^^^^^^^^^^^^^^^^^^ help: change this to: `evidence.expires_at`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: all variants have the same postfix: `Error`
   --> src/finops/mod.rs:130:1
    |
130 | / pub enum FinOpsError {
131 | |     #[error("Azure API error: {0}")]
132 | |     AzureError(String),
133 | |     #[error("Analysis error: {0}")]
...   |
136 | |     OptimizationError(String),
137 | | }
    | |_^
    |
    = help: remove the postfixes and use full paths to the variants instead of glob imports
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/finops/mod.rs:431:65
    |
431 |                         probable_cause: self.infer_cause(point, &window).await,
    |                                                                 ^^^^^^^ help: change this to: `window`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
    = note: `-D clippy::needless-borrow` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::needless_borrow)]`

error: use of `or_insert` to construct default value
   --> src/finops/mod.rs:827:18
    |
827 |                 .or_insert(Vec::new())
    |                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default
    = note: `-D clippy::unwrap-or-default` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::unwrap_or_default)]`

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/governance/access_control.rs:417:45
    |
417 |             if self.is_privilege_escalation(&assignment) {
    |                                             ^^^^^^^^^^^ help: change this to: `assignment`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/governance/access_control.rs:490:47
    |
490 |             if self.has_excessive_permissions(&assignment) {
    |                                               ^^^^^^^^^^^ help: change this to: `assignment`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

error: use of `or_insert_with` to construct default value
   --> src/governance/access_control.rs:958:14
    |
958 |             .or_insert_with(Vec::new)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_or_default

error: name `MSI` contains a capitalized acronym
   --> src/governance/blueprints.rs:206:5
    |
206 |     MSI,
    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Msi`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/governance/blueprints.rs:995:66
    |
995 |             let assessment = self.evaluate_assignment_compliance(&assignment).await?;
    |                                                                  ^^^^^^^^^^^ help: change this to: `assignment`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

error: name `ARIMA` contains a capitalized acronym
   --> src/governance/cost_management.rs:221:5
    |
221 |     ARIMA,
    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Arima`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: all variants have the same postfix: `Controllable`
   --> src/governance/cost_management.rs:306:1
    |
306 | / pub enum ControlLevel {
307 | |     FullyControllable,
308 | |     PartiallyControllable,
309 | |     NotControllable,
310 | | }
    | |_^
    |
    = help: remove the postfixes and use full paths to the variants instead of glob imports
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names

error: name `TCP` contains a capitalized acronym
   --> src/governance/network.rs:126:5
    |
126 |     TCP,
    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `UDP` contains a capitalized acronym
   --> src/governance/network.rs:127:5
    |
127 |     UDP,
    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `ICMP` contains a capitalized acronym
   --> src/governance/network.rs:128:5
    |
128 |     ICMP,
    |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `ESP` contains a capitalized acronym
   --> src/governance/network.rs:129:5
    |
129 |     ESP,
    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Esp`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/governance/optimization.rs:525:78
    |
525 |             recommendation.risk_level = self.cost_analyzer.assess_risk_level(&recommendation);
    |                                                                              ^^^^^^^^^^^^^^^ help: change this to: `recommendation`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

error: you seem to want to iterate on a map's values
   --> src/governance/optimization.rs:596:32
    |
596 |             for (_, policy) in &self.security_optimizer.security_policies {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map
    = note: `-D clippy::for-kv-map` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::for_kv_map)]`
help: use the corresponding method
    |
596 -             for (_, policy) in &self.security_optimizer.security_policies {
596 +             for policy in self.security_optimizer.security_policies.values() {
    |

error: calls to `push` immediately after creation
   --> src/governance/unified_api.rs:227:9
    |
227 | /         let mut insights = Vec::new();
228 | |
229 | |         // Predict compliance drift based on historical patterns
230 | |         insights.push(PredictiveInsight {
...   |
266 | |             time_horizon_days: 14,
267 | |         });
    | |___________^ help: consider using the `vec![]` macro: `let insights = vec![..];`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push
    = note: `-D clippy::vec-init-then-push` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::vec_init_then_push)]`

error: useless use of `format!`
   --> src/governance/ai/conversation.rs:280:29
    |
280 | ... = format!("Policy information is available through the governance dashboard. Use 'show me compliance status' for current policy compliance.");
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"Policy information is available through the governance dashboard. Use 'show me compliance status' for current policy compliance.".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format
    = note: `-D clippy::useless-format` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::useless_format)]`

error: calls to `push` immediately after creation
   --> src/governance/ai/correlation.rs:305:9
    |
305 | /         let mut patterns = Vec::new();
306 | |
307 | |         // Detect policy drift patterns
308 | |         patterns.push(CorrelationPattern {
...   |
329 | |             },
330 | |         });
    | |___________^ help: consider using the `vec![]` macro: `let patterns = vec![..];`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push

error: calls to `push` immediately after creation
   --> src/governance/ai/correlation.rs:339:9
    |
339 | /         let mut patterns = Vec::new();
340 | |
341 | |         // Detect privilege escalation patterns
342 | |         patterns.push(CorrelationPattern {
...   |
363 | |             },
364 | |         });
    | |___________^ help: consider using the `vec![]` macro: `let patterns = vec![..];`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push

error: calls to `push` immediately after creation
   --> src/governance/ai/correlation.rs:373:9
    |
373 | /         let mut patterns = Vec::new();
374 | |
375 | |         patterns.push(CorrelationPattern {
376 | |             pattern_id: uuid::Uuid::new_v4().to_string(),
...   |
396 | |             },
397 | |         });
    | |___________^ help: consider using the `vec![]` macro: `let patterns = vec![..];`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push

error: calls to `push` immediately after creation
   --> src/governance/ai/correlation.rs:406:9
    |
406 | /         let mut patterns = Vec::new();
407 | |
408 | |         patterns.push(CorrelationPattern {
409 | |             pattern_id: uuid::Uuid::new_v4().to_string(),
...   |
429 | |             },
430 | |         });
    | |___________^ help: consider using the `vec![]` macro: `let patterns = vec![..];`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#vec_init_then_push

error: you seem to want to iterate on a map's values
   --> src/governance/ai/prediction.rs:538:27
    |
538 |         for (_, model) in &mut self.prediction_models {
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#for_kv_map
help: use the corresponding method
    |
538 -         for (_, model) in &mut self.prediction_models {
538 +         for model in self.prediction_models.values_mut() {
    |

error: clamp-like pattern without using clamp function
   --> src/governance/ai/prediction.rs:618:26
    |
618 |         let confidence = (1.0 - (variance / 10.0)).max(0.1).min(1.0);
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `(1.0 - (variance / 10.0)).clamp(0.1, 1.0)`
    |
    = note: clamp will panic if max < min, min.is_nan(), or max.is_nan()
    = note: clamp returns NaN if the input is NaN
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp
    = note: `-D clippy::manual-clamp` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::manual_clamp)]`

error: using `contains()` instead of `iter().any()` is more efficient
   --> src/governance/mod.rs:269:8
    |
269 |     if statuses.iter().any(|s| *s == HealthStatus::Unhealthy) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `statuses.contains(&HealthStatus::Unhealthy)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_contains
    = note: `-D clippy::manual-contains` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::manual_contains)]`

error: using `contains()` instead of `iter().any()` is more efficient
   --> src/governance/mod.rs:271:15
    |
271 |     } else if statuses.iter().any(|s| *s == HealthStatus::Degraded) {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `statuses.contains(&HealthStatus::Degraded)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_contains

error: this `map_or` can be simplified
   --> src/policy_engine.rs:214:21
    |
214 |                     field_val.as_f64().map_or(false, |v| v > compare_val)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
214 -                     field_val.as_f64().map_or(false, |v| v > compare_val)
214 +                     field_val.as_f64().is_some_and(|v| v > compare_val)
    |

error: this `map_or` can be simplified
   --> src/policy_engine.rs:223:21
    |
223 |                     field_val.as_f64().map_or(false, |v| v < compare_val)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
223 -                     field_val.as_f64().map_or(false, |v| v < compare_val)
223 +                     field_val.as_f64().is_some_and(|v| v < compare_val)
    |

error: this `map_or` can be simplified
   --> src/policy_engine.rs:230:21
    |
230 |                     field_val.as_str().map_or(false, |s| s.contains(value))
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
230 -                     field_val.as_str().map_or(false, |s| s.contains(value))
230 +                     field_val.as_str().is_some_and(|s| s.contains(value))
    |

error: this `map_or` can be simplified
   --> src/policy_engine.rs:238:25
    |
238 | /                         regex::Regex::new(pattern)
239 | |                             .ok()
240 | |                             .map_or(false, |re| re.is_match(s))
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_map_or
help: use is_some_and instead
    |
240 -                             .map_or(false, |re| re.is_match(s))
240 +                             .is_some_and(|re| re.is_match(s))
    |

error: parameter is only used in recursion
   --> src/policy_engine.rs:297:28
    |
297 |     fn navigate_json_path(&self, data: &HashMap<String, Value>, path: &[&str]) -> Option<Value> {
    |                            ^^^^
    |
note: parameter used here
   --> src/policy_engine.rs:308:17
    |
308 |                 self.navigate_json_path(&nested, &path[1..])
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion
    = note: `-D clippy::only-used-in-recursion` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::only_used_in_recursion)]`

error: using `clone` on type `Severity` which implements the `Copy` trait
   --> src/secret_guard.rs:164:35
    |
164 |                         severity: pattern.severity.clone(),
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `pattern.severity`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

error: you are using an explicit closure for cloning elements
   --> src/security_graph/mod.rs:318:30
    |
318 |           let resource_items = resources
    |  ______________________________^
319 | |             .get("items")
320 | |             .and_then(|v| v.as_array())
321 | |             .map(|v| v.clone())
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone
    = note: `-D clippy::map-clone` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::map_clone)]`
help: consider calling the dedicated `cloned` method
    |
318 ~         let resource_items = resources
319 +             .get("items")
320 +             .and_then(|v| v.as_array()).cloned()
    |

error: you are using an explicit closure for cloning elements
   --> src/security_graph/mod.rs:406:32
    |
406 |           let public_endpoints = network_data
    |  ________________________________^
407 | |             .get("public_endpoints")
408 | |             .and_then(|v| v.as_array())
409 | |             .map(|v| v.clone())
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone
help: consider calling the dedicated `cloned` method
    |
406 ~         let public_endpoints = network_data
407 +             .get("public_endpoints")
408 +             .and_then(|v| v.as_array()).cloned()
    |

error: you are using an explicit closure for cloning elements
   --> src/security_graph/mod.rs:463:33
    |
463 |           let private_endpoints = network_data
    |  _________________________________^
464 | |             .get("private_endpoints")
465 | |             .and_then(|v| v.as_array())
466 | |             .map(|v| v.clone())
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone
help: consider calling the dedicated `cloned` method
    |
463 ~         let private_endpoints = network_data
464 +             .get("private_endpoints")
465 +             .and_then(|v| v.as_array()).cloned()
    |

error: all variants have the same postfix: `Error`
   --> src/security_graph/mod.rs:988:1
    |
988 | / pub enum SecurityGraphError {
989 | |     #[error("Azure API error: {0}")]
990 | |     AzureError(String),
991 | |     #[error("Graph construction error: {0}")]
...   |
994 | |     PathError(String),
995 | | }
    | |_^
    |
    = help: remove the postfixes and use full paths to the variants instead of glob imports
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names

error: name `SLO` contains a capitalized acronym
 --> src/slo.rs:9:12
  |
9 | pub struct SLO {
  |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Slo`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: name `SLI` contains a capitalized acronym
  --> src/slo.rs:42:12
   |
42 | pub struct SLI {
   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Sli`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

error: useless use of `format!`
  --> src/tenant.rs:83:25
   |
83 |             let query = format!("SELECT set_tenant_context($1)");
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `"SELECT set_tenant_context($1)".to_string()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:185:15
    |
185 |         .bind(&tenant.tenant_id)
    |               ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:189:15
    |
189 |         .bind(&tenant.user_id)
    |               ^^^^^^^^^^^^^^^ help: change this to: `tenant.user_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:214:19
    |
214 |             .bind(&tenant.user_id)
    |                   ^^^^^^^^^^^^^^^ help: change this to: `tenant.user_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:228:19
    |
228 |             .bind(&tenant.user_id)
    |                   ^^^^^^^^^^^^^^^ help: change this to: `tenant.user_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:230:19
    |
230 |             .bind(&tenant.tenant_id)
    |                   ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:254:23
    |
254 |                 .bind(&tenant.tenant_id)
    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:273:23
    |
273 |                 .bind(&tenant.tenant_id)
    |                       ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:321:19
    |
321 |             .bind(&tenant.tenant_id)
    |                   ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:359:11
    |
359 |     .bind(&tenant.tenant_id)
    |           ^^^^^^^^^^^^^^^^^ help: change this to: `tenant.tenant_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: the borrowed expression implements the required traits
   --> src/tenant_isolation.rs:360:11
    |
360 |     .bind(&tenant.user_id)
    |           ^^^^^^^^^^^^^^^ help: change this to: `tenant.user_id`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

error: structure field `strongType` should have a snake case name
   --> src/governance/blueprints.rs:153:9
    |
153 |     pub strongType: Option<String>,
    |         ^^^^^^^^^^ help: convert the identifier to snake case: `strong_type`
    |
    = note: `-D non-snake-case` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(non_snake_case)]`

error: could not compile `policycortex-core` (bin "policycortex-core") due to 486 previous errors
Error: Process completed with exit code 101.


