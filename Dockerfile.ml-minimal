# Minimal ML Service Docker Container - For Quick Testing
FROM python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    CPU_ONLY=true \
    ENABLE_GPU=false

# Install only essential system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libpq-dev \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create a minimal requirements file inline
RUN echo "fastapi==0.101.0" > requirements-minimal.txt && \
    echo "uvicorn[standard]==0.23.2" >> requirements-minimal.txt && \
    echo "websockets==11.0.3" >> requirements-minimal.txt && \
    echo "redis==4.6.0" >> requirements-minimal.txt && \
    echo "psycopg2-binary==2.9.7" >> requirements-minimal.txt && \
    echo "prometheus-client==0.17.1" >> requirements-minimal.txt && \
    echo "pydantic==2.1.1" >> requirements-minimal.txt && \
    echo "python-dotenv==1.0.0" >> requirements-minimal.txt && \
    echo "numpy==1.24.3" >> requirements-minimal.txt && \
    echo "scikit-learn==1.3.0" >> requirements-minimal.txt

# Install minimal Python dependencies
RUN pip3 install --no-cache-dir -r requirements-minimal.txt

# Copy only essential files
COPY backend/services/ml_models/__init_minimal__.py /app/ml_models/__init__.py
COPY backend/services/ml_models/health_server.py /app/ml_models/health_server.py
COPY backend/services/websocket_test.py /app/websocket_test.py

# Create necessary directories
RUN mkdir -p /app/models /app/data /app/logs /app/checkpoints

# Expose ports
EXPOSE 8080 8765 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command - start a simple health server for testing
CMD ["python3", "-m", "uvicorn", "ml_models.health_server:app", "--host", "0.0.0.0", "--port", "8080"]