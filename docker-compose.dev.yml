version: '3.9'

# Simplified development version - only databases and infrastructure
# Run backend and frontend locally for hot-reload development

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: policycortex-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: policycortex
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis/DragonflyDB
  redis:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: policycortex-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: ["dragonfly", "--logtostderr"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # EventStore for Event Sourcing
  eventstore:
    image: eventstore/eventstore:latest
    container_name: policycortex-eventstore-dev
    restart: unless-stopped
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "2113:2113"
      - "1113:1113"
    volumes:
      - eventstore_data_dev:/var/lib/eventstore-data

  # NATS for messaging
  nats:
    image: nats:2.10-alpine
    container_name: policycortex-nats-dev
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--js", "--sd", "/data", "-m", "8222"]
    volumes:
      - nats_data_dev:/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: policycortex-adminer-dev
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  eventstore_data_dev:
    driver: local
  nats_data_dev:
    driver: local