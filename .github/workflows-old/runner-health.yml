name: Runner Health Check

on:
  workflow_dispatch:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  health-check:
    name: Check Runner Health
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: System Information
        run: |
          echo "### System Information" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # OS Info
          echo "**Operating System:**" >> $GITHUB_STEP_SUMMARY
          if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            echo '```' >> $GITHUB_STEP_SUMMARY
            uname -a >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
          # Memory
          echo "**Memory:**" >> $GITHUB_STEP_SUMMARY
          if command -v free &> /dev/null; then
            echo '```' >> $GITHUB_STEP_SUMMARY
            free -h >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
          
          # Disk Space
          echo "**Disk Space:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          df -h | head -10 >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Docker Health
        continue-on-error: true
        run: |
          echo "### Docker Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if command -v docker &> /dev/null; then
            # Docker version
            DOCKER_VERSION=$(docker --version)
            echo "**Version:** $DOCKER_VERSION" >> $GITHUB_STEP_SUMMARY
            
            # Docker daemon status
            if docker info &> /dev/null; then
              echo "**Status:** ✅ Running" >> $GITHUB_STEP_SUMMARY
              
              # Docker stats
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Containers:**" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Size}}" | head -10 >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              
              # Clean up old containers/images
              echo "Cleaning up old Docker resources..."
              docker system prune -f --volumes --filter "until=24h" || true
            else
              echo "**Status:** ❌ Not running" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Action Required:** Start Docker daemon" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo 'sudo systemctl start docker' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "**Status:** ❌ Not installed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Action Required:** Run the runner setup workflow" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Azure CLI Health
        continue-on-error: true
        run: |
          echo "### Azure CLI Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if command -v az &> /dev/null; then
            AZ_VERSION=$(az --version | head -1)
            echo "**Version:** $AZ_VERSION" >> $GITHUB_STEP_SUMMARY
            
            # Check authentication
            if az account show &> /dev/null; then
              ACCOUNT=$(az account show --query name -o tsv)
              SUB_ID=$(az account show --query id -o tsv)
              echo "**Authenticated:** ✅" >> $GITHUB_STEP_SUMMARY
              echo "**Account:** $ACCOUNT" >> $GITHUB_STEP_SUMMARY
              echo "**Subscription:** $SUB_ID" >> $GITHUB_STEP_SUMMARY
            else
              echo "**Authenticated:** ❌" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Action Required:** Authenticate Azure CLI" >> $GITHUB_STEP_SUMMARY
              echo '```bash' >> $GITHUB_STEP_SUMMARY
              echo 'az login' >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "**Status:** ❌ Not installed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Network Connectivity
        continue-on-error: true
        run: |
          echo "### Network Connectivity" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Test GitHub
          if curl -s -o /dev/null -w "%{http_code}" https://api.github.com | grep -q "200"; then
            echo "- GitHub API: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- GitHub API: ❌" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Test Azure
          if curl -s -o /dev/null -w "%{http_code}" https://management.azure.com | grep -q "401"; then
            echo "- Azure API: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Azure API: ❌" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Test Docker Hub
          if curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com | grep -q "200"; then
            echo "- Docker Hub: ✅" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Docker Hub: ❌" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Runner Process
        continue-on-error: true
        run: |
          echo "### Runner Process" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check if runner service is active
          if pgrep -f "Runner.Listener" > /dev/null; then
            echo "**Status:** ✅ Running" >> $GITHUB_STEP_SUMMARY
            
            # Get process info
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Process Info:**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            ps aux | grep -E "Runner.Listener|Runner.Worker" | grep -v grep >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** ⚠️ May not be running as service" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Generate Report
        if: always()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Health Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Runner:** ${{ runner.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Job Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ This health check runs daily to ensure the self-hosted runner is functioning properly." >> $GITHUB_STEP_SUMMARY
