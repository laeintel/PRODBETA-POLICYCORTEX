name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

jobs:
  build-and-secure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Supply chain security (SBOM, CVE, SLSA)
        env:
          SECURITY_BASELINE_FILE: .github/security/vuln-baseline.json
          # File's critical_allowance wins; this provides a fallback for CI
          SECURITY_CRITICAL_ALLOWANCE: 5
        run: |
          chmod +x scripts/supply-chain-security.sh
          ./scripts/supply-chain-security.sh

      - name: Secret scanning with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true
        env:
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
        with:
          args: detect --no-banner --redact --exit-code 1

      - name: Frontend lint
        run: |
          cd frontend
          npm ci
          npm run lint --if-present

      - name: Python lint
        run: |
          pip install ruff
          ruff check backend || true

      - name: Report status
        run: echo "CI checks completed"
      
      - name: Trigger deployment if all checks pass
        if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'application.yml',
              ref: context.ref,
              inputs: {
                target_env: 'dev',
                force_deploy: 'false',
                run_tests: 'true'
              }
            })
            console.log('Triggered deployment workflow')
