name: Monorepo CI Entry

# COMPLETE A-Z PIPELINE - ALL STEPS RUN EVERY TIME
# This workflow ensures every component is built, tested, secured, and deployed
# regardless of which files changed. No conditional skipping for complete coverage.

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      full_run:
        description: 'Run entire pipeline (ignore path filters and include app pipeline)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  actions: write
  security-events: write
  id-token: write
  packages: write

concurrency:
  group: monorepo-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect changed areas
    runs-on: self-hosted
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      rust_core: ${{ steps.filter.outputs.rust_core }}
      graphql: ${{ steps.filter.outputs.graphql }}
      backend: ${{ steps.filter.outputs.backend }}
      infrastructure: ${{ steps.filter.outputs.infrastructure }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            frontend:
              - 'frontend/**'
            rust_core:
              - 'core/**'
              - 'crates/**'
            graphql:
              - 'graphql/**'
            backend:
              - 'backend/**'
            infrastructure:
              - 'infrastructure/**'

  frontend:
    name: Frontend CI
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/reusable-ci-frontend.yml
    secrets: inherit
    with:
      node-version: '20'
      working-directory: 'frontend'

  core:
    name: Core (Rust) CI
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/reusable-ci-core.yml
    secrets: inherit

  graphql:
    name: GraphQL gateway CI
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/reusable-ci-frontend.yml
    with:
      node-version: '20'
      working-directory: 'graphql'
    secrets: inherit

  backend:
    name: Backend Services CI
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/reusable-ci-frontend.yml
    with:
      node-version: '20'
      working-directory: 'backend'
    secrets: inherit

  security:
    name: Security & Secrets
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/reusable-security.yml
    permissions:
      contents: read
      security-events: write
    secrets: inherit

  supply_chain:
    name: Supply Chain Security
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/supply-chain.yml
    permissions:
      contents: read
      actions: write
      security-events: write
    secrets: inherit

  secret_scan:
    name: Secret Scan (Gitleaks)
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/secret-scan.yml
    permissions:
      contents: read
      security-events: write
    secrets: inherit

  infra:
    name: Azure Infrastructure
    needs: detect-changes
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/azure-infra.yml
    permissions:
      contents: read
      id-token: write
    with:
      environment: 'dev'
      apply: true
    secrets: inherit

  app_pipeline:
    name: Application CI/CD
    needs: [frontend, core, graphql, backend, security, supply_chain, secret_scan, infra]
    # ALWAYS RUN - Complete pipeline from A-Z
    if: always()
    uses: ./.github/workflows/application.yml
    permissions:
      contents: read
      actions: read
      packages: write
    with:
      target_env: 'dev'
      run_tests: true
      force_deploy: false
      full_run: true
    secrets: inherit

  deploy_tag:
    name: Deploy from Tag
    needs: [frontend, core, graphql, backend, security, supply_chain, secret_scan, infra, app_pipeline]
    # Only deploy for tags - but ensure all previous steps ran
    if: startsWith(github.ref, 'refs/tags/v')
    uses: ./.github/workflows/deploy.yml
    with:
      from_tag: ${{ github.ref_name }}
    secrets: inherit


