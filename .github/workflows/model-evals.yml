name: Model evaluations

on:
  # Make reusable and opt-in via dispatch only to avoid noise
  workflow_call:
    inputs:
      run_evals:
        description: 'Run model evals (compiles Rust core)'
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      run_evals:
        description: 'Run model evals (compiles Rust core)'
        required: false
        default: false
        type: boolean

jobs:
  evals:
    # Run only when explicitly requested via dispatch or workflow_call input
    if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.run_evals == 'true') || (github.event_name == 'workflow_call' && inputs.run_evals == true) }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run model registry tests
        run: |
          echo "Model evals disabled by default. Enable via workflow_dispatch input run_evals=true."
          exit 0
      - name: Gate on acceptance thresholds (example)
        run: |
          echo "Simulating threshold check..."
          # In a real setup, parse eval outputs and enforce min thresholds
