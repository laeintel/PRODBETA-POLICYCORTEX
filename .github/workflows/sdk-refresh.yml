name: Azure SDK and Policy Refresh

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  refresh-azure-policies:
    name: Refresh Azure Policies and Definitions
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install azure-mgmt-policyinsights azure-mgmt-resource azure-identity pandas
      
      - name: Fetch Azure Policy Definitions
        id: fetch_policies
        run: |
          python scripts/azure-policy-refresh.py
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet && ! ${{ github.event.inputs.force_update }}; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Azure policy definitions and SDK'
          title: '[Auto] Update Azure Policy Definitions'
          body: |
            ## Automated Azure Policy Update
            
            This PR updates the Azure policy definitions and compliance data.
            
            ### Changes:
            - Updated policy definitions from Azure
            - Refreshed compliance baselines
            - Updated SDK definitions
            
            ### Auto-generated
            This PR was automatically generated by the Azure SDK refresh workflow.
          branch: auto-update/azure-policies
          delete-branch: true
          labels: |
            automated
            azure
            policies

  refresh-compliance-baselines:
    name: Refresh Compliance Baselines
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Fetch Regulatory Compliance Data
        run: |
          # Create directories first
          mkdir -p data/compliance data/policies
          
          # Fetch Azure Security Center regulatory compliance
          az security regulatory-compliance-standard list --output json > data/compliance/standards.json || echo "[]" > data/compliance/standards.json
          
          # Fetch assessment definitions
          az security assessment-metadata list --output json > data/compliance/assessments.json || echo "[]" > data/compliance/assessments.json
          
          # Fetch Azure Policy initiatives
          az policy set-definition list --output json > data/policies/initiatives.json || echo "[]" > data/policies/initiatives.json
      
      - name: Process and Store Data
        run: |
          mkdir -p data/compliance data/policies
          
          # Process the data with timestamps
          echo "Last updated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > data/compliance/README.md
          echo "Last updated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > data/policies/README.md
      
      - name: Commit changes if any
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          if ! git diff --staged --quiet; then
            git commit -m "chore: update compliance baselines $(date -u +"%Y-%m-%d")"
            git push
          fi