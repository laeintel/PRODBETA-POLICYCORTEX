global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'policycortex-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alerts.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'

  # Node exporter for host metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'node-exporter'

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'cadvisor'

  # PolicyCortex Core API (Rust)
  - job_name: 'policycortex-core'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['core:8080', 'core:8085']
        labels:
          service: 'core-api'
          component: 'rust'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+):8080'
        replacement: '${1}-local'
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+):8085'
        replacement: '${1}-docker'

  # PolicyCortex Frontend (Next.js)
  - job_name: 'policycortex-frontend'
    metrics_path: '/api/metrics'
    static_configs:
      - targets: ['frontend:3000', 'frontend:3005']
        labels:
          service: 'frontend'
          component: 'nextjs'

  # Python API Gateway
  - job_name: 'policycortex-api-gateway'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['api-gateway:8000']
        labels:
          service: 'api-gateway'
          component: 'python'

  # AI Engine
  - job_name: 'policycortex-ai-engine'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['ai-engine:8001']
        labels:
          service: 'ai-engine'
          component: 'python-ai'

  # GraphQL Gateway
  - job_name: 'policycortex-graphql'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['graphql:4000', 'graphql:4001']
        labels:
          service: 'graphql-gateway'
          component: 'apollo'

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgresql'
          component: 'database'

  # Redis/DragonflyDB metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'dragonfly'
          component: 'cache'

  # EventStore metrics
  - job_name: 'eventstore'
    metrics_path: '/stats/prometheus'
    static_configs:
      - targets: ['eventstore:2113']
        labels:
          service: 'eventstore'
          component: 'event-sourcing'

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888']
        labels:
          service: 'otel-collector'
          component: 'observability'

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
        labels:
          service: 'jaeger'
          component: 'tracing'

  # Service discovery for Kubernetes (when deployed)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name