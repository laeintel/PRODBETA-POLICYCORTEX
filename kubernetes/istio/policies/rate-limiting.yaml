apiVersion: v1
kind: ConfigMap
metadata:
  name: ratelimit-config
  namespace: policycortex
data:
  config.yaml: |
    domain: policycortex-ratelimit
    descriptors:
      # Global rate limit
      - key: remote_address
        rate_limit:
          unit: minute
          requests_per_unit: 1000
      
      # API endpoint specific limits
      - key: header_match
        value: "api-conversation"
        rate_limit:
          unit: minute
          requests_per_unit: 100
      
      - key: header_match
        value: "api-predictions"
        rate_limit:
          unit: minute
          requests_per_unit: 200
      
      # User-based rate limiting
      - key: user_id
        rate_limit:
          unit: hour
          requests_per_unit: 10000
      
      # Tenant-based rate limiting
      - key: tenant_id
        descriptors:
          - key: basic
            rate_limit:
              unit: hour
              requests_per_unit: 5000
          - key: premium
            rate_limit:
              unit: hour
              requests_per_unit: 50000
          - key: enterprise
            rate_limit:
              unit: hour
              requests_per_unit: 500000
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: ratelimit-filter
  namespace: policycortex
spec:
  workloadSelector:
    labels:
      app: core-api
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              name: "envoy.filters.http.router"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.ratelimit
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
          domain: policycortex-ratelimit
          failure_mode_deny: false
          timeout: 0.05s
          rate_limit_service:
            grpc_service:
              envoy_grpc:
                cluster_name: rate_limit_service
              timeout: 0.05s
            transport_api_version: V3
          request_type: both
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: ratelimit-actions
  namespace: policycortex
spec:
  workloadSelector:
    labels:
      app: core-api
  configPatches:
  - applyTo: VIRTUAL_HOST
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: MERGE
      value:
        rate_limits:
        # Global rate limit
        - actions:
          - remote_address: {}
        
        # API-specific rate limits
        - actions:
          - header_value_match:
              headers:
              - name: ":path"
                prefix_match: "/api/v1/conversation"
              descriptor_value: "api-conversation"
        
        - actions:
          - header_value_match:
              headers:
              - name: ":path"
                prefix_match: "/api/v1/predictions"
              descriptor_value: "api-predictions"
        
        # User-based rate limiting
        - actions:
          - request_headers:
              header_name: "x-user-id"
              descriptor_key: "user_id"
        
        # Tenant-based rate limiting
        - actions:
          - request_headers:
              header_name: "x-tenant-id"
              descriptor_key: "tenant_id"
          - request_headers:
              header_name: "x-tenant-tier"
              descriptor_key: "tier"
---
# Local rate limiting as fallback
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: local-ratelimit
  namespace: policycortex
spec:
  workloadSelector:
    labels:
      app: frontend
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: http_local_rate_limiter
            token_bucket:
              max_tokens: 10000
              tokens_per_fill: 1000
              fill_interval: 1s
            filter_enabled:
              runtime_key: local_rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: local_rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED