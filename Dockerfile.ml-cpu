# ML Service Docker Container - CPU Only Version
# For testing on Windows without GPU support
# Patent #4: Predictive Policy Compliance Engine

FROM python:3.10-slim-bullseye

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    CPU_ONLY=true \
    ENABLE_GPU=false \
    MLFLOW_TRACKING_URI=sqlite:///app/mlflow.db \
    OMP_NUM_THREADS=4 \
    MKL_NUM_THREADS=4

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    ca-certificates \
    libssl-dev \
    libpq-dev \
    libgomp1 \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy Python requirements
COPY requirements-ml-cpu.txt .

# Install Python dependencies (CPU versions)
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
    pip3 install --no-cache-dir -r requirements-ml-cpu.txt

# Copy ML models and services
COPY backend/services/ml_models/ /app/ml_models/
COPY backend/migrations/create_ml_tables.sql /app/migrations/
COPY backend/services/websocket_server.py /app/

# Create necessary directories
RUN mkdir -p /app/models /app/data /app/logs /app/checkpoints

# Create non-root user for security
RUN useradd -m -u 1000 mluser && \
    chown -R mluser:mluser /app

USER mluser

# Expose ports
EXPOSE 8080 8765 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=5 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command - start prediction server
CMD ["python3", "-m", "ml_models.prediction_serving"]