apiVersion: v1
kind: Namespace
metadata:
  name: pcx-tenant-template
  labels:
    istio-injection: enabled
    tenant-id: TENANT_ID
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tenant-isolation
  namespace: pcx-tenant-template
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from same namespace
  - from:
    - podSelector: {}
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-ingress
    ports:
    - protocol: TCP
      port: 8080
  # Allow Prometheus scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  egress:
  # Allow DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # Allow traffic within namespace
  - to:
    - podSelector: {}
  # Allow access to shared services
  - to:
    - namespaceSelector:
        matchLabels:
          name: shared-services
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 7687  # Neo4j
  # Allow external HTTPS
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: tenant-quota
  namespace: pcx-tenant-template
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "5"
    services.loadbalancers: "0"
    services.nodeports: "0"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: tenant-limits
  namespace: pcx-tenant-template
spec:
  limits:
  - max:
      cpu: "2"
      memory: 4Gi
    min:
      cpu: 100m
      memory: 128Mi
    default:
      cpu: 500m
      memory: 512Mi
    defaultRequest:
      cpu: 250m
      memory: 256Mi
    type: Container
  - max:
      storage: 10Gi
    type: PersistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tenant-role
  namespace: pcx-tenant-template
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tenant-rolebinding
  namespace: pcx-tenant-template
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tenant-role
subjects:
- kind: ServiceAccount
  name: tenant-sa
  namespace: pcx-tenant-template
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tenant-sa
  namespace: pcx-tenant-template
  annotations:
    azure.workload.identity/client-id: AZURE_CLIENT_ID
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tenant-pdb
  namespace: pcx-tenant-template
spec:
  minAvailable: 1
  selector:
    matchLabels:
      tenant-id: TENANT_ID
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tenant-config
  namespace: pcx-tenant-template
data:
  tenant.yaml: |
    tenant:
      id: TENANT_ID
      name: TENANT_NAME
      tier: TENANT_TIER
      features:
        - core
        - compliance
        - cost-optimization
      limits:
        api_calls_per_minute: 100
        storage_gb: 10
        compute_cores: 4
      azure:
        subscription_id: AZURE_SUBSCRIPTION_ID
        resource_group: AZURE_RESOURCE_GROUP
        key_vault: kv-TENANT_ID