# Prometheus Alert Rules for ML Monitoring
# Patent #4 Requirements and Operational Alerts

groups:
  - name: ml_patent_requirements
    interval: 30s
    rules:
      # Patent Requirement: Accuracy must be >= 99.2%
      - alert: MLAccuracyBelowPatentRequirement
        expr: ml_model_accuracy < 0.992
        for: 5m
        labels:
          severity: critical
          component: ml
          patent: "4"
        annotations:
          summary: "Model accuracy {{$value}} below patent requirement (99.2%)"
          description: "Model {{$labels.model_id}} accuracy is {{$value}}, which violates Patent #4 requirement of 99.2% minimum accuracy"
          action: "Immediate model retraining or rollback required"

      # Patent Requirement: False Positive Rate must be < 2%
      - alert: MLFalsePositiveRateExceedsPatentRequirement
        expr: ml_model_false_positive_rate > 0.02
        for: 5m
        labels:
          severity: critical
          component: ml
          patent: "4"
        annotations:
          summary: "Model FPR {{$value}} exceeds patent requirement (2%)"
          description: "Model {{$labels.model_id}} false positive rate is {{$value}}, which violates Patent #4 requirement of <2% FPR"
          action: "Model tuning required to reduce false positives"

      # Patent Requirement: Inference latency must be < 100ms
      - alert: MLInferenceLatencyExceedsPatentRequirement
        expr: histogram_quantile(0.95, rate(ml_inference_duration_seconds_bucket[5m])) > 0.1
        for: 5m
        labels:
          severity: critical
          component: ml
          patent: "4"
        annotations:
          summary: "P95 inference latency exceeds 100ms patent requirement"
          description: "Model {{$labels.model_id}} P95 latency is {{$value}}s, which violates Patent #4 requirement of <100ms"
          action: "Optimize model or scale infrastructure"

  - name: ml_drift_detection
    interval: 1m
    rules:
      # Data Drift Alert
      - alert: MLDataDriftDetected
        expr: ml_drift_score{drift_type="data"} > 3
        for: 10m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "Data drift detected for model {{$labels.model_id}}"
          description: "Drift score is {{$value}}, indicating significant distribution shift"
          action: "Review data quality and consider model retraining"

      # Concept Drift Alert
      - alert: MLConceptDriftDetected
        expr: ml_drift_score{drift_type="concept"} > 2.5
        for: 15m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "Concept drift detected for model {{$labels.model_id}}"
          description: "Concept drift score is {{$value}}, model may be learning outdated patterns"
          action: "Evaluate model performance and retrain with recent data"

      # Critical Drift Alert
      - alert: MLCriticalDriftDetected
        expr: ml_drift_score > 5
        for: 5m
        labels:
          severity: critical
          component: ml
        annotations:
          summary: "Critical drift detected - immediate action required"
          description: "Drift score {{$value}} indicates severe model degradation"
          action: "Initiate automatic rollback or emergency retraining"

  - name: ml_performance
    interval: 30s
    rules:
      # High Error Rate
      - alert: MLHighPredictionErrorRate
        expr: rate(ml_prediction_errors_total[5m]) / rate(ml_predictions_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "High prediction error rate {{$value}} for model {{$labels.model_id}}"
          description: "Error rate exceeds 5% threshold"
          action: "Investigate error patterns and model health"

      # Low Confidence Scores
      - alert: MLLowConfidenceScores
        expr: histogram_quantile(0.5, rate(ml_confidence_score_bucket[5m])) < 0.7
        for: 10m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "Median confidence score below 70%"
          description: "Model {{$labels.model_id}} showing low confidence in predictions"
          action: "Review model calibration and feature quality"

      # Model Performance Degradation
      - alert: MLPerformanceDegradation
        expr: |
          (
            ml_model_accuracy - ml_model_accuracy offset 1h
          ) < -0.05
        for: 15m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "Model performance degraded by {{$value}} in last hour"
          description: "Significant accuracy drop detected for model {{$labels.model_id}}"
          action: "Investigate recent changes and consider rollback"

  - name: ml_infrastructure
    interval: 30s
    rules:
      # GPU Utilization
      - alert: MLGPUHighUtilization
        expr: ml_gpu_utilization_percent > 90
        for: 10m
        labels:
          severity: warning
          component: ml
          resource: gpu
        annotations:
          summary: "GPU {{$labels.gpu_id}} utilization at {{$value}}%"
          description: "High GPU utilization may impact inference latency"
          action: "Consider scaling GPU resources"

      # GPU Memory
      - alert: MLGPUMemoryExhausted
        expr: ml_gpu_memory_used_mb / ml_gpu_memory_total_mb > 0.95
        for: 5m
        labels:
          severity: critical
          component: ml
          resource: gpu
        annotations:
          summary: "GPU {{$labels.gpu_id}} memory nearly exhausted"
          description: "Only {{$value}}% memory remaining"
          action: "Reduce batch size or add GPU resources"

      # Model Memory Usage
      - alert: MLModelHighMemoryUsage
        expr: ml_model_memory_usage_mb > 8192
        for: 10m
        labels:
          severity: warning
          component: ml
        annotations:
          summary: "Model {{$labels.model_id}} using {{$value}}MB memory"
          description: "High model memory usage may impact performance"
          action: "Consider model optimization or pruning"

  - name: ml_websocket
    interval: 30s
    rules:
      # WebSocket Connection Spike
      - alert: MLWebSocketConnectionSpike
        expr: rate(ml_websocket_connections_active[5m]) > 100
        for: 5m
        labels:
          severity: warning
          component: ml
          service: websocket
        annotations:
          summary: "WebSocket connection spike detected"
          description: "{{$value}} new connections per second"
          action: "Scale WebSocket servers if needed"

      # WebSocket Message Queue Backup
      - alert: MLWebSocketMessageQueueHigh
        expr: ml_websocket_message_queue_size > 10000
        for: 5m
        labels:
          severity: warning
          component: ml
          service: websocket
        annotations:
          summary: "WebSocket message queue backing up"
          description: "{{$value}} messages in queue"
          action: "Investigate processing bottleneck"

  - name: ml_training
    interval: 1m
    rules:
      # Long Running Training Job
      - alert: MLTrainingJobLongRunning
        expr: ml_training_duration_seconds > 14400
        for: 1m
        labels:
          severity: info
          component: ml
          process: training
        annotations:
          summary: "Training job running for over 4 hours"
          description: "Model {{$labels.model_type}} training duration: {{$value}}s"
          action: "Monitor for completion or potential issues"

      # Training Loss Not Decreasing
      - alert: MLTrainingLossStagnant
        expr: |
          (
            ml_training_loss - ml_training_loss offset 30m
          ) > -0.001
        for: 30m
        labels:
          severity: warning
          component: ml
          process: training
        annotations:
          summary: "Training loss not decreasing"
          description: "Model {{$labels.model_id}} loss stagnant at {{$value}}"
          action: "Check learning rate and training configuration"

  - name: ml_business_metrics
    interval: 1m
    rules:
      # High Violation Rate
      - alert: MLHighViolationRate
        expr: rate(ml_violations_predicted_total[1h]) > 100
        for: 15m
        labels:
          severity: warning
          component: ml
          business: compliance
        annotations:
          summary: "High violation prediction rate"
          description: "{{$value}} violations per hour for tenant {{$labels.tenant_id}}"
          action: "Alert compliance team for investigation"

      # Low Remediation Success
      - alert: MLLowRemediationSuccess
        expr: ml_remediation_success_rate < 0.8
        for: 30m
        labels:
          severity: warning
          component: ml
          business: remediation
        annotations:
          summary: "Remediation success rate below 80%"
          description: "Only {{$value}}% successful remediations for tenant {{$labels.tenant_id}}"
          action: "Review remediation strategies and policies"

      # Compliance Score Drop
      - alert: MLComplianceScoreDrop
        expr: |
          (
            ml_compliance_score - ml_compliance_score offset 1h
          ) < -10
        for: 15m
        labels:
          severity: warning
          component: ml
          business: compliance
        annotations:
          summary: "Compliance score dropped by {{$value}} points"
          description: "Tenant {{$labels.tenant_id}} compliance deteriorating"
          action: "Investigate compliance issues and notify stakeholders"