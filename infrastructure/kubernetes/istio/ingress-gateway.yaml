---
# Istio Gateway Configuration for PolicyCortex
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: policycortex-gateway
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/security-level: high
spec:
  selector:
    istio: ingressgateway
  servers:
  # HTTPS - Production Traffic
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: policycortex-tls-cert
    hosts:
    - "policycortex.aeolitech.com"
    - "app.policycortex.aeolitech.com"
    - "api.policycortex.aeolitech.com"
    - "graphql.policycortex.aeolitech.com"
  # HTTP - Redirect to HTTPS
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "policycortex.aeolitech.com"
    - "app.policycortex.aeolitech.com"
    - "api.policycortex.aeolitech.com"
    - "graphql.policycortex.aeolitech.com"
    tls:
      httpsRedirect: true
---
# Virtual Service for Frontend Application
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: policycortex-frontend-vs
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: frontend
spec:
  hosts:
  - "app.policycortex.aeolitech.com"
  - "policycortex.aeolitech.com"
  gateways:
  - policycortex-gateway
  http:
  # Health check endpoint
  - match:
    - uri:
        exact: /health
    route:
    - destination:
        host: policycortex-frontend.policycortex.svc.cluster.local
        port:
          number: 3000
    timeout: 5s
    retries:
      attempts: 3
      perTryTimeout: 2s
  # API routes - redirect to core service
  - match:
    - uri:
        prefix: /api/
    redirect:
      uri: /
      authority: api.policycortex.aeolitech.com
  # GraphQL routes - redirect to GraphQL service
  - match:
    - uri:
        prefix: /graphql
    redirect:
      uri: /graphql
      authority: graphql.policycortex.aeolitech.com
  # Static assets with caching
  - match:
    - uri:
        prefix: /_next/static/
    - uri:
        prefix: /static/
    - uri:
        prefix: /favicon.ico
    route:
    - destination:
        host: policycortex-frontend.policycortex.svc.cluster.local
        port:
          number: 3000
    headers:
      response:
        set:
          Cache-Control: "public, max-age=31536000, immutable"
    timeout: 30s
  # Main application routes
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: policycortex-frontend.policycortex.svc.cluster.local
        port:
          number: 3000
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
    headers:
      request:
        set:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"
      response:
        set:
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"
          X-Content-Type-Options: "nosniff"
          X-Frame-Options: "DENY"
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: "strict-origin-when-cross-origin"
---
# Virtual Service for Core API
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: policycortex-core-api-vs
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: core-api
spec:
  hosts:
  - "api.policycortex.aeolitech.com"
  gateways:
  - policycortex-gateway
  http:
  # Health check endpoint
  - match:
    - uri:
        exact: /health
    route:
    - destination:
        host: policycortex-core.policycortex.svc.cluster.local
        port:
          number: 8080
    timeout: 5s
    retries:
      attempts: 3
      perTryTimeout: 2s
  # Patent Technology 1: Cross-Domain Governance Correlation
  - match:
    - uri:
        prefix: /api/v1/correlations
    - uri:
        prefix: /api/v1/metrics
    route:
    - destination:
        host: policycortex-core.policycortex.svc.cluster.local
        port:
          number: 8080
    timeout: 60s
    retries:
      attempts: 2
      perTryTimeout: 30s
    headers:
      request:
        set:
          X-Patent-Feature: "cross-domain-correlation"
  # Patent Technology 2: Conversational Governance Intelligence
  - match:
    - uri:
        prefix: /api/v1/conversation
    route:
    - destination:
        host: policycortex-core.policycortex.svc.cluster.local
        port:
          number: 8080
    timeout: 120s
    retries:
      attempts: 1
      perTryTimeout: 60s
    headers:
      request:
        set:
          X-Patent-Feature: "conversational-intelligence"
  # Patent Technology 4: Predictive Policy Compliance
  - match:
    - uri:
        prefix: /api/v1/predictions
    route:
    - destination:
        host: policycortex-core.policycortex.svc.cluster.local
        port:
          number: 8080
    timeout: 90s
    retries:
      attempts: 2
      perTryTimeout: 45s
    headers:
      request:
        set:
          X-Patent-Feature: "predictive-compliance"
  # General API routes
  - match:
    - uri:
        prefix: /api/v1/
    route:
    - destination:
        host: policycortex-core.policycortex.svc.cluster.local
        port:
          number: 8080
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
    headers:
      request:
        set:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"
      response:
        set:
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"
          X-Content-Type-Options: "nosniff"
          Access-Control-Allow-Origin: "https://app.policycortex.aeolitech.com"
          Access-Control-Allow-Methods: "GET, POST, PUT, DELETE, OPTIONS"
          Access-Control-Allow-Headers: "Authorization, Content-Type, X-Requested-With"
---
# Virtual Service for GraphQL Gateway
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: policycortex-graphql-vs
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: graphql
spec:
  hosts:
  - "graphql.policycortex.aeolitech.com"
  gateways:
  - policycortex-gateway
  http:
  # GraphQL Playground (development only)
  - match:
    - uri:
        exact: /playground
    route:
    - destination:
        host: policycortex-graphql.policycortex.svc.cluster.local
        port:
          number: 4000
    timeout: 10s
    headers:
      request:
        set:
          X-Environment: "development"
  # GraphQL endpoint
  - match:
    - uri:
        exact: /graphql
    - uri:
        prefix: /graphql
    route:
    - destination:
        host: policycortex-graphql.policycortex.svc.cluster.local
        port:
          number: 4000
    timeout: 60s
    retries:
      attempts: 2
      perTryTimeout: 30s
    headers:
      request:
        set:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"
      response:
        set:
          Strict-Transport-Security: "max-age=31536000; includeSubDomains"
          X-Content-Type-Options: "nosniff"
          Access-Control-Allow-Origin: "https://app.policycortex.aeolitech.com"
          Access-Control-Allow-Methods: "GET, POST, OPTIONS"
          Access-Control-Allow-Headers: "Authorization, Content-Type, X-Requested-With"
---
# Destination Rule for Core Service with Circuit Breaker
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: policycortex-core-dr
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: core
spec:
  host: policycortex-core.policycortex.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        keepAlive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 2
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 30
    circuitBreaker:
      consecutiveGatewayErrors: 5
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
    loadBalancer:
      simple: LEAST_CONN
  portLevelSettings:
  - port:
      number: 8080
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 1
---
# Destination Rule for Frontend Service
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: policycortex-frontend-dr
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: frontend
spec:
  host: policycortex-frontend.policycortex.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 200
        connectTimeout: 10s
      http:
        http1MaxPendingRequests: 200
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
    loadBalancer:
      simple: ROUND_ROBIN
---
# Destination Rule for GraphQL Service
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: policycortex-graphql-dr
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: policycortex
    policycortex.aeolitech.com/component: graphql
spec:
  host: policycortex-graphql.policycortex.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 20s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 5
        maxRetries: 2
    loadBalancer:
      simple: LEAST_CONN
---
# Service Entry for Azure Management API
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: azure-management-api
  namespace: istio-ingress
  labels:
    app.kubernetes.io/name: service-entry
    app.kubernetes.io/component: egress
    app.kubernetes.io/part-of: policycortex
spec:
  hosts:
  - management.azure.com
  - graph.microsoft.com
  - login.microsoftonline.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
# Virtual Service for Azure API Egress
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: azure-api-egress-vs
  namespace: istio-egress
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: egress
    app.kubernetes.io/part-of: policycortex
spec:
  hosts:
  - management.azure.com
  - graph.microsoft.com
  - login.microsoftonline.com
  gateways:
  - mesh
  http:
  - match:
    - headers:
        ":authority":
          regex: ".*\\.azure\\.com|.*\\.microsoft\\.com"
    route:
    - destination:
        host: istio-egressgateway.istio-egress.svc.cluster.local
        port:
          number: 443
    timeout: 60s
    retries:
      attempts: 3
      perTryTimeout: 20s