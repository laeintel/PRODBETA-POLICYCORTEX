apiVersion: apps/v1
kind: Deployment
metadata:
  name: policycortex-frontend
  namespace: policycortex-dev
  labels:
    app: policycortex-frontend
    tier: frontend
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: policycortex-frontend
  template:
    metadata:
      labels:
        app: policycortex-frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: {{REGISTRY}}/policycortex-frontend:{{IMAGE_TAG}}
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_GRAPHQL_ENDPOINT
          value: "http://policycortex-graphql/graphql"
        - name: NEXT_PUBLIC_API_URL
          value: "http://policycortex-core"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: policycortex-frontend
  namespace: policycortex-dev
  labels:
    app: policycortex-frontend
spec:
  selector:
    app: policycortex-frontend
  ports:
  - port: 80
    targetPort: 3000
  type: LoadBalancer