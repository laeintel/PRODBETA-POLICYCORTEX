apiVersion: apps/v1
kind: Deployment
metadata:
  name: policycortex-core
  namespace: policycortex-dev
  labels:
    app: policycortex-core
    tier: backend
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: policycortex-core
  template:
    metadata:
      labels:
        app: policycortex-core
        tier: backend
    spec:
      containers:
      - name: core
        image: {{REGISTRY}}/policycortex-core:{{IMAGE_TAG}}
        ports:
        - containerPort: 8080
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: policycortex-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: policycortex-secrets
              key: redis-url
        - name: EVENT_STORE_URL
          valueFrom:
            secretKeyRef:
              name: policycortex-secrets
              key: eventstore-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: policycortex-core
  namespace: policycortex-dev
  labels:
    app: policycortex-core
spec:
  selector:
    app: policycortex-core
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP