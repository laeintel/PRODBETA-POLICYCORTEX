{
  "permissions": {
    "allow": [
      "Bash(cargo:*)",
      "Bash(SUBSCRIPTION_ID=\"205b477d-17e7-4b3b-92c1-32cf02626b78\")",
      "Bash(export AZURE_SUBSCRIPTION_ID=\"205b477d-17e7-4b3b-92c1-32cf02626b78\")",
      "Bash(-e AZURE_SUBSCRIPTION_ID=205b477d-17e7-4b3b-92c1-32cf02626b78 )",
      "Bash(-e AZURE_TENANT_ID=9ef5b184-d371-462a-bc75-5024ce8baff7 )",
      "Bash(-e AZURE_CLIENT_ID=1ecc95d1-e5bb-43e2-9324-30a17cb6b01c )",
      "Bash(-e REDIS_URL=redis://host.docker.internal:6379 )",
      "Bash(-e RUST_LOG=debug )",
      "Bash(policycortex-core)",
      "Bash(-e AZURE_SUBSCRIPTION_ID=205b477d-17e7-4b3b-92c1-32cf02626b78 )",
      "Bash(-e AZURE_TENANT_ID=9ef5b184-d371-462a-bc75-5024ce8baff7 )",
      "Bash(-e AZURE_CLIENT_ID=1ecc95d1-e5bb-43e2-9324-30a17cb6b01c )",
      "Bash(-e REDIS_URL=redis://host.docker.internal:6379 )",
      "Bash(-e RUST_LOG=debug )",
      "Bash(-v C:/Users/leona/.azure:/root/.azure:ro )",
      "Bash(./start-dev.bat)",
      "Bash(dir:*)",
      "Bash(./scripts/test-workflow.sh:*)",
      "Bash(scripts\\test-workflow.sh:*)",
      "Bash(powershell:*)",
      "Bash(start-training.bat --mode local)",
      "Bash(cmd /c:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(curl:*)",
      "Bash(docker ps:*)",
      "Bash(npm install)",
      "Bash(npm run dev:*)",
      "Bash(az account show:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(start-api.bat)",
      "Bash(./start-local.bat)",
      "Bash(npm run build:*)",
      "Bash(npm run type-check:*)",
      "Bash(npx tsc:*)",
      "Bash(rm:*)",
      "Bash(gh project create:*)",
      "Bash(gh issue create:*)",
      "Bash(gh auth:*)",
      "Bash(gh label create:*)",
      "Bash(gh issue list:*)",
      "Bash(gh api:*)",
      "Bash(gh issue edit:*)",
      "Bash(gh project list:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(gh issue comment:*)",
      "Bash(gh label:*)",
      "Bash(where cargo)",
      "Bash(do gh issue edit $issue --add-label \"in-review\")",
      "Bash(gh repo view:*)",
      "Bash(mkdir:*)",
      "Bash(wsl:*)",
      "Bash(C:Usersleonacursor-agent.bat --version)",
      "Bash(cursor-agent.bat --version)",
      "Bash(C:\\Users\\leona\\cursor-agent.bat --version)",
      "Bash(call C:Usersleonacursor-agent.bat --version)",
      "Bash(set USE_REAL_DATA=true)",
      "Bash(set AZURE_SUBSCRIPTION_ID=205b477d-17e7-4b3b-92c1-32cf02626b78)",
      "Bash(set AZURE_TENANT_ID=9ef5b184-d371-462a-bc75-5024ce8baff7)",
      "Bash(sed:*)",
      "Bash(.start-backend.bat)",
      "Bash(docker-compose:*)",
      "Bash(docker-build-run.bat)",
      "Bash(az ad app federated-credential list:*)",
      "Bash(docker:*)",
      "Bash(az ad app federated-credential create:*)",
      "Bash(az role assignment create:*)",
      "Bash(az ad sp show:*)",
      "Bash(az role assignment list:*)",
      "Bash(az account set:*)",
      "Bash(az account list:*)",
      "Bash(terraform:*)",
      "Bash(az storage account create:*)",
      "Bash(gh secret:*)",
      "Bash(az storage account show:*)",
      "Bash(az storage account list:*)",
      "Bash(git branch:*)",
      "Bash(az login:*)",
      "Bash(git check-ignore:*)",
      "Bash(.restart-services.bat)",
      "Bash(bash:*)",
      "Bash(az:*)",
      "Bash(.start-dev.bat)",
      "Bash(start-dev.bat)",
      "Bash(./restart-services.bat)",
      "Bash(taskkill:*)",
      "Bash(npm run start:*)",
      "Bash(uvicorn:*)",
      "Bash(npx next:*)",
      "Bash(npm install:*)",
      "Bash(git commit:*)",
      "Bash(psql:*)",
      "Bash(./start-api-only.bat)",
      "Bash(git archive:*)",
      "Bash(./create-backup.bat)",
      "Bash(set DATABASE_URL=postgresql://postgres:postgres@localhost:5432/policycortex)",
      "Bash(git rm:*)",
      "Bash(set SQLX_OFFLINE=true)",
      "Bash(set SQLX_OFFLINE=)",
      "Bash(git fetch:*)",
      "Bash(git restore:*)",
      "Bash(grep:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run:*)"
    ],
    "deny": []
  }
}