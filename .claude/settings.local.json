{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(dir)",
      "Bash(mkdir:*)",
      "Bash(cd:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(touch:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "*",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(az account set:*)",
      "Bash(az account:*)",
      "Bash(az login:*)",
      "Bash(az ad sp create-for-rbac:*)",
      "Bash(az role assignment create:*)",
      "Bash(az group create:*)",
      "Bash(az acr create:*)",
      "Bash(az group:*)",
      "Bash(az:*)",
      "Bash(az provider register:*)",
      "Bash(az provider show:*)",
      "Bash(az provider:*)",
      "Bash(gh:*)",
      "Bash(where gh)",
      "Bash(winget install:*)",
      "Bash(refreshenv)",
      "Bash(powershell:*)",
      "Bash(ls:*)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" --version)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" auth login)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CLIENT_ID --body \"743ee574-345a-493c-bdd4-32c9972e288c\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CLIENT_SECRET --body \"oUG8Q~e1VD76qhwbSQO.d.vzNydnTGqg9pydRcp_\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_SUBSCRIPTION_ID --body \"9f16cc88-89ce-49ba-a96d-308ed3169595\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_TENANT_ID --body \"9ef5b184-d371-462a-bc75-5024ce8baff7\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" auth status)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CREDENTIALS --body '{\n  \"\"clientId\"\": \"\"743ee574-345a-493c-bdd4-32c9972e288c\"\",\n  \"\"clientSecret\"\": \"\"oUG8Q~e1VD76qhwbSQO.d.vzNydnTGqg9pydRcp_\"\",\n  \"\"subscriptionId\"\": \"\"9f16cc88-89ce-49ba-a96d-308ed3169595\"\",\n  \"\"tenantId\"\": \"\"9ef5b184-d371-462a-bc75-5024ce8baff7\"\",\n  \"\"activeDirectoryEndpointUrl\"\": \"\"https://login.microsoftonline.com\"\",\n  \"\"resourceManagerEndpointUrl\"\": \"\"https://management.azure.com/\"\",\n  \"\"activeDirectoryGraphResourceId\"\": \"\"https://graph.windows.net/\"\",\n  \"\"sqlManagementEndpointUrl\"\": \"\"https://management.core.windows.net:8443/\"\",\n  \"\"galleryEndpointUrl\"\": \"\"https://gallery.azure.com/\"\",\n  \"\"managementEndpointUrl\"\": \"\"https://management.core.windows.net/\"\"\n}')",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY --body \"policycortexacr1752847541.azurecr.io\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY_USERNAME --body \"policycortexacr1752847541\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY_PASSWORD --body \"t4vGlwliTvLArFQnS3HSl1bNl5bJo8B99lZsvQxFYR+ACRD5HFdd\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_STORAGE_ACCOUNT --body \"stpolicycortex1752847690\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_CONTAINER --body \"terraform-state\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_RESOURCE_GROUP --body \"rg-policycortex-shared\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_DEV --body \"rg-policycortex-dev\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_STAGING --body \"rg-policycortex-staging\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_PROD --body \"rg-policycortex-prod\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_DEV --body \"aks-policycortex-dev\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_STAGING --body \"aks-policycortex-staging\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_PROD --body \"aks-policycortex-prod\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret list)",
      "Bash(git commit:*)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npm test)",
      "Bash(npm run build:*)",
      "Bash(terraform:*)",
      "Bash(az ad sp show:*)",
      "Bash(az role assignment list:*)",
      "Bash(az storage account update:*)",
      "Bash(grep:*)",
      "Bash(docker build:*)",
      "Bash(git config:*)",
      "Bash(claude doctor)",
      "Bash(venvScripts:*)",
      "Bash(.venvScriptsactivate)",
      "Bash(uvicorn:*)",
      "Bash(curl:*)",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"ENVIRONMENT=development\" )",
      "Bash(\"DATABASE_URL=postgresql://sqladmin:$SQL_PASSWORD@policycortex-sql-dev.database.windows.net:5432/policycortex_dev?sslmode=require\" )",
      "Bash(\"COSMOS_CONNECTION_STRING=$COSMOS_CONN\" )",
      "Bash(\"REDIS_URL=$REDIS_CONN\" )",
      "Bash(\"AZURE_KEY_VAULT_URL=https://kvpolicycortexdev.vault.azure.net/\" )",
      "Bash(\"LOG_LEVEL=info\")",
      "Bash(./fix_container_apps.sh:*)",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"AZURE_CLIENT_SECRET=placeholder-secret-managed-identity-used\" )",
      "Bash(\"AZURE_ML_WORKSPACE_NAME=policycortex-ml-dev\")",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"AZURE_CLIENT_SECRET=placeholder-secret-managed-identity-used\" )",
      "Bash(# Assign Key Vault Secrets User role\naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Key Vault Secrets User\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.KeyVault/vaults/kvpolicycortexdev\n\n# Assign Cosmos DB Built-in Data Contributor role  \naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Cosmos DB Built-in Data Contributor\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.DocumentDB/databaseAccounts/policycortex-cosmos-dev\n\n# Assign Redis Cache Contributor role\naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Redis Cache Contributor\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.Cache/Redis/policycortex-redis-dev)",
      "Bash(--assignee-object-id 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d )",
      "Bash(--assignee-principal-type ServicePrincipal )",
      "Bash(--role \"Contributor\" )",
      "Bash(--scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev)",
      "WebFetch(domain:registry.terraform.io)",
      "Bash(yamllint:*)",
      "Bash(pip check)",
      "Bash(claude doctor:*)",
      "Bash(claude --version)",
      "Bash(where claude)",
      "Bash(claude config get:*)",
      "Bash(claude config list:*)",
      "Bash($env:ARM_USE_CLI=\"true\")",
      "Bash(export ARM_USE_CLI=true)",
      "Bash(set FORCE_COLOR=0)",
      "Bash(./cleanup-failed-resources.sh:*)",
      "Bash(./rename-resources.sh:*)",
      "Bash(./update-yaml-resources.sh:*)",
      "Bash(docker push:*)",
      "Bash(test:*)",
      "Bash(./cleanup.sh:*)",
      "Bash(for app in ca-api-gateway-dev ca-azure-integration-dev ca-ai-engine-dev ca-conversation-dev ca-notification-dev ca-data-processing-dev)",
      "Bash(do echo \"=== $app ===\")",
      "Bash(done)",
      "Bash(do echo \"Updating $app...\")",
      "Bash(for service in azure_integration notification data_processing)",
      "Bash(do echo \"=== $service ===\")",
      "Bash(for app in ca-api-gateway-dev ca-azure-integration-dev ca-ai-engine-dev ca-conversation-dev ca-notification-dev ca-data-processing-dev ca-frontend-dev)",
      "Bash(echo:*)",
      "Bash(docker logs:*)",
      "Bash(for service in ca-azure-integration-dev ca-conversation-dev ca-api-gateway-dev ca-data-processing-dev ca-notification-dev)",
      "Bash(do echo \"Updating $service...\")",
      "Bash(winget:*)",
      "Bash(npm:*)",
      "Bash(py:*)",
      "Bash(venv/Scripts/pip.exe install:*)",
      "Bash(venv/Scripts/python.exe -m pip install:*)",
      "Bash(venv/Scripts/pip.exe index versions:*)",
      "Bash(venv/Scripts/pip.exe search azure-mgmt-policy)",
      "Bash(venv/Scripts/pip.exe list:*)",
      "Bash(docker:*)",
      "Bash(copy:*)",
      "Bash(start cmd /k \"start-local.bat\")",
      "Bash(....venvScriptspython.exe -m uvicorn main:app --reload --port 8000 --host 0.0.0.0)",
      "Bash(../../venv/Scripts/python.exe -m uvicorn main:app --reload --port 8000 --host 0.0.0.0)",
      "Bash(set ENVIRONMENT=development)",
      "Bash(set SERVICE_NAME=api_gateway)",
      "Bash(set JWT_SECRET_KEY=dev-key)",
      "Bash(set AZURE_CLIENT_ID=dummy)",
      "Bash(set AZURE_INTEGRATION_URL=http://localhost:8001)",
      "Bash(set AI_ENGINE_URL=http://localhost:8002)",
      "Bash(set DATA_PROCESSING_URL=http://localhost:8003)",
      "Bash(set CONVERSATION_URL=http://localhost:8004)",
      "Bash(set NOTIFICATION_URL=http://localhost:8005)",
      "Bash(../../venv/Scripts/python.exe -m uvicorn main:app --port 8000 --host 0.0.0.0)",
      "Bash(backend/venv/Scripts/python.exe test-api.py)",
      "Bash(git pull:*)",
      "Bash(git rm:*)",
      "Bash(pwsh:*)",
      "Bash(scriptssetup-keyvault-simple.bat)",
      "Bash(for app in ca-api-gateway-dev ca-ai-engine-dev ca-azure-integration-dev ca-data-processing-dev ca-conversation-dev ca-notification-dev)",
      "Bash(./scripts/update-container-apps.sh:*)",
      "Bash(--name ca-frontend-dev )",
      "Bash(--resource-group rg-policortex001-app-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"VITE_API_BASE_URL=https://ca-api-gateway-dev.delightfulsmoke-bbe56ef9.eastus.azurecontainerapps.io/api\" )",
      "Bash(--output none)",
      "Bash(git checkout:*)",
      "Bash(--display-name \"PolicyCortex Dev\" )",
      "Bash(--sign-in-audience AzureADMyOrg )",
      "Bash(--web-redirect-uris \"https://ca-frontend-dev.delightfulsmoke-bbe56ef9.eastus.azurecontainerapps.io\" \"http://localhost:5173\" )",
      "Bash(--enable-id-token-issuance )",
      "Bash(--enable-access-token-issuance )",
      "Bash(--query \"{appId:appId, displayName:displayName}\" )",
      "Bash(--output json)",
      "Bash(--vault-name kvpolicortex001dev )",
      "Bash(--name azure-client-id )",
      "Bash(--value \"1ecc95d1-e5bb-43e2-9324-30a17cb6b01c\" )",
      "Bash(--id 1ecc95d1-e5bb-43e2-9324-30a17cb6b01c )",
      "Bash(--api 00000003-0000-0000-c000-000000000000 )",
      "Bash(--api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope )",
      "Bash(del fix_whitespace.py comprehensive_lint_fix.py fix_syntax_errors.py)",
      "Bash(start:*)",
      "Bash(timeout:*)",
      "Bash(/dev/null)",
      "Bash(cls)",
      "Bash(clear)",
      "Bash(git stash:*)",
      "Bash(pip index versions:*)",
      "Bash(git log:*)",
      "Bash(kubectl config:*)",
      "Bash(kubectl:*)",
      "Bash(export ACR_NAME=crpolicortex001dev)",
      "Bash(export ENVIRONMENT=dev)",
      "Bash(ACR_NAME=crpolicortex001dev ENVIRONMENT=dev bash deploy.sh)",
      "Bash(sed:*)",
      "Bash(bash:*)",
      "Bash(Start-Process \"C:\\Program Files\\Docker\\Docker\\Docker Desktop.exe\" -WindowStyle Hidden)",
      "Bash(tar:*)",
      "Bash(if exist \"node_modules\\.cache\" rmdir /s /q \"node_modules\\.cache\")",
      "Bash(taskkill:*)",
      "Bash(./start-port-3000.bat)",
      "Bash(../../venv/Scripts/python.exe:*)",
      "Bash(git tag:*)",
      "Bash(venv/Scripts/python.exe -m uvicorn:*)",
      "Bash(cmd /c:*)",
      "Bash(venv/Scripts/python.exe -c \"import services.api_gateway.main_simple; print(''File imports successfully'')\")",
      "Bash(venv/Scripts/python.exe:*)",
      "Bash(SET SERVICE_PORT=8012)",
      "Bash(\"C:\\Users\\leona\\Documents\\AeoliTech\\policycortex\\backend\\venv\\Scripts\\python.exe\" main_simple.py)",
      "Bash(and see what's not compliance and what's compliant.\"\n\n## Backend Enhancements (main_simple.py)\n- ✅ Added real Azure Policy compliance endpoint with 73 verified resources\n- ✅ Implemented policy details drill-down showing 47 compliant, 26 non-compliant resources  \n- ✅ Fixed async/await coroutine handling for policy details endpoint\n- ✅ Integrated real Azure resource data with compliance state mapping\n- ✅ Added comprehensive resource metadata (location, resource group, policy definitions)\n- ✅ Removed undefined variable references causing Internal Server Error\n- ✅ Added real compliance percentage calculation (64.4% compliance rate)\n\n## Frontend Enhancements\n### Policies Page (PoliciesPage.tsx)\n- ✅ Connected to real policy API endpoints for live data display\n- ✅ Added clickable table rows for policy navigation\n- ✅ Enhanced policy summary cards with real compliance metrics\n- ✅ Added policy type, category, and effect display with Material-UI chips\n\n### Policy Details Page (PolicyDetailsPage.tsx)  \n- ✅ Implemented comprehensive policy details view with 3 tabs:\n  - Resource Compliance: Shows all 73 resources with compliance status\n  - Policy Definition: Displays policy metadata and configuration\n  - Parameters & Metadata: Shows assignment details and data source\n- ✅ Added filtering by compliance status (all/compliant/non-compliant)\n- ✅ Added search functionality across resource names, types, and resource groups\n- ✅ Real-time compliance metrics display with progress indicators\n- ✅ Detailed resource table with compliance reasons and timestamps\n\n### Configuration Updates\n- ✅ Updated API endpoints to use port 8012 for enhanced backend\n- ✅ Configured proper CORS and environment variable handling\n- ✅ Updated Conversation page for real Azure data integration\n\n## Key Features Implemented\n1. **Real Azure Data Integration**: Live policy compliance from user''s Azure subscription\n2. **Policy Drill-Down**: Detailed resource-level compliance analysis  \n3. **Comprehensive Filtering**: Filter by compliance status and search resources\n4. **Real Compliance Metrics**: 73 total resources, 64.4% compliance rate\n5. **Resource Details**: Individual resource compliance with detailed metadata\n6. **Error Resolution**: Fixed async/await and undefined variable issues\n\n## Technical Improvements\n- Resolved coroutine handling in FastAPI endpoints\n- Enhanced error handling for API responses  \n- Improved frontend TypeScript type safety\n- Added proper loading states and error boundaries\n- Optimized API response structure for frontend consumption\n\n## Data Source\n- Live Azure subscription data (verified 73 resources)\n- Real compliance states from Azure Policy Insights\n- Structured resource metadata with governance context\n- Timestamp tracking for compliance evaluations\n\nThis implementation provides users with a complete policy compliance management\ninterface, allowing detailed analysis of their Azure governance posture with\nreal-time data from their Azure subscription.\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git remote add:*)",
      "Bash(SET SERVICE_PORT=8013)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" main_simple.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_rest_api.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_policy_details.py)",
      "Bash(set SERVICE_PORT=8013)",
      "Bash(set SERVICE_PORT=8014)",
      "Bash(--location \"East US\" )",
      "Bash(--template-file main.bicep )",
      "Bash(--parameters environment=dev )",
      "Bash(--parameters location=\"East US\" )",
      "Bash(--parameters owner=\"AeoliTech\" )",
      "Bash(--parameters allowedIps=[] )",
      "Bash(--parameters createTerraformAccessPolicy=false )",
      "Bash(--parameters deployContainerApps=true )",
      "Bash(--parameters deploySqlServer=false )",
      "Bash(--parameters deployMLWorkspace=false )",
      "Bash(--parameters deployOpenAI=false )",
      "Bash(--parameters jwtSecretKey=\"development-secret-key-change-in-production\")",
      "Bash(pkill:*)",
      "Bash(restart-frontend-3000.bat)",
      "Bash(./restart-frontend-3000.bat)",
      "Bash(SET SERVICE_PORT=8015)",
      "Bash(env SERVICE_PORT=8015 \"..\\..\\venv\\Scripts\\python.exe\" main_simple.py)",
      "Bash(del nul)",
      "Bash(env SERVICE_PORT=8016 \"..\\..\\venv\\Scripts\\python.exe\" main_simple.py)",
      "Bash(env VITE_PORT=3000 npm run dev)",
      "Bash(where az)",
      "Bash(del debug-runner.yml kubernetes-deploy.yml test-runner.yml)",
      "Bash(./deploy-infrastructure-step-by-step.sh:*)",
      "Bash(./deploy-simple.sh)",
      "Bash(.\\venv\\Scripts\\pip.exe install aiohttp fastapi uvicorn python-jose[cryptography] python-multipart pydantic structlog httpx)",
      "Bash(./deploy-missing-resources.sh:*)",
      "Bash(./create-container-apps.sh:*)",
      "Bash(./create-container-apps-simple.sh:*)",
      "Bash(true)",
      "Bash(set SERVICE_PORT=8000)",
      "Bash(..\\..\\venv\\Scripts\\python.exe main_simple.py)",
      "Bash(set VITE_PORT=3000)",
      "Bash(set PORT=3000)",
      "Bash(git branch:*)",
      "Bash(del test-params.json)",
      "Bash(while az group show --name \"rg-pcx-app-dev\")",
      "Bash(do:*)",
      "Bash(while az group show --name \"rg-pcx-app-dev\" --query \"name\" -o tsv)",
      "Bash(git merge:*)",
      "Bash(set SERVICE_PORT=8012)",
      "Bash(set PORT=8012)",
      "Bash(env SERVICE_PORT=8012 \"..\\..\\venv\\Scripts\\python.exe\" main_simple.py)",
      "Bash(--assignee 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--role \"Key Vault Secrets Officer\" )",
      "Bash(--scope \"/subscriptions/205b477d-17e7-4b3b-92c1-32cf02626b78/resourceGroups/rg-pcx-app-dev/providers/Microsoft.KeyVault/vaults/kv-pcx-dev\")",
      "Bash(--assignee 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--role \"Key Vault Secrets Officer\" )",
      "Bash(--assignee-object-id 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--assignee-principal-type ServicePrincipal)",
      "Bash(--assignee-object-id 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--role \"Key Vault Secrets Officer\" )",
      "Bash(--assignee-object-id 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--role \"Key Vault Secrets Officer\" )",
      "Bash(--name kv-pcx-dev )",
      "Bash(--resource-group rg-pcx-app-dev )",
      "Bash(--object-id 178e2973-bb20-49da-ab80-0d1ddc7b0649 )",
      "Bash(--secret-permissions get list set delete)",
      "Bash(./scripts/setup-keyvault-secrets.sh:*)",
      "Bash(--name kv-pcx-dev )",
      "Bash(--resource-group rg-pcx-app-dev )",
      "Bash(--object-id 0117907b-62b8-40cb-80d6-bdc6061a5a0f )",
      "Bash(./scripts/sync-keyvault-to-containerapp.sh:*)",
      "Bash(backend/venv/Scripts/pip.exe install requests)",
      "Bash(backend/venv/Scripts/python.exe -m pip install requests)",
      "Bash(backend/venv/Scripts/python.exe test_patent_apis.py)",
      "Bash(set SERVICE_PORT=8010)",
      "Bash(set PORT=8010)",
      "Bash(set VITE_API_BASE_URL=http://localhost:8010)",
      "Bash(set PORT=5173)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_real_policies.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" azure_policy_fetcher.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" debug_policy_ids.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_ids.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_direct.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" azure_cost_fetcher.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_cost_api.py)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_all_cost_endpoints.py)",
      "Bash(set SERVICE_PORT=8016)",
      "Bash(\"..\\..\\venv\\Scripts\\python.exe\" test_endpoints_simple.py)",
      "Bash(git reset:*)",
      "Bash(git remote:*)",
      "Bash(./start-services.bat)",
      "Bash(....venvScriptspython.exe main_simple.py)",
      "Bash(.venvScriptspip.exe install torch --index-url https://download.pytorch.org/whl/cpu)",
      "Bash(for f in *.yml)",
      "Bash(head:*)"
    ],
    "deny": []
  }
}