{
  "permissions": {
    "allow": [
      "Bash(dir)",
      "Bash(mkdir:*)",
      "Bash(cd:*)",
      "Bash(ls:*)",
      "Bash(pwd)",
      "Bash(touch:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(chgrp:*)",
      "*",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(az account set:*)",
      "Bash(az account:*)",
      "Bash(az login:*)",
      "Bash(az ad sp create-for-rbac:*)",
      "Bash(az role assignment create:*)",
      "Bash(az group create:*)",
      "Bash(az acr create:*)",
      "Bash(az group:*)",
      "Bash(az:*)",
      "Bash(az provider register:*)",
      "Bash(az provider show:*)",
      "Bash(az provider:*)",
      "Bash(gh:*)",
      "Bash(where gh)",
      "Bash(winget install:*)",
      "Bash(refreshenv)",
      "Bash(powershell:*)",
      "Bash(ls:*)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" --version)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" auth login)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CLIENT_ID --body \"743ee574-345a-493c-bdd4-32c9972e288c\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CLIENT_SECRET --body \"oUG8Q~e1VD76qhwbSQO.d.vzNydnTGqg9pydRcp_\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_SUBSCRIPTION_ID --body \"9f16cc88-89ce-49ba-a96d-308ed3169595\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_TENANT_ID --body \"9ef5b184-d371-462a-bc75-5024ce8baff7\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" auth status)",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CREDENTIALS --body '{\n  \"\"clientId\"\": \"\"743ee574-345a-493c-bdd4-32c9972e288c\"\",\n  \"\"clientSecret\"\": \"\"oUG8Q~e1VD76qhwbSQO.d.vzNydnTGqg9pydRcp_\"\",\n  \"\"subscriptionId\"\": \"\"9f16cc88-89ce-49ba-a96d-308ed3169595\"\",\n  \"\"tenantId\"\": \"\"9ef5b184-d371-462a-bc75-5024ce8baff7\"\",\n  \"\"activeDirectoryEndpointUrl\"\": \"\"https://login.microsoftonline.com\"\",\n  \"\"resourceManagerEndpointUrl\"\": \"\"https://management.azure.com/\"\",\n  \"\"activeDirectoryGraphResourceId\"\": \"\"https://graph.windows.net/\"\",\n  \"\"sqlManagementEndpointUrl\"\": \"\"https://management.core.windows.net:8443/\"\",\n  \"\"galleryEndpointUrl\"\": \"\"https://gallery.azure.com/\"\",\n  \"\"managementEndpointUrl\"\": \"\"https://management.core.windows.net/\"\"\n}')",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY --body \"policycortexacr1752847541.azurecr.io\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY_USERNAME --body \"policycortexacr1752847541\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_CONTAINER_REGISTRY_PASSWORD --body \"t4vGlwliTvLArFQnS3HSl1bNl5bJo8B99lZsvQxFYR+ACRD5HFdd\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_STORAGE_ACCOUNT --body \"stpolicycortex1752847690\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_CONTAINER --body \"terraform-state\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set TERRAFORM_BACKEND_RESOURCE_GROUP --body \"rg-policycortex-shared\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_DEV --body \"rg-policycortex-dev\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_STAGING --body \"rg-policycortex-staging\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AZURE_RESOURCE_GROUP_PROD --body \"rg-policycortex-prod\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_DEV --body \"aks-policycortex-dev\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_STAGING --body \"aks-policycortex-staging\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret set AKS_CLUSTER_NAME_PROD --body \"aks-policycortex-prod\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh.exe\" secret list)",
      "Bash(git commit:*)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npm test)",
      "Bash(npm run build:*)",
      "Bash(terraform:*)",
      "Bash(az ad sp show:*)",
      "Bash(az role assignment list:*)",
      "Bash(az storage account update:*)",
      "Bash(grep:*)",
      "Bash(docker build:*)",
      "Bash(git config:*)",
      "Bash(claude doctor)",
      "Bash(venvScripts:*)",
      "Bash(.venvScriptsactivate)",
      "Bash(uvicorn:*)",
      "Bash(curl:*)",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"ENVIRONMENT=development\" )",
      "Bash(\"DATABASE_URL=postgresql://sqladmin:$SQL_PASSWORD@policycortex-sql-dev.database.windows.net:5432/policycortex_dev?sslmode=require\" )",
      "Bash(\"COSMOS_CONNECTION_STRING=$COSMOS_CONN\" )",
      "Bash(\"REDIS_URL=$REDIS_CONN\" )",
      "Bash(\"AZURE_KEY_VAULT_URL=https://kvpolicycortexdev.vault.azure.net/\" )",
      "Bash(\"LOG_LEVEL=info\")",
      "Bash(./fix_container_apps.sh:*)",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"AZURE_CLIENT_SECRET=placeholder-secret-managed-identity-used\" )",
      "Bash(\"AZURE_ML_WORKSPACE_NAME=policycortex-ml-dev\")",
      "Bash(--name ca-api-gateway-dev )",
      "Bash(--resource-group rg-policycortex-dev )",
      "Bash(--set-env-vars )",
      "Bash(\"AZURE_CLIENT_SECRET=placeholder-secret-managed-identity-used\" )",
      "Bash(# Assign Key Vault Secrets User role\naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Key Vault Secrets User\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.KeyVault/vaults/kvpolicycortexdev\n\n# Assign Cosmos DB Built-in Data Contributor role  \naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Cosmos DB Built-in Data Contributor\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.DocumentDB/databaseAccounts/policycortex-cosmos-dev\n\n# Assign Redis Cache Contributor role\naz role assignment create \\\n  --assignee 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d \\\n  --role \"\"Redis Cache Contributor\"\" \\\n  --scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev/providers/Microsoft.Cache/Redis/policycortex-redis-dev)",
      "Bash(--assignee-object-id 5389fdab-721b-4aa9-b9c1-5e33aa9dde3d )",
      "Bash(--assignee-principal-type ServicePrincipal )",
      "Bash(--role \"Contributor\" )",
      "Bash(--scope /subscriptions/9f16cc88-89ce-49ba-a96d-308ed3169595/resourceGroups/rg-policycortex-dev)",
      "WebFetch(domain:registry.terraform.io)",
      "Bash(yamllint:*)",
      "Bash(pip check)",
      "Bash(claude doctor:*)",
      "Bash(claude --version)",
      "Bash(where claude)",
      "Bash(claude config get:*)",
      "Bash(claude config list:*)",
      "Bash($env:ARM_USE_CLI=\"true\")",
      "Bash(export ARM_USE_CLI=true)",
      "Bash(set FORCE_COLOR=0)",
      "Bash(./cleanup-failed-resources.sh:*)",
      "Bash(./rename-resources.sh:*)",
      "Bash(./update-yaml-resources.sh:*)",
      "Bash(docker push:*)",
      "Bash(test:*)",
      "Bash(./cleanup.sh:*)",
      "Bash(for app in ca-api-gateway-dev ca-azure-integration-dev ca-ai-engine-dev ca-conversation-dev ca-notification-dev ca-data-processing-dev)",
      "Bash(do echo \"=== $app ===\")",
      "Bash(done)",
      "Bash(do echo \"Updating $app...\")",
      "Bash(for service in azure_integration notification data_processing)",
      "Bash(do echo \"=== $service ===\")",
      "Bash(for app in ca-api-gateway-dev ca-azure-integration-dev ca-ai-engine-dev ca-conversation-dev ca-notification-dev ca-data-processing-dev ca-frontend-dev)",
      "Bash(echo:*)"
    ],
    "deny": []
  }
}